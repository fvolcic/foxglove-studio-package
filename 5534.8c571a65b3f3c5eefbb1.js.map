{"version":3,"file":"5534.8c571a65b3f3c5eefbb1.js","mappings":"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","sources":["webpack:///../../packages/den/image/decodings.ts","webpack:///../../packages/den/image/PinholeCameraModel.ts","webpack:///../../packages/studio-base/src/components/CaptureErrorBoundary.tsx","webpack:///../../packages/studio-base/src/components/ExpandingToolbar.tsx","webpack:///../../packages/studio-base/src/components/PublishGoalIcon.tsx","webpack:///../../packages/studio-base/src/components/PublishPointIcon.tsx","webpack:///../../packages/studio-base/src/components/PublishPoseEstimateIcon.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/RendererContext.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/DebugGui.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/ObjectDetails.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/TopicLink.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/Interactions.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/InteractionContextMenu.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Renderable.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/foxglove.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/math.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/color.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/pointClouds/colors.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ros.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/pointClouds/fieldReaders.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/transforms/geometry.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/transforms/Transform.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/transforms/time.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/transforms/CoordinateFrame.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/transforms/TransformTree.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/transforms.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/updatePose.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/SceneExtension.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/normalizeMessages.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/topicIsConvertibleToSchema.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/FoxgloveGrid.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Input.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ModelCache.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Picker.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ScreenOverlay.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/LayerErrors.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/SettingsManager.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/SharedGeometry.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/lod.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/settings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/CameraStateSettings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableMarker.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/LineMaterial.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/materials.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableLineList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/projections.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Cameras.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Axis.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/SceneSettings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/FrameAxes.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/FrameSettings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Grids.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/DynamicBufferGeometry.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/pointExtensionUtils.ts","webpack:///../../packages/studio-base/src/util/Pose.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/LaserScans.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/TopicMarkers.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Markers.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/MeasurementTool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/OccupancyGrids.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/PointClouds.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableLineStrip.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Polygons.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableArrow.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableSphere.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Poses.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/PoseArrays.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/PublishClickTool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/PublishSettings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/types.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/TopicEntities.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderablePrimitive.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/materials/MeshStandardMaterialWithInstanceOpacity.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableArrows.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableCubes.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableCylinders.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableLines.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/dispose.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/models.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableModels.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableSpheres.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableTexts.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableTriangles.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/PrimitivePool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/SceneEntities.ts","webpack:///../../packages/den/urdf/parser.ts","webpack:///../../packages/den/urdf/index.ts","webpack:///../../packages/studio-base/src/util/geometry.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableCube.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableCylinder.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableMeshResource.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Urdfs.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/VelodyneScans.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/DynamicInstancedMesh.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableCubeList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderablePoints.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableSphereList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableTextViewFacing.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableTriangleList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/MarkerPool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Renderer.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Stats.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/publish.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ThreeDeeRender.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/index.tsx","webpack:///../../packages/studio-base/src/util/quatToEuler.ts","webpack:///../../packages/studio-base/src/util/getItemString.tsx"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nfunction yuvToRGBA8(\n  y1: number,\n  u: number,\n  y2: number,\n  v: number,\n  c: number,\n  output: Uint8ClampedArray,\n): void {\n  // rgba\n  output[c] = y1 + 1.402 * v;\n  output[c + 1] = y1 - 0.34414 * u - 0.71414 * v;\n  output[c + 2] = y1 + 1.772 * u;\n  output[c + 3] = 255;\n\n  // rgba\n  output[c + 4] = y2 + 1.402 * v;\n  output[c + 5] = y2 - 0.34414 * u - 0.71414 * v;\n  output[c + 6] = y2 + 1.772 * u;\n  output[c + 7] = 255;\n}\n\nexport function decodeYUV(\n  yuv: Int8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let c = 0;\n  let off = 0;\n\n  // populate 2 pixels at a time\n  const max = height * width;\n  for (let r = 0; r <= max; r += 2) {\n    const u = yuv[off]! - 128;\n    const y1 = yuv[off + 1]!;\n    const v = yuv[off + 2]! - 128;\n    const y2 = yuv[off + 3]!;\n    yuvToRGBA8(y1, u, y2, v, c, output);\n    c += 8;\n    off += 4;\n  }\n}\n\n// change name in the future do something more distinct\nexport function decodeYUYV(\n  yuyv: Int8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let c = 0;\n  let off = 0;\n\n  // populate 2 pixels at a time\n  const max = height * width;\n  for (let r = 0; r <= max; r += 2) {\n    const y1 = yuyv[off]!;\n    const u = yuyv[off + 1]! - 128;\n    const y2 = yuyv[off + 2]!;\n    const v = yuyv[off + 3]! - 128;\n    yuvToRGBA8(y1, u, y2, v, c, output);\n    c += 8;\n    off += 4;\n  }\n}\n\nexport function decodeRGB8(\n  rgb: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const r = rgb[inIdx++]!;\n    const g = rgb[inIdx++]!;\n    const b = rgb[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeRGBA8(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const r = rgba[inIdx++]!;\n    const g = rgba[inIdx++]!;\n    const b = rgba[inIdx++]!;\n    const a = rgba[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = a;\n  }\n}\n\nexport function decodeBGRA8(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const b = rgba[inIdx++]!;\n    const g = rgba[inIdx++]!;\n    const r = rgba[inIdx++]!;\n    const a = rgba[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = a;\n  }\n}\n\nexport function decodeBGR8(\n  bgr: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const b = bgr[inIdx++]!;\n    const g = bgr[inIdx++]!;\n    const r = bgr[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeFloat1c(\n  gray: Uint8Array,\n  width: number,\n  height: number,\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  is_bigendian: boolean,\n  output: Uint8ClampedArray,\n): void {\n  const view = new DataView(gray.buffer, gray.byteOffset);\n\n  let outIdx = 0;\n  for (let i = 0; i < width * height * 4; i += 4) {\n    const val = view.getFloat32(i, !is_bigendian) * 255;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeMono8(\n  mono8: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const ch = mono8[inIdx++]!;\n    output[outIdx++] = ch;\n    output[outIdx++] = ch;\n    output[outIdx++] = ch;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeMono16(\n  mono16: Uint8Array,\n  width: number,\n  height: number,\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  is_bigendian: boolean,\n  output: Uint8ClampedArray,\n  options?: { minValue?: number; maxValue?: number },\n): void {\n  const view = new DataView(mono16.buffer, mono16.byteOffset);\n\n  // Use user-provided max/min values, or default to 0-10000, consistent with image_view's default.\n  // References:\n  // https://github.com/ros-perception/image_pipeline/blob/42266892502427eb566a4dffa61b009346491ce7/image_view/src/nodes/image_view.cpp#L80-L88\n  // https://github.com/ros-visualization/rqt_image_view/blob/fe076acd265a05c11c04f9d04392fda951878f54/src/rqt_image_view/image_view.cpp#L582\n  // https://github.com/ros-visualization/rviz/blob/68b464fb6571b8760f91e8eca6fb933ba31190bf/src/rviz/image/ros_image_texture.cpp#L114\n  const minValue = options?.minValue ?? 0;\n  let maxValue = options?.maxValue ?? 10000;\n  if (maxValue === minValue) {\n    maxValue = minValue + 1;\n  }\n\n  let outIdx = 0;\n  for (let i = 0; i < width * height * 2; i += 2) {\n    let val = view.getUint16(i, !is_bigendian);\n\n    val = ((val - minValue) / (maxValue - minValue)) * 255;\n\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = 255;\n  }\n}\n\n// Specialize the Bayer decode function to a certain encoding. For performance reasons, we use\n// new Function() -- this is about 20% faster than a switch statement and .bind().\nfunction makeSpecializedDecodeBayer(\n  tl: string,\n  tr: string,\n  bl: string,\n  br: string,\n): (data: Uint8Array, width: number, height: number, output: Uint8ClampedArray) => void {\n  // We probably can't afford real debayering/demosaicking, so do something simpler\n  // The input array look like a single-plane array of pixels.  However, each pixel represents a one particular color\n  // for a group of pixels in the 2x2 region.  For 'rggb', there color representatio for the 2x2 region looks like:\n  //\n  // R  | G0\n  // -------\n  // G1 | B\n  //\n  // In other words, a 2x2 region is represented by one R value, one B value, and two G values.  In sophisticated\n  // algorithms, each color will be weighted and interpolated to fill in the missing colors for the pixels.  These\n  // algorithms may reach beyond the local 2x2 region and use values from neighboring regions.\n  //\n  // We'll do something much simpler.  For each group of 2x2, we're replicate the R and B values for all pixels.\n  // For the two row, we'll replicate G0 for the green channels, and replicate G1 for the bottom row.\n  // eslint-disable-next-line no-new-func\n  return new Function(\n    \"data\",\n    \"width\",\n    \"height\",\n    \"output\",\n    `\n  for (let i = 0; i < height / 2; i++) {\n    let inIdx = i * 2 * width;\n    let outTopIdx = i * 2 * width * 4; // Addresses top row\n    let outBottomIdx = (i * 2 + 1) * width * 4; // Addresses bottom row\n    for (let j = 0; j < width / 2; j++) {\n      const tl = data[inIdx++];\n      const tr = data[inIdx++];\n      const bl = data[inIdx + width - 2];\n      const br = data[inIdx + width - 1];\n\n      const ${tl} = tl;\n      const ${tr} = tr;\n      const ${bl} = bl;\n      const ${br} = br;\n\n      // Top row\n      output[outTopIdx++] = r;\n      output[outTopIdx++] = g0;\n      output[outTopIdx++] = b;\n      output[outTopIdx++] = 255;\n\n      output[outTopIdx++] = r;\n      output[outTopIdx++] = g0;\n      output[outTopIdx++] = b;\n      output[outTopIdx++] = 255;\n\n      // Bottom row\n      output[outBottomIdx++] = r;\n      output[outBottomIdx++] = g1;\n      output[outBottomIdx++] = b;\n      output[outBottomIdx++] = 255;\n\n      output[outBottomIdx++] = r;\n      output[outBottomIdx++] = g1;\n      output[outBottomIdx++] = b;\n      output[outBottomIdx++] = 255;\n    }\n  }`,\n  ) as ReturnType<typeof makeSpecializedDecodeBayer>;\n}\n\nexport const decodeBayerRGGB8 = makeSpecializedDecodeBayer(\"r\", \"g0\", \"g1\", \"b\");\nexport const decodeBayerBGGR8 = makeSpecializedDecodeBayer(\"b\", \"g0\", \"g1\", \"r\");\nexport const decodeBayerGBRG8 = makeSpecializedDecodeBayer(\"g0\", \"b\", \"r\", \"g1\");\nexport const decodeBayerGRBG8 = makeSpecializedDecodeBayer(\"g0\", \"r\", \"b\", \"g1\");\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { CameraInfo } from \"./CameraInfo\";\n\ntype Vector2 = { x: number; y: number };\n\ntype Vector3 = { x: number; y: number; z: number };\n\ntype Matrix3 = [number, number, number, number, number, number, number, number, number];\n\n// prettier-ignore\ntype Matrix3x4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n];\n\ntype Vec8 = [number, number, number, number, number, number, number, number];\n\n/**\n * A pinhole camera model that can be used to rectify, unrectify, and project pixel coordinates.\n * Based on `ROSPinholeCameraModel` from the ROS `image_geometry` package. See\n * <http://docs.ros.org/diamondback/api/image_geometry/html/c++/pinhole__camera__model_8cpp_source.html>\n */\nexport class PinholeCameraModel {\n  /**\n   * Distortion parameters `[k1, k2, p1, p2, k3, k4, k5, k6]`. For `rational_polynomial`, all eight\n   * parameters are set. For `plumb_bob`, the last three parameters are set to zero. For no\n   * distortion model, all eight parameters are set to zero.\n   */\n  public D: Readonly<Vec8>;\n  /**\n   * Intrinsic camera matrix for the raw (distorted) images. 3x3 row-major matrix.\n   * ```\n   *     [fx  0 cx]\n   * K = [ 0 fy cy]\n   *     [ 0  0  1]\n   * ```\n   * Projects 3D points in the camera coordinate frame to 2D pixel coordinates using the focal\n   * lengths `(fx, fy)` and principal point `(cx, cy)`.\n   */\n  public K: Readonly<Matrix3>;\n  /**\n   * Projection/camera matrix. 3x4 row-major matrix.\n   * This matrix specifies the intrinsic (camera) matrix of the processed (rectified) image. That\n   * is, the left 3x3 portion is the normal camera intrinsic matrix for the rectified image.\n   *\n   * It projects 3D points in the camera coordinate frame to 2D pixel coordinates using the focal\n   * lengths `(fx', fy')` and principal point `(cx', cy')` - these may differ from the values in K.\n   * For monocular cameras, `Tx = Ty = 0`. Normally, monocular cameras will also have R = the\n   * identity and `P[1:3,1:3] = K`.\n   *\n   * For a stereo pair, the fourth column `[Tx Ty 0]'` is related to the position of the optical\n   * center of the second camera in the first camera's frame. We assume `Tz = 0` so both cameras are\n   * in the same stereo image plane. The first camera always has `Tx = Ty = 0`. For the right\n   * (second) camera of a horizontal stereo pair, `Ty = 0 and Tx = -fx' * B`, where `B` is the\n   * baseline between the cameras.\n   *\n   * Given a 3D point `[X Y Z]'`, the projection `(x, y)` of the point onto the rectified image is\n   * given by:\n   * ```\n   * [u v w]' = P * [X Y Z 1]'\n   *        x = u / w\n   *        y = v / w\n   * ```\n   * This holds for both images of a stereo pair.\n   */\n  public P: Readonly<Matrix3x4> | undefined;\n  /**\n   * Rectification matrix (stereo cameras only). 3x3 row-major matrix.\n   * A rotation matrix aligning the camera coordinate system to the ideal stereo image plane so\n   * that epipolar lines in both stereo images are parallel.\n   */\n  public R: Readonly<Matrix3>;\n  /** The full camera image width in pixels. */\n  public readonly width: number;\n  /** The full camera image height in pixels. */\n  public readonly height: number;\n\n  // Mostly copied from `fromCameraInfo`\n  // <http://docs.ros.org/diamondback/api/image_geometry/html/c++/pinhole__camera__model_8cpp_source.html#l00064>\n  public constructor(info: CameraInfo) {\n    const { binning_x, binning_y, roi, distortion_model: model, D, K, P, R, width, height } = info;\n    const fx = P[0];\n    const fy = P[5];\n\n    if (width <= 0 || height <= 0) {\n      throw new Error(`Invalid image size ${width}x${height}`);\n    }\n    if (model.length > 0 && model !== \"plumb_bob\" && model !== \"rational_polynomial\") {\n      throw new Error(`Unrecognized distortion_model \"${model}\"`);\n    }\n    if (K.length !== 0 && K.length !== 9) {\n      throw new Error(`K.length=${K.length}, expected 9`);\n    }\n    if (P.length !== 0 && P.length !== 12) {\n      throw new Error(`P.length=${K.length}, expected 12`);\n    }\n    if (R.length !== 0 && R.length !== 9) {\n      throw new Error(`R.length=${R.length}, expected 9`);\n    }\n    if (fx === 0 || fy === 0) {\n      throw new Error(`Invalid focal length (fx=${fx}, fy=${fy})`);\n    }\n\n    const D8 = [...D];\n    while (D8.length < 8) {\n      D8.push(0);\n    }\n    this.D = D8 as Vec8;\n    this.K = K.length === 9 ? (K as Matrix3) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    this.P = P.length === 12 ? (P as Matrix3x4) : undefined;\n    this.R = R.length === 9 ? (R as Matrix3) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    this.width = width;\n    this.height = height;\n\n    // Binning = 0 is considered the same as binning = 1 (no binning).\n    const binningX = binning_x !== 0 ? binning_x : 1;\n    const binningY = binning_y !== 0 ? binning_y : 1;\n\n    const adjustBinning = binningX > 1 || binningY > 1;\n    const adjustRoi = roi.x_offset !== 0 || roi.y_offset !== 0;\n\n    if (adjustBinning || adjustRoi) {\n      throw new Error(\n        \"Failed to initialize camera model: unable to handle adjusted binning and adjusted roi camera models.\",\n      );\n    }\n  }\n\n  /**\n   * Projects a 2D image pixel to a point on a plane in 3D world coordinates a\n   * unit distance along the Z axis. This is equivalent to `projectPixelTo3dRay`\n   * before normalizing.\n   *\n   * @param out - The output vector to receive the 3D point.\n   * @param pixel - The 2D image pixel coordinate.\n   * @returns `true` if the projection was successful, or `false` if the camera\n   *   projection matrix `P` is not set.\n   */\n  public projectPixelTo3dPlane(out: Vector3, pixel: Readonly<Vector2>): boolean {\n    const P = this.P;\n    if (!P) {\n      return false;\n    }\n\n    const fx = P[0];\n    const fy = P[5];\n    const cx = P[2];\n    const cy = P[6];\n    const tx = P[3];\n    const ty = P[7];\n\n    out.x = (pixel.x - cx - tx) / fx;\n    out.y = (pixel.y - cy - ty) / fy;\n    out.z = 1.0;\n\n    return true;\n  }\n\n  /**\n   * Projects a 2D image pixel into a 3D ray in world coordinates. This is\n   * equivalent to normalizing the result of `projectPixelTo3dPlane` to get a\n   * direction vector.\n   *\n   * @param out - The output vector to receive the 3D ray direction.\n   * @param pixel - The 2D image pixel coordinate.\n   * @returns `true` if the projection was successful, or `false` if the camera\n   *   projection matrix `P` is not set.\n   */\n  public projectPixelTo3dRay(out: Vector3, pixel: Readonly<Vector2>): boolean {\n    if (!this.projectPixelTo3dPlane(out, pixel)) {\n      return false;\n    }\n\n    // Normalize the ray direction\n    const invNorm = 1.0 / Math.sqrt(out.x * out.x + out.y * out.y + out.z * out.z);\n    out.x *= invNorm;\n    out.y *= invNorm;\n    out.z *= invNorm;\n\n    return true;\n  }\n\n  /**\n   * Rectifies the given pixel 2D coordinate.\n   *\n   * @param out - The output rectified 2D pixel coordinate.\n   * @param point - The input unrectified 2D pixel to rectify.\n   * @param iterations - The number of iterations to use in the iterative optimization.\n   * @returns The rectified pixel, a reference to `out`.\n   */\n  public rectifyPixel(out: Vector2, point: Readonly<Vector2>, iterations = 5): Vector2 {\n    if (!this.P) {\n      out.x = point.x;\n      out.y = point.y;\n      return out;\n    }\n\n    const { P, D } = this;\n    const [k1, k2, p1, p2, k3] = D;\n\n    const fx = P[0];\n    const fy = P[5];\n    const cx = P[2];\n    const cy = P[6];\n\n    // This method does three things:\n    //   1. Convert the input 2D point from pixel coordinates to normalized\n    //      coordinates by subtracting the principal point (cx, cy) and dividing\n    //      by the focal lengths (fx, fy).\n    //   2. Apply the distortion model to the normalized point using an\n    //      iterative optimization algorithm. This undoes the distortion that\n    //      was applied to the original image and yields an approximation of the\n    //      rectified point.\n    //   3. Convert the rectified point back to pixel coordinates by multiplying\n    //      by the focal lengths and adding the principal point.\n    // The distortion model is non-linear, so we use fixed-point iteration to\n    // incrementally iterate to an approximation of the solution. This approach\n    // is described at <http://peterabeles.com/blog/?p=73>. The Jacobi method is\n    // used here, balancing accuracy and speed. A more precise method such as\n    // Levenberg-Marquardt or the exact formula described in\n    // <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4934233/> could be used,\n    // but they are slower and less suitable for real-time applications such as\n    // visualization. Note that our method is only locally convergent, requiring\n    // a good \"initial guess\". This means we may not converge for extreme values\n    // such as points close to the focal plane.\n    //\n    // The implementation is based on code from\n    // <https://yangyushi.github.io/code/2020/03/04/opencv-undistort.html>\n    // You can read more about the equations used in the pinhole camera model at\n    // <https://docs.opencv.org/4.x/d9/d0c/group__calib3d.html#details>\n    let x = (point.x - cx) / fx;\n    let y = (point.y - cy) / fy;\n\n    const x0 = x;\n    const y0 = y;\n    const count = k1 !== 0 || k2 !== 0 || p1 !== 0 || p2 !== 0 || k3 !== 0 ? iterations : 1;\n    for (let i = 0; i < count; i++) {\n      const r2 = x * x + y * y; // squared distance in the image projected by the pinhole model\n      const k_inv = 1 / (1 + k1 * r2 + k2 * r2 * r2 + k3 * r2 * r2 * r2);\n      const delta_x = 2 * p1 * x * y + p2 * (r2 + 2 * x * x);\n      const delta_y = p1 * (r2 + 2 * y * y) + 2 * p2 * x * y;\n      x = (x0 - delta_x) * k_inv;\n      y = (y0 - delta_y) * k_inv;\n    }\n\n    out.x = x * fx + cx;\n    out.y = y * fy + cy;\n    return out;\n  }\n\n  /**\n   * Unrectifies the given 2D pixel coordinate.\n   *\n   * @param out - The output unrectified 2D pixel coordinate\n   * @param point - The input rectified 2D pixel coordinate\n   * @returns The unrectified pixel, a reference to `out`\n   */\n  public unrectifyPixel(out: Vector2, point: Readonly<Vector2>): Vector2 {\n    if (!this.P) {\n      out.x = point.x;\n      out.y = point.y;\n      return out;\n    }\n\n    const { P, R, D, K } = this;\n    const fx = P[0];\n    const fy = P[5];\n    const cx = P[2];\n    const cy = P[6];\n    const tx = P[3];\n    const ty = P[7];\n\n    // Formulae from docs for cv::initUndistortRectifyMap,\n    // <https://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html>\n\n    // x <- (u - c'x) / f'x\n    // y <- (v - c'y) / f'y\n    // c'x, f'x, etc. (primed) come from \"new camera matrix\" P[0:3, 0:3].\n    const x1 = (point.x - cx - tx) / fx;\n    const y1 = (point.y - cy - ty) / fy;\n    // [X Y W]^T <- R^-1 * [x y 1]^T\n    const X = R[0] * x1 + R[1] * y1 + R[2];\n    const Y = R[3] * x1 + R[4] * y1 + R[5];\n    const W = R[6] * x1 + R[7] * y1 + R[8];\n    const xp = X / W;\n    const yp = Y / W;\n\n    // x'' <- x'(1+k1*r^2+k2*r^4+k3*r^6) + 2p1*x'*y' + p2(r^2+2x'^2)\n    // y'' <- y'(1+k1*r^2+k2*r^4+k3*r^6) + p1(r^2+2y'^2) + 2p2*x'*y'\n    // where r^2 = x'^2 + y'^2\n    const r2 = xp * xp + yp * yp;\n    const r4 = r2 * r2;\n    const r6 = r4 * r2;\n    const a1 = 2 * xp * yp;\n    const k1 = D[0]!;\n    const k2 = D[1]!;\n    const p1 = D[2]!;\n    const p2 = D[3]!;\n    const k3 = D[4]!;\n    let barrel_correction = 1 + k1 * r2 + k2 * r4 + k3 * r6;\n    barrel_correction /= 1.0 + D[5] * r2 + D[6] * r4 + D[7] * r6;\n    const xpp = xp * barrel_correction + p1 * a1 + p2 * (r2 + 2 * (xp * xp));\n    const ypp = yp * barrel_correction + p1 * (r2 + 2 * (yp * yp)) + p2 * a1;\n\n    // map_x(u,v) <- x''fx + cx\n    // map_y(u,v) <- y''fy + cy\n    // cx, fx, etc. come from original camera matrix K.\n    out.x = xpp * K[0] + K[2];\n    out.y = ypp * K[4] + K[5];\n    return out;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport { Component, PropsWithChildren, ReactNode } from \"react\";\n\ntype Props = {\n  onError: (err: Error) => void;\n};\n\ntype State = {\n  hadError: boolean;\n};\n\n/** An error boundary that calls an onError function when it captures an error */\nexport class CaptureErrorBoundary extends Component<PropsWithChildren<Props>, State> {\n  public override state: State = {\n    hadError: false,\n  };\n\n  public override componentDidCatch(error: Error): void {\n    this.setState({ hadError: true });\n    this.props.onError(error);\n  }\n\n  public override render(): ReactNode {\n    // Avoid rendering children since the children are what caused the error\n    if (this.state.hadError) {\n      return <></>;\n    }\n\n    return this.props.children;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { ArrowMinimize24Filled } from \"@fluentui/react-icons\";\nimport { Paper, IconButton, Tabs, Tab, styled as muiStyled } from \"@mui/material\";\nimport { ReactElement, ReactNode } from \"react\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\n\nconst PANE_HEIGHT = 240;\n\nconst StyledIconButton = muiStyled(IconButton)({\n  fontSize: \"1rem !important\",\n\n  \"& svg:not(.MuiSvgIcon-root)\": {\n    fontSize: \"1rem !important\",\n  },\n});\n\nconst StyledTab = muiStyled(Tab)(({ theme }) => ({\n  minHeight: \"auto\",\n  minWidth: \"auto\",\n  padding: theme.spacing(1, 1.5, 1.125),\n  color: theme.palette.text.secondary,\n\n  \"&.Mui-selected\": {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst StyledTabs = muiStyled(Tabs)({\n  minHeight: \"auto\",\n\n  \".MuiTabs-indicator\": {\n    transform: \"scaleX(0.75)\",\n    height: 2,\n  },\n});\n\nconst Content = muiStyled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  backgroundColor: theme.palette.background.default,\n  width: 280,\n}));\n\nexport function ToolGroup<T>({ children }: { name: T; children: React.ReactElement }): JSX.Element {\n  return children;\n}\n\nexport function ToolGroupFixedSizePane({ children }: { children: ReactNode }): JSX.Element {\n  return (\n    <Stack padding={1} overflowX=\"hidden\" overflowY=\"auto\" style={{ maxHeight: PANE_HEIGHT }}>\n      {children}\n    </Stack>\n  );\n}\n\ntype Props<T extends string> = {\n  checked?: boolean;\n  children: React.ReactElement<typeof ToolGroup>[] | React.ReactElement<typeof ToolGroup>;\n  icon: ReactNode;\n  onSelectTab: (name: T | undefined) => void;\n  selectedTab?: T; // collapse the toolbar if selectedTab is undefined\n  tooltip: string;\n  dataTest?: string;\n};\n\nexport default function ExpandingToolbar<T extends string>({\n  children,\n  checked,\n  icon,\n  onSelectTab,\n  selectedTab,\n  tooltip,\n  dataTest,\n}: Props<T>): JSX.Element {\n  const expanded = selectedTab != undefined;\n\n  if (!expanded) {\n    let selectedTabLocal: T | undefined = selectedTab;\n    // default to the first child's name if no tab is selected\n    React.Children.forEach(children, (child) => {\n      if (selectedTabLocal == undefined) {\n        selectedTabLocal = child.props.name as T;\n      }\n    });\n\n    return (\n      <Paper square={false} elevation={4} style={{ pointerEvents: \"auto\" }}>\n        <StyledIconButton\n          color={checked === true ? \"info\" : \"default\"}\n          title={tooltip}\n          data-testid={`ExpandingToolbar-${tooltip}`}\n          onClick={() => onSelectTab(selectedTabLocal)}\n        >\n          {icon}\n        </StyledIconButton>\n      </Paper>\n    );\n  }\n  let selectedChild: ReactElement | undefined;\n\n  React.Children.forEach(children, (child) => {\n    if (!selectedChild || child.props.name === selectedTab) {\n      selectedChild = child;\n    }\n  });\n\n  const handleChange = (_event: React.SyntheticEvent, value: T | undefined) => {\n    if (value != undefined) {\n      onSelectTab(value);\n    }\n  };\n\n  return (\n    <Paper\n      data-testid={dataTest}\n      square={false}\n      elevation={4}\n      style={{\n        pointerEvents: \"auto\",\n      }}\n    >\n      <Paper>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <StyledTabs textColor=\"inherit\" value={selectedTab} onChange={handleChange}>\n            {React.Children.map(children, (child) => (\n              <StyledTab label={child.props.name} value={child.props.name} />\n            ))}\n          </StyledTabs>\n          <StyledIconButton onClick={() => onSelectTab(undefined)}>\n            <ArrowMinimize24Filled />\n          </StyledIconButton>\n        </Stack>\n      </Paper>\n      <Content>{selectedChild}</Content>\n    </Paper>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function PublishGoalIcon(props: SvgIconProps): JSX.Element {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <circle cx=\"12.03\" cy=\"18.5\" r=\"2\" />\n        <path d=\"M13.28,13.15V5H17L12,0,7.08,5h3.7v8.2a5.5,5.5,0,1,0,2.5,0ZM12,22a3.5,3.5,0,1,1,3.5-3.5A3.5,3.5,0,0,1,12,22Z\" />\n      </g>\n    </SvgIcon>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function PublishPointIcon(props: SvgIconProps): JSX.Element {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <circle cx=\"12\" cy=\"12\" r=\"2\" />\n        <path d=\"M12,17.5A5.5,5.5,0,1,1,17.5,12,5.51,5.51,0,0,1,12,17.5Zm0-9A3.5,3.5,0,1,0,15.5,12,3.5,3.5,0,0,0,12,8.5Z\" />\n      </g>\n    </SvgIcon>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function PublishPoseEstimateIcon(props: SvgIconProps): JSX.Element {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <path\n          d=\"M.23,8.71l7.85,7.41L12,13.29l4,2.83,7.85-7.41S20.8,4,12,4,.23,8.71.23,8.71Z\"\n          opacity=\"0.2\"\n        />\n        <circle cx=\"12.03\" cy=\"18.5\" r=\"2\" />\n        <path d=\"M13.28,13.15V5H17L12,0,7.08,5h3.7v8.2a5.5,5.5,0,1,0,2.5,0ZM12,22a3.5,3.5,0,1,1,3.5-3.5A3.5,3.5,0,0,1,12,22Z\" />\n        <path d=\"M16,16.12,14.6,14.67l1.46-1.37,1.37,1.45Zm2.18-2.06-1.37-1.45,1.45-1.37,1.37,1.45ZM20.34,12,19,10.55l1.45-1.37,1.38,1.45ZM22.52,10,21.15,8.49l1.31-1.24,1.37,1.46Z\" />\n        <path d=\"M8.08,16.12,6.63,14.75,8,13.3l1.46,1.37ZM5.9,14.06,4.45,12.69l1.37-1.45,1.45,1.37ZM3.72,12,2.27,10.63,3.64,9.18l1.45,1.37ZM1.54,10,.23,8.71,1.6,7.25,2.91,8.49Z\" />\n      </g>\n    </SvgIcon>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport { createContext, useContext, useEffect } from \"react\";\n\nimport { Renderer, RendererEvents } from \"./Renderer\";\n\nexport const RendererContext = createContext<Renderer | undefined>(undefined);\n\n/**\n * React hook to retrieve the Renderer instance registered with the\n * RendererContext. This will always return undefined from the ThreeDeeRender()\n * component since the context exists below ThreeDeeRender().\n */\nexport function useRenderer(): Renderer | undefined {\n  const renderer = useContext(RendererContext);\n  return renderer ?? undefined;\n}\n\n/**\n * React hook that subscribes to Renderer events. The optional\n * `rendererInstance` argument must be passed when calling from the\n * ThreeDeeRender() component which is above the RendererContext.\n * @param eventName Event name to subscribe to\n * @param listener Event callback\n * @param rendererInstance Optional Renderer instance to subscribe to instead of\n *   the reference returned by useRenderer()\n */\nexport function useRendererEvent<K extends keyof RendererEvents>(\n  eventName: K,\n  listener: (\n    ...args: EventEmitter.ArgumentMap<RendererEvents>[Extract<K, keyof RendererEvents>]\n  ) => void,\n  rendererInstance?: Renderer | ReactNull,\n): void {\n  const usedRenderer = useRenderer();\n  const renderer = rendererInstance ?? usedRenderer;\n\n  useEffect(() => {\n    renderer?.addListener(eventName, listener);\n    return () => void renderer?.removeListener(eventName, listener);\n  }, [listener, eventName, renderer]);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { GUI } from \"dat.gui\";\nimport { useEffect, useState } from \"react\";\n\nimport { Renderer } from \"./Renderer\";\nimport { useRenderer } from \"./RendererContext\";\n\nexport function DebugGui(): JSX.Element {\n  const [div, setDiv] = useState<HTMLDivElement | ReactNull>(ReactNull);\n  const renderer = useRenderer();\n\n  useEffect(() => {\n    if (!renderer || !div) {\n      return;\n    }\n\n    const gui = createDebugGui(renderer, div);\n    return () => void div.removeChild(gui.domElement);\n  }, [div, renderer]);\n\n  return <div ref={setDiv} />;\n}\n\nfunction createDebugGui(renderer: Renderer, div: HTMLDivElement): GUI {\n  const gui = new GUI({ autoPlace: false, width: 300 });\n  div.appendChild(gui.domElement);\n\n  const rendererFolder = gui.addFolder(\"Renderer\");\n  rendererFolder.add(renderer.gl, \"toneMappingExposure\", 0, 2, 0.01);\n  rendererFolder.add(renderer.gl, \"physicallyCorrectLights\", false);\n\n  return gui;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { first, omit } from \"lodash\";\nimport Tree from \"react-json-tree\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { RosValue } from \"@foxglove/studio-base/players/types\";\nimport { getItemString } from \"@foxglove/studio-base/util/getItemString\";\nimport { useJsonTreeTheme } from \"@foxglove/studio-base/util/globalConstants\";\n\nimport { InteractionData } from \"./types\";\n\ntype Props = {\n  readonly interactionData?: InteractionData;\n  readonly selectedObject?: RosValue;\n  readonly timezone: string | undefined;\n};\n\nfunction maybePlainObject(rawVal: unknown) {\n  if (typeof rawVal === \"object\" && rawVal && \"toJSON\" in rawVal) {\n    return (rawVal as { toJSON: () => unknown }).toJSON();\n  }\n  return rawVal;\n}\n\nfunction ObjectDetails({ interactionData, selectedObject, timezone }: Props): JSX.Element {\n  const jsonTreeTheme = useJsonTreeTheme();\n  const topic = interactionData?.topic ?? \"\";\n\n  // object to display may not be a plain-ole-data\n  // We need a plain object to sort the keys and omit interaction data\n  const plainObject = maybePlainObject(selectedObject);\n  const originalObject = omit(plainObject as Record<string, unknown>, \"interactionData\");\n\n  if (topic.length === 0) {\n    // show the original object directly if there is no interaction data\n    return (\n      <Stack paddingY={1}>\n        <Tree\n          data={selectedObject}\n          shouldExpandNode={(_markerKeyPath, _data, level) => level < 2}\n          invertTheme={false}\n          postprocessValue={maybePlainObject}\n          theme={{ ...jsonTreeTheme, tree: { margin: 0 } }}\n          hideRoot\n        />\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack paddingY={1}>\n      <Tree\n        data={originalObject}\n        shouldExpandNode={() => false}\n        invertTheme={false}\n        theme={{ ...jsonTreeTheme, tree: { margin: 0, whiteSpace: \"pre-line\" } }}\n        hideRoot\n        getItemString={(nodeType, data, itemType, itemString, keyPath) =>\n          getItemString(nodeType, data, itemType, itemString, keyPath, timezone)\n        }\n        postprocessValue={maybePlainObject}\n        labelRenderer={(markerKeyPath, _p1, _p2, _hasChildren) => {\n          const label = first(markerKeyPath);\n          return <span style={{ padding: \"0 4px 0 0\" }}>{label}</span>;\n        }}\n        valueRenderer={(label: string) => {\n          return <span>{label}</span>;\n        }}\n      />\n    </Stack>\n  );\n}\n\nexport default ObjectDetails;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport { CardActionArea, Typography } from \"@mui/material\";\n\nimport type { LayoutActions } from \"@foxglove/studio\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\n\ntype Props = {\n  topic: string;\n  addPanel: LayoutActions[\"addPanel\"];\n};\n\nexport default function TopicLink({ addPanel, topic }: Props): JSX.Element {\n  const openRawMessages = React.useCallback(() => {\n    addPanel({\n      position: \"sibling\",\n      type: \"RawMessages\",\n      updateIfExists: true,\n      getState: (existingState?: unknown) => ({\n        ...(existingState as Record<string, unknown> | undefined),\n        topicPath: topic,\n      }),\n    });\n  }, [addPanel, topic]);\n\n  return (\n    <CardActionArea onClick={openRawMessages} title=\"Open in Raw Message panel\">\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" padding={1}>\n        <Typography variant=\"body2\">{topic}</Typography>\n        <OpenInNewIcon fontSize=\"small\" color=\"primary\" />\n      </Stack>\n    </CardActionArea>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { Cursor24Regular } from \"@fluentui/react-icons\";\nimport { Typography } from \"@mui/material\";\n\nimport type { LayoutActions } from \"@foxglove/studio\";\nimport ExpandingToolbar, {\n  ToolGroup,\n  ToolGroupFixedSizePane,\n} from \"@foxglove/studio-base/components/ExpandingToolbar\";\n\nimport ObjectDetails from \"./ObjectDetails\";\nimport TopicLink from \"./TopicLink\";\nimport { InteractionData } from \"./types\";\nimport { Pose } from \"../transforms\";\n\n// ts-prune-ignore-next\nexport const OBJECT_TAB_TYPE = \"Selected object\";\nexport type TabType = typeof OBJECT_TAB_TYPE;\n\nexport type SelectionObject = {\n  object: {\n    pose: Pose;\n    interactionData?: InteractionData;\n  };\n  instanceIndex: number | undefined;\n};\n\ntype Props = {\n  interactionsTabType?: TabType;\n  setInteractionsTabType: (arg0?: TabType) => void;\n  addPanel: LayoutActions[\"addPanel\"];\n  selectedObject?: SelectionObject;\n  timezone: string | undefined;\n};\n\nconst InteractionsBaseComponent = React.memo<Props>(function InteractionsBaseComponent({\n  addPanel,\n  selectedObject,\n  interactionsTabType,\n  setInteractionsTabType,\n  timezone,\n}: Props) {\n  const selectedInteractionData = selectedObject?.object.interactionData;\n  const originalMessage = selectedInteractionData?.originalMessage;\n  const instanceDetails = selectedInteractionData?.instanceDetails;\n\n  return (\n    <ExpandingToolbar\n      tooltip=\"Inspect objects\"\n      icon={<Cursor24Regular />}\n      selectedTab={interactionsTabType}\n      onSelectTab={(newSelectedTab) => setInteractionsTabType(newSelectedTab)}\n    >\n      <ToolGroup name={OBJECT_TAB_TYPE}>\n        <ToolGroupFixedSizePane>\n          {originalMessage ? (\n            <>\n              {selectedInteractionData.topic && (\n                <TopicLink addPanel={addPanel} topic={selectedInteractionData.topic} />\n              )}\n              {instanceDetails ? (\n                <ObjectDetails selectedObject={instanceDetails} timezone={timezone} />\n              ) : (\n                <></>\n              )}\n              <ObjectDetails\n                selectedObject={originalMessage}\n                interactionData={selectedInteractionData}\n                timezone={timezone}\n              />\n            </>\n          ) : (\n            <Typography variant=\"body2\" color=\"text.disabled\" gutterBottom>\n              Click an object in the 3D view to select it.\n            </Typography>\n          )}\n        </ToolGroupFixedSizePane>\n      </ToolGroup>\n    </ExpandingToolbar>\n  );\n});\n\n// Wrap the Interactions so that we don't rerender every time any part of the PanelContext config changes, but just the\n// one value that we care about.\nexport default function Interactions(props: Props): JSX.Element {\n  return <InteractionsBaseComponent {...props} />;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Menu, MenuItem, MenuProps } from \"@mui/material\";\nimport { useCallback } from \"react\";\n\nimport { BaseMarker, InstancedLineListMarker } from \"@foxglove/studio-base/types/Messages\";\n\nimport { Interactive, SelectedObject } from \"./types\";\nimport { MouseEventObject } from \"../camera\";\n\ntype ClickedPosition = { clientX: number; clientY: number };\n\ntype Props = {\n  clickedPosition: ClickedPosition;\n  clickedObjects: MouseEventObject[];\n  onClose: MenuProps[\"onClose\"];\n  selectObject: (arg0?: MouseEventObject) => void;\n};\n\nconst getInstanceObj = (marker: unknown, idx: number): unknown => {\n  if (marker == undefined) {\n    return;\n  }\n  return (marker as InstancedLineListMarker).metadataByIndex?.[idx];\n};\n\nconst getObject = (selectedObject?: MouseEventObject): unknown => {\n  const object =\n    (selectedObject?.instanceIndex != undefined &&\n      (selectedObject.object as InstancedLineListMarker).metadataByIndex != undefined &&\n      getInstanceObj(selectedObject.object, selectedObject.instanceIndex) != undefined) ||\n    selectedObject?.object;\n  return object;\n};\n\nfunction InteractionContextMenuItem({\n  interactiveObject,\n  selectObject,\n}: {\n  selectObject: (arg0?: SelectedObject) => void;\n  interactiveObject?: MouseEventObject;\n}): JSX.Element {\n  const object = getObject(interactiveObject) as Partial<Interactive<BaseMarker>>;\n\n  const selectItemObject = useCallback(\n    () => selectObject(interactiveObject as SelectedObject),\n    [interactiveObject, selectObject],\n  );\n\n  return (\n    <MenuItem data-test=\"InteractionContextMenuItem\" onClick={selectItemObject}>\n      {object.interactionData?.topic}\n    </MenuItem>\n  );\n}\n\nexport function InteractionContextMenu({\n  clickedObjects = [],\n  clickedPosition = { clientX: 0, clientY: 0 },\n  onClose,\n  selectObject,\n}: Props): JSX.Element {\n  return (\n    <Menu\n      open\n      onClose={onClose}\n      anchorReference=\"anchorPosition\"\n      anchorPosition={{\n        top: clickedPosition.clientY,\n        left: clickedPosition.clientX,\n      }}\n      MenuListProps={{\n        dense: true,\n      }}\n    >\n      {clickedObjects.map((interactiveObject, index) => (\n        <InteractionContextMenuItem\n          key={index}\n          interactiveObject={interactiveObject}\n          selectObject={selectObject}\n        />\n      ))}\n    </Menu>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport type { Renderer } from \"./Renderer\";\nimport type { BaseSettings } from \"./settings\";\nimport type { Pose } from \"./transforms\";\n\nexport const SELECTED_ID_VARIABLE = \"selected_id\";\n\nexport type BaseUserData = {\n  /** Timestamp when the associated `MessageEvent` was received */\n  receiveTime: bigint;\n  /** Timestamp extracted from a field in the associated message, such as `header.stamp` */\n  messageTime: bigint;\n  /** Coordinate frame this Renderable exists in */\n  frameId: string;\n  /** Local position and orientation of the Renderable */\n  pose: Pose;\n  /** Settings tree path where errors will be displayed */\n  settingsPath: ReadonlyArray<string>;\n  /** User-customizable settings for this Renderable */\n  settings: BaseSettings;\n  /** Topic that the Renderable belongs to, if applicable*/\n  topic?: string;\n};\n\n/**\n * Renderables are generic THREE.js scene graph entities with additional\n * properties from `BaseUserData` that allow coordinate frame transforms to\n * automatically be applied and settings tree errors to be displayed.\n */\nexport class Renderable<TUserData extends BaseUserData = BaseUserData> extends THREE.Object3D {\n  /** Identifies this class as inheriting from `Renderable` */\n  public readonly isRenderable = true;\n  /** Allow this Renderable to be selected during picking and shown in the Object Details view */\n  public readonly pickable: boolean = true;\n  /**\n   * Use a second picking pass for this Renderable to select a single numeric instanceId. This\n   * instanceId can be passed to `instanceDetails()` to get more information about the instance.\n   */\n  public readonly pickableInstances: boolean = false;\n  /** A reference to the parent `Renderer` that owns the scene graph containing this object */\n  protected readonly renderer: Renderer;\n  /** Additional data associated with this entity */\n  public override userData: TUserData;\n\n  public constructor(name: string, renderer: Renderer, userData: TUserData) {\n    super();\n    this.name = name;\n    this.renderer = renderer;\n    this.userData = userData;\n  }\n\n  /**\n   * Dispose of any unmanaged resources uniquely associated with this Renderable\n   * such as GPU buffers.\n   */\n  public dispose(): void {\n    this.children.length = 0;\n  }\n\n  /**\n   * A unique identifier for this Renderable, taken from the associated message.\n   */\n  public idFromMessage(): number | string | undefined {\n    return undefined;\n  }\n\n  /**\n   * The name of the variable that will be set to `idFromMessage()` on user selection.\n   */\n  public selectedIdVariable(): string | undefined {\n    return undefined;\n  }\n\n  /**\n   * Return a Plain Old JavaScript Object (POJO) representation of this Renderable.\n   */\n  public details(): Record<string, RosValue> {\n    return {};\n  }\n\n  /**\n   * Return topic if one exists on the userData.\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  public get topic(): TUserData[\"topic\"] {\n    return this.userData.topic;\n  }\n\n  /**\n   * Return pose as defined in userData\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  public get pose(): Pose {\n    return this.userData.pose;\n  }\n  /**\n   * Return a Plain Old JavaScript Object (POJO) representation of a specific\n   * visual instance rendered by this Renderable.\n   */\n  public instanceDetails(instanceId: number): Record<string, RosValue> | undefined {\n    void instanceId;\n    return undefined;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nexport const FRAME_TRANSFORM_DATATYPES = new Set<string>();\naddFoxgloveSchema(FRAME_TRANSFORM_DATATYPES, \"foxglove.FrameTransform\");\n\nexport const FRAME_TRANSFORMS_DATATYPES = new Set<string>();\naddFoxgloveSchema(FRAME_TRANSFORMS_DATATYPES, \"foxglove.FrameTransforms\");\n\nexport const POINTCLOUD_DATATYPES = new Set<string>();\naddFoxgloveSchema(POINTCLOUD_DATATYPES, \"foxglove.PointCloud\");\n\nexport const LASERSCAN_DATATYPES = new Set<string>();\naddFoxgloveSchema(LASERSCAN_DATATYPES, \"foxglove.LaserScan\");\n\nexport const RAW_IMAGE_DATATYPES = new Set<string>();\naddFoxgloveSchema(RAW_IMAGE_DATATYPES, \"foxglove.RawImage\");\n\nexport const COMPRESSED_IMAGE_DATATYPES = new Set<string>();\naddFoxgloveSchema(COMPRESSED_IMAGE_DATATYPES, \"foxglove.CompressedImage\");\n\nexport const CAMERA_CALIBRATION_DATATYPES = new Set<string>();\naddFoxgloveSchema(CAMERA_CALIBRATION_DATATYPES, \"foxglove.CameraCalibration\");\n\nexport const SCENE_UPDATE_DATATYPES = new Set<string>();\naddFoxgloveSchema(SCENE_UPDATE_DATATYPES, \"foxglove.SceneUpdate\");\n\nexport const POSE_IN_FRAME_DATATYPES = new Set<string>();\naddFoxgloveSchema(POSE_IN_FRAME_DATATYPES, \"foxglove.PoseInFrame\");\n\nexport const POSES_IN_FRAME_DATATYPES = new Set<string>();\naddFoxgloveSchema(POSES_IN_FRAME_DATATYPES, \"foxglove.PosesInFrame\");\n\nexport const GRID_DATATYPES = new Set<string>();\naddFoxgloveSchema(GRID_DATATYPES, \"foxglove.Grid\");\n\n// Expand a single Foxglove dataType into variations for ROS1 and ROS2 then add\n// them to the given output set\nfunction addFoxgloveSchema(output: Set<string>, dataType: string): Set<string> {\n  // Add the Foxglove variation: foxglove.PointCloud\n  output.add(dataType);\n\n  const parts = dataType.split(\".\");\n  if (parts.length < 2) {\n    throw new Error(`Invalid Foxglove schema: ${dataType}`);\n  }\n  const leaf = parts.slice(1).join(\"/\");\n\n  // Add the ROS1 variation: foxglove_msgs/PointCloud\n  output.add(`foxglove_msgs/${leaf}`);\n\n  // Add the ROS2 variation: foxglove_msgs/msg/PointCloud\n  output.add(`foxglove_msgs/msg/${leaf}`);\n\n  return output;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\nconst UNIT_Y = new THREE.Vector3(0, 1, 0);\n\nconst v0 = new THREE.Vector3();\nconst v1 = new THREE.Vector3();\nconst c = new THREE.Vector3();\n\nexport function getRotationTo(src: THREE.Vector3, dest: THREE.Vector3): THREE.Quaternion {\n  // Adapted from <https://www.ogre3d.org/docs/api/1.8/_ogre_vector3_8h_source.html>\n  // Based on Stan Melax's article in Game Programming Gems\n  const q = new THREE.Quaternion(0, 0, 0, 1);\n  v0.copy(src).normalize();\n  v1.copy(dest).normalize();\n\n  const d = v0.dot(v1);\n  // If dot == 1, vectors are the same\n  if (d >= 1.0) {\n    return q;\n  }\n  if (d < 1e-6 - 1.0) {\n    // Generate an axis\n    let axis = c.copy(UNIT_X).cross(src);\n    if (isZeroLength(axis)) {\n      // Pick another if collinear\n      axis = c.copy(UNIT_Y).cross(src);\n    }\n    axis.normalize();\n    q.setFromAxisAngle(axis, Math.PI);\n  } else {\n    const s = Math.sqrt((1 + d) * 2);\n    const invs = 1 / s;\n\n    c.copy(v0).cross(v1);\n\n    q.x = c.x * invs;\n    q.y = c.y * invs;\n    q.z = c.z * invs;\n    q.w = s * 0.5;\n    q.normalize();\n  }\n  return q;\n}\n\nexport function isZeroLength(vec: THREE.Vector3): boolean {\n  return vec.lengthSq() < 1e-6 * 1e-6;\n}\n\nexport function approxEquals(a: number, b: number, epsilon = 0.00001): boolean {\n  return Math.abs(a - b) < epsilon;\n}\n\nexport function vecEqual<T>(a: T[], b: T[]): boolean {\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function vec3TupleApproxEquals(\n  a: THREE.Vector3Tuple,\n  b: THREE.Vector3Tuple,\n  epsilon = 0.00001,\n): boolean {\n  return (\n    approxEquals(a[0], b[0], epsilon) &&\n    approxEquals(a[1], b[1], epsilon) &&\n    approxEquals(a[2], b[2], epsilon)\n  );\n}\n\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(max, value));\n}\n\nexport function lerp(a: number, b: number, t: number): number {\n  return a + (b - a) * t;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport tinycolor from \"tinycolor2\";\n\nimport { lerp } from \"./math\";\nimport { ColorRGB, ColorRGBA } from \"./ros\";\n\nexport const LIGHT_OUTLINE = new THREE.Color(0x000000).convertSRGBToLinear();\nexport const DARK_OUTLINE = new THREE.Color(0xffffff).convertSRGBToLinear();\n\n// From https://github.com/mrdoob/three.js/blob/dev/src/math/ColorManagement.js\n// which is not exported\nexport function SRGBToLinear(c: number): number {\n  return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\n\nexport function stringToRgba(output: ColorRGBA, colorStr: string): ColorRGBA {\n  const color = tinycolor(colorStr);\n  if (!color.isValid()) {\n    output.r = output.g = output.b = output.a = 1;\n    return output;\n  }\n  const rgb = color.toRgb();\n  output.r = rgb.r / 255;\n  output.g = rgb.g / 255;\n  output.b = rgb.b / 255;\n  output.a = rgb.a;\n  return output;\n}\n\nexport function makeRgba(): ColorRGBA {\n  return { r: 0, g: 0, b: 0, a: 0 };\n}\n\nexport function stringToRgb<T extends ColorRGB | THREE.Color>(output: T, colorStr: string): T {\n  const color = tinycolor(colorStr);\n  if (!color.isValid()) {\n    output.r = output.g = output.b = 1;\n    return output;\n  }\n  const rgb = color.toRgb();\n  output.r = rgb.r / 255;\n  output.g = rgb.g / 255;\n  output.b = rgb.b / 255;\n  return output;\n}\n\n/** Converts a ColorRGB to THREE.Color and converts from sRGB to linear RGB. */\nexport function rgbToThreeColor(output: THREE.Color, rgb: ColorRGB): THREE.Color {\n  return output.setRGB(rgb.r, rgb.g, rgb.b).convertSRGBToLinear();\n}\n\n// ts-prune-ignore-next\nexport function rgbaToHexString(color: ColorRGBA): string {\n  const rgba =\n    (THREE.MathUtils.clamp(color.r * 255, 0, 255) << 24) ^\n    (THREE.MathUtils.clamp(color.g * 255, 0, 255) << 16) ^\n    (THREE.MathUtils.clamp(color.b * 255, 0, 255) << 8) ^\n    (THREE.MathUtils.clamp(color.a * 255, 0, 255) << 0);\n  return (\"00000000\" + rgba.toString(16)).slice(-8);\n}\n\nexport function rgbaToCssString(color: ColorRGBA): string {\n  const r = Math.trunc(color.r * 255);\n  const g = Math.trunc(color.g * 255);\n  const b = Math.trunc(color.b * 255);\n  return `rgba(${r}, ${g}, ${b}, ${color.a})`;\n}\n\nexport function rgbaToLinear(output: ColorRGBA, color: ColorRGBA): ColorRGBA {\n  output.r = SRGBToLinear(color.r);\n  output.g = SRGBToLinear(color.g);\n  output.b = SRGBToLinear(color.b);\n  output.a = color.a;\n  return output;\n}\n\n// https://stackoverflow.com/a/596243\nexport function getLuminance(r: number, g: number, b: number): number {\n  return Math.hypot(0.5468 * r, 0.7662 * g, 0.3376 * b);\n}\n\n/**\n * Computes a gradient step from colors `a` to `b` using pre-multiplied alpha to\n * match CSS linear gradients. The inputs are assumed to not have pre-multiplied\n * alpha, and the output will have pre-multiplied alpha.\n */\nexport function rgbaGradient(output: ColorRGBA, a: ColorRGBA, b: ColorRGBA, t: number): ColorRGBA {\n  const aR = a.r * a.a;\n  const aG = a.g * a.a;\n  const aB = a.b * a.a;\n  const bR = b.r * b.a;\n  const bG = b.g * b.a;\n  const bB = b.b * b.a;\n\n  output.r = lerp(aR, bR, t);\n  output.g = lerp(aG, bG, t);\n  output.b = lerp(aB, bB, t);\n  output.a = lerp(a.a, b.a, t);\n  return output;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { SettingsTreeFields, SettingsTreeNode, Topic } from \"@foxglove/studio\";\nimport { BaseSettings } from \"@foxglove/studio-base/panels/ThreeDeeRender/settings\";\n\nimport { rgbaGradient, rgbaToLinear, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { clamp } from \"../../math\";\nimport type { ColorRGBA } from \"../../ros\";\n\nexport type ColorConverter = (output: ColorRGBA, colorValue: number) => void;\n\nconst tempColor1 = { r: 0, g: 0, b: 0, a: 0 };\nconst tempColor2 = { r: 0, g: 0, b: 0, a: 0 };\nexport const NEEDS_MIN_MAX = [\"gradient\", \"colormap\"];\n\nexport interface ColorModeSettings {\n  colorMode: \"flat\" | \"gradient\" | \"colormap\" | \"rgb\" | \"rgba\" | \"rgba-fields\";\n  flatColor: string;\n  colorField?: string;\n  gradient: [string, string];\n  colorMap: \"turbo\" | \"rainbow\";\n  explicitAlpha: number;\n  minValue?: number;\n  maxValue?: number;\n}\n\nexport function getColorConverter<\n  Settings extends ColorModeSettings & {\n    readonly colorMode: Exclude<ColorModeSettings[\"colorMode\"], \"rgba-fields\">;\n  },\n>(settings: Settings, minValue: number, maxValue: number): ColorConverter {\n  switch (settings.colorMode) {\n    case \"flat\": {\n      const flatColor = stringToRgba(tempColor1, settings.flatColor);\n      rgbaToLinear(flatColor, flatColor);\n      return (output: ColorRGBA, _colorValue: number) => {\n        output.r = flatColor.r;\n        output.g = flatColor.g;\n        output.b = flatColor.b;\n        output.a = flatColor.a;\n      };\n    }\n    case \"gradient\": {\n      const valueDelta = Math.max(maxValue - minValue, Number.EPSILON);\n      const minColor = stringToRgba(tempColor1, settings.gradient[0]);\n      const maxColor = stringToRgba(tempColor2, settings.gradient[1]);\n      rgbaToLinear(minColor, minColor);\n      rgbaToLinear(maxColor, maxColor);\n      return (output: ColorRGBA, colorValue: number) => {\n        const t = Math.max(0, Math.min((colorValue - minValue) / valueDelta, 1));\n        rgbaGradient(output, minColor, maxColor, t);\n      };\n    }\n    case \"colormap\": {\n      const valueDelta = Math.max(maxValue - minValue, Number.EPSILON);\n      switch (settings.colorMap) {\n        case \"turbo\":\n          return (output: ColorRGBA, colorValue: number) => {\n            const t = Math.max(0, Math.min((colorValue - minValue) / valueDelta, 1));\n            turboLinearCached(output, t);\n            output.a = settings.explicitAlpha;\n          };\n        case \"rainbow\":\n          return (output: ColorRGBA, colorValue: number) => {\n            const t = Math.max(0, Math.min((colorValue - minValue) / valueDelta, 1));\n            rainbowLinear(output, t);\n            output.a = settings.explicitAlpha;\n          };\n      }\n      throw new Error(`Unrecognized color map: ${settings.colorMap}`);\n    }\n    case \"rgb\":\n      return (output: ColorRGBA, colorValue: number) => {\n        getColorBgra(output, colorValue);\n        output.a = settings.explicitAlpha;\n      };\n    case \"rgba\":\n      return getColorBgra;\n  }\n}\n\n// 0xaarrggbb\n// Matches rviz behavior:\n// https://github.com/ros-visualization/rviz/blob/a60b334fd10785a6b74893189fcebbd419d468e4/src/rviz/default_plugin/point_cloud_transformers.cpp#L383-L406\nfunction getColorBgra(output: ColorRGBA, colorValue: number): void {\n  const num = colorValue >>> 0;\n  output.a = ((num & 0xff000000) >>> 24) / 255;\n  output.r = ((num & 0x00ff0000) >>> 16) / 255;\n  output.g = ((num & 0x0000ff00) >>> 8) / 255;\n  output.b = ((num & 0x000000ff) >>> 0) / 255;\n}\n\n// taken from http://docs.ros.org/jade/api/rviz/html/c++/point__cloud__transformers_8cpp_source.html\n// line 47\nfunction rainbowLinear(output: ColorRGBA, pct: number): void {\n  const h = (1.0 - clamp(pct, 0, 1)) * 5.0 + 1.0;\n  const i = Math.floor(h);\n  let f = h % 1;\n  // if i is even\n  if (i % 2 < 1) {\n    f = 1.0 - f;\n  }\n  const n = SRGBToLinear(1.0 - f);\n  if (i <= 1) {\n    output.r = n;\n    output.g = 0;\n    output.b = 1;\n  } else if (i === 2) {\n    output.r = 0;\n    output.g = n;\n    output.b = 1;\n  } else if (i === 3) {\n    output.r = 0;\n    output.g = 1;\n    output.b = n;\n  } else if (i === 4) {\n    output.r = n;\n    output.g = 1;\n    output.b = 0;\n  } else {\n    output.r = 1;\n    output.g = n;\n    output.b = 0;\n  }\n  output.a = 1;\n}\n\nconst kRedVec4 = new THREE.Vector4(0.13572138, 4.6153926, -42.66032258, 132.13108234);\nconst kGreenVec4 = new THREE.Vector4(0.09140261, 2.19418839, 4.84296658, -14.18503333);\nconst kBlueVec4 = new THREE.Vector4(0.1066733, 12.64194608, -60.58204836, 110.36276771);\nconst kRedVec2 = new THREE.Vector2(-152.94239396, 59.28637943);\nconst kGreenVec2 = new THREE.Vector2(4.27729857, 2.82956604);\nconst kBlueVec2 = new THREE.Vector2(-89.90310912, 27.34824973);\nconst v4 = new THREE.Vector4();\nconst v2 = new THREE.Vector2();\n\n// adapted from https://gist.github.com/mikhailov-work/0d177465a8151eb6ede1768d51d476c7\nfunction turboLinear(output: ColorRGBA, pct: number): void {\n  // Clamp the input between [0.0, 1.0], then scale to the range [0.01, 1.0]\n  const x = clamp(pct, 0.0, 1.0) * 0.99 + 0.01;\n  v4.set(1, x, x * x, x * x * x);\n  v2.set(v4.z, v4.w);\n  v2.multiplyScalar(v4.z);\n  output.r = SRGBToLinear(clamp(v4.dot(kRedVec4) + v2.dot(kRedVec2), 0, 1));\n  output.g = SRGBToLinear(clamp(v4.dot(kGreenVec4) + v2.dot(kGreenVec2), 0, 1));\n  output.b = SRGBToLinear(clamp(v4.dot(kBlueVec4) + v2.dot(kBlueVec2), 0, 1));\n  output.a = 1;\n}\n\n// A lookup table for the turbo() function\nlet TurboLookup: Float32Array | undefined;\nconst TURBO_LOOKUP_SIZE = 65535;\n\n// Builds a one-time lookup table for the turbo() function then uses it to\n// convert `pct` to a color\nfunction turboLinearCached(output: ColorRGBA, pct: number): void {\n  if (!TurboLookup) {\n    TurboLookup = new Float32Array(TURBO_LOOKUP_SIZE * 3);\n    const tempColor = { r: 0, g: 0, b: 0, a: 0 };\n    for (let i = 0; i < TURBO_LOOKUP_SIZE; i++) {\n      turboLinear(tempColor, i / (TURBO_LOOKUP_SIZE - 1));\n      const offset = i * 3;\n      TurboLookup[offset + 0] = tempColor.r;\n      TurboLookup[offset + 1] = tempColor.g;\n      TurboLookup[offset + 2] = tempColor.b;\n    }\n  }\n\n  const offset = Math.trunc(pct * (TURBO_LOOKUP_SIZE - 1)) * 3;\n  output.r = TurboLookup[offset + 0]!;\n  output.g = TurboLookup[offset + 1]!;\n  output.b = TurboLookup[offset + 2]!;\n  output.a = 1;\n}\nexport const RGBA_PACKED_FIELDS = new Set<string>([\"rgb\", \"rgba\"]);\nexport const INTENSITY_FIELDS = new Set<string>([\"intensity\", \"i\"]);\n\nfunction bestColorByField(\n  fields: string[],\n  { supportsPackedRgbModes }: { supportsPackedRgbModes: boolean },\n): string {\n  if (supportsPackedRgbModes) {\n    for (const field of fields) {\n      if (RGBA_PACKED_FIELDS.has(field)) {\n        return field;\n      }\n    }\n  }\n  for (const field of fields) {\n    if (INTENSITY_FIELDS.has(field)) {\n      return field;\n    }\n  }\n  return fields.find((field) => field === \"x\") || fields[0] ? fields[0]! : \"\";\n}\n\nexport function hasSeparateRgbaFields(fields: string[]): boolean {\n  let r = false;\n  let g = false;\n  let b = false;\n  let a = false;\n  for (const field of fields) {\n    switch (field) {\n      case \"red\":\n        r = true;\n        break;\n      case \"green\":\n        g = true;\n        break;\n      case \"blue\":\n        b = true;\n        break;\n      case \"alpha\":\n        a = true;\n        break;\n    }\n  }\n  return r && g && b && a;\n}\n\nexport function baseColorModeSettingsNode<Settings extends ColorModeSettings & BaseSettings>(\n  msgFields: string[],\n  config: Partial<Settings>,\n  topic: Topic,\n  defaults: Settings,\n  {\n    supportsPackedRgbModes,\n    supportsRgbaFieldsMode,\n  }: { supportsPackedRgbModes: boolean; supportsRgbaFieldsMode: boolean },\n): SettingsTreeNode & { fields: NonNullable<SettingsTreeNode[\"fields\"]> } {\n  const colorMode = config.colorMode ?? \"flat\";\n  const flatColor = config.flatColor ?? \"#ffffff\";\n  const colorField = config.colorField ?? bestColorByField(msgFields, { supportsPackedRgbModes });\n  const colorFieldOptions = msgFields.map((field) => ({ label: field, value: field }));\n  const gradient = config.gradient;\n  const colorMap = config.colorMap ?? \"turbo\";\n  const explicitAlpha = config.explicitAlpha ?? 1;\n  const minValue = config.minValue;\n  const maxValue = config.maxValue;\n\n  const fields: SettingsTreeFields = {};\n\n  fields.colorMode = {\n    label: \"Color mode\",\n    input: \"select\",\n    options: [\n      { label: \"Flat\", value: \"flat\" },\n      { label: \"Color map\", value: \"colormap\" },\n      { label: \"Gradient\", value: \"gradient\" },\n    ]\n      .concat(\n        supportsPackedRgbModes\n          ? [\n              { label: \"BGR (packed)\", value: \"rgb\" },\n              { label: \"BGRA (packed)\", value: \"rgba\" },\n            ]\n          : [],\n      )\n      .concat(\n        supportsRgbaFieldsMode && hasSeparateRgbaFields(msgFields)\n          ? [{ label: \"RGBA (separate fields)\", value: \"rgba-fields\" }]\n          : [],\n      ),\n    value: colorMode,\n  };\n  if (colorMode === \"flat\") {\n    fields.flatColor = { label: \"Flat color\", input: \"rgba\", value: flatColor };\n  } else if (colorMode !== \"rgba-fields\") {\n    fields.colorField = {\n      label: \"Color by\",\n      input: \"select\",\n      options: colorFieldOptions,\n      value: colorField,\n    };\n\n    switch (colorMode) {\n      case \"gradient\":\n        fields.gradient = {\n          label: \"Gradient\",\n          input: \"gradient\",\n          value: gradient ?? defaults.gradient,\n        };\n        break;\n      case \"colormap\":\n        fields.colorMap = {\n          label: \"Color map\",\n          input: \"select\",\n          options: [\n            { label: \"Turbo\", value: \"turbo\" },\n            { label: \"Rainbow\", value: \"rainbow\" },\n          ],\n          value: colorMap,\n        };\n        break;\n      default:\n        break;\n    }\n\n    if (colorMode === \"colormap\" || colorMode === \"rgb\") {\n      fields.explicitAlpha = {\n        label: \"Opacity\",\n        input: \"number\",\n        step: 0.1,\n        placeholder: \"1\",\n        precision: 3,\n        min: 0,\n        max: 1,\n        value: explicitAlpha,\n      };\n    }\n\n    if (NEEDS_MIN_MAX.includes(colorMode)) {\n      fields.minValue = {\n        label: \"Value min\",\n        input: \"number\",\n        placeholder: \"auto\",\n        precision: 4,\n        value: minValue,\n      };\n      fields.maxValue = {\n        label: \"Value max\",\n        input: \"number\",\n        placeholder: \"auto\",\n        precision: 4,\n        value: maxValue,\n      };\n    }\n  }\n\n  return {\n    fields,\n    order: topic.name.toLocaleLowerCase(),\n    visible: config.visible ?? defaults.visible,\n  };\n}\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\nexport function colorHasTransparency<Settings extends ColorModeSettings>(\n  settings: Settings,\n): boolean {\n  switch (settings.colorMode) {\n    case \"flat\":\n      return stringToRgba(tempColor, settings.flatColor).a < 1.0;\n    case \"gradient\":\n      return (\n        stringToRgba(tempColor, settings.gradient[0]).a < 1.0 ||\n        stringToRgba(tempColor, settings.gradient[1]).a < 1.0\n      );\n    case \"colormap\":\n    case \"rgb\":\n      return settings.explicitAlpha < 1.0;\n    case \"rgba\":\n    case \"rgba-fields\":\n      // It's too expensive to check the alpha value of each color. Just assume it's transparent\n      return true;\n  }\n}\n\n// Fragment shader chunk to convert sRGB to linear RGB. This is used by some\n// PointCloud materials to avoid expensive per-point colorspace conversion on\n// the CPU. Source: <https://github.com/mrdoob/three.js/blob/13b67d96/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js#L16-L18>\nexport const FS_SRGB_TO_LINEAR = /* glsl */ `\nvec3 sRGBToLinear(in vec3 value) {\n\treturn vec3(mix(\n    pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)),\n    value.rgb * 0.0773993808,\n    vec3(lessThanEqual(value.rgb, vec3(0.04045)))\n  ));\n}\n\nvec4 sRGBToLinear(in vec4 value) {\n  return vec4(sRGBToLinear(value.rgb), value.a);\n}\n`;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { Time } from \"@foxglove/rostime\";\n\nimport type { Pose } from \"./transforms\";\n\nexport type Matrix3 = [number, number, number, number, number, number, number, number, number];\n\n// prettier-ignore\nexport type Matrix3x4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number\n];\n\n// prettier-ignore\nexport type Matrix6 = [\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n];\n\nexport enum MarkerType {\n  ARROW = 0,\n  CUBE = 1,\n  SPHERE = 2,\n  CYLINDER = 3,\n  LINE_STRIP = 4,\n  LINE_LIST = 5,\n  CUBE_LIST = 6,\n  SPHERE_LIST = 7,\n  POINTS = 8,\n  TEXT_VIEW_FACING = 9,\n  MESH_RESOURCE = 10,\n  TRIANGLE_LIST = 11,\n}\n\nexport enum MarkerAction {\n  ADD = 0,\n  MODIFY = 0,\n  DELETE = 2,\n  DELETEALL = 3,\n}\n\nexport enum PointFieldType {\n  UNKNOWN = 0,\n  INT8 = 1,\n  UINT8 = 2,\n  INT16 = 3,\n  UINT16 = 4,\n  INT32 = 5,\n  UINT32 = 6,\n  FLOAT32 = 7,\n  FLOAT64 = 8,\n}\n\nexport type RosTime = Time;\n\nexport type RosDuration = RosTime;\n\nexport type Vector2 = {\n  x: number;\n  y: number;\n};\n\nexport type Vector3 = {\n  x: number;\n  y: number;\n  z: number;\n};\n\nexport type Point = Vector3;\nexport type Point32 = Vector3;\n\nexport type Quaternion = {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n};\n\nexport type ColorRGB = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type ColorRGBA = {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n};\n\nexport type PoseWithCovariance = {\n  pose: Pose;\n  covariance: Matrix6;\n};\n\nexport type Polygon = {\n  points: Point32[];\n};\n\nexport type Header = {\n  frame_id: string;\n  stamp: RosTime;\n  seq?: number;\n};\n\nexport type Transform = {\n  translation: Vector3;\n  rotation: Quaternion;\n};\n\nexport type TransformStamped = {\n  header: Header;\n  child_frame_id: string;\n  transform: Transform;\n};\n\nexport type TFMessage = { transforms: TransformStamped[] };\n\nexport type Marker = {\n  header: Header;\n  ns: string;\n  id: number;\n  type: number;\n  action: number;\n  pose: Pose;\n  scale: Vector3;\n  color: ColorRGBA;\n  lifetime: RosDuration;\n  frame_locked: boolean;\n  points: Vector3[];\n  colors: ColorRGBA[];\n  text: string;\n  mesh_resource: string;\n  mesh_use_embedded_materials: boolean;\n};\n\nexport type MarkerArray = {\n  markers: Marker[];\n};\n\nexport type PointField = {\n  name: string;\n  offset: number;\n  datatype: number;\n  count: number;\n};\n\nexport type PointCloud2 = {\n  header: Header;\n  height: number;\n  width: number;\n  fields: PointField[];\n  is_bigendian: boolean;\n  point_step: number;\n  row_step: number;\n  data: Uint8Array;\n  is_dense: boolean;\n};\n\nexport type LaserScan = {\n  header: Header;\n  angle_min: number;\n  angle_max: number;\n  angle_increment: number;\n  time_increment: number;\n  scan_time: number;\n  range_min: number;\n  range_max: number;\n  ranges: Float32Array;\n  intensities: Float32Array;\n};\n\nexport type MapMetaData = {\n  map_load_time: RosTime;\n  resolution: number;\n  width: number;\n  height: number;\n  origin: Pose;\n};\n\nexport type OccupancyGrid = {\n  header: Header;\n  info: MapMetaData;\n  data: Int8Array | number[];\n};\n\nexport type PoseStamped = {\n  header: Header;\n  pose: Pose;\n};\n\nexport type PoseArray = Readonly<{\n  header: Header;\n  poses: Pose[];\n}>;\n\nexport type NavPath = Readonly<{\n  header: Header;\n  poses: PoseStamped[];\n}>;\n\nexport type PolygonStamped = {\n  header: Header;\n  polygon: Polygon;\n};\n\nexport type PoseWithCovarianceStamped = {\n  header: Header;\n  pose: PoseWithCovariance;\n};\n\nexport type RegionOfInterest = {\n  x_offset: number;\n  y_offset: number;\n  height: number;\n  width: number;\n  do_rectify: boolean;\n};\n\nexport type CameraInfo = {\n  header: Header;\n  height: number;\n  width: number;\n  distortion_model: string;\n  D: number[];\n  K: Matrix3 | [];\n  R: Matrix3 | [];\n  P: Matrix3x4 | [];\n  binning_x: number;\n  binning_y: number;\n  roi: RegionOfInterest;\n};\n\n// The capitalization of the single-letter matrix names is different between\n// ROS 1 and ROS 2. This type represents that ambiguity, before normalizing into\n// the CameraInfo type\nexport type IncomingCameraInfo = {\n  header: Header;\n  height: number;\n  width: number;\n  distortion_model: string;\n  D: number[] | undefined;\n  K: Matrix3 | [] | undefined;\n  R: Matrix3 | [] | undefined;\n  P: Matrix3x4 | [] | undefined;\n  d: number[] | undefined;\n  k: Matrix3 | [] | undefined;\n  r: Matrix3 | [] | undefined;\n  p: Matrix3x4 | [] | undefined;\n  binning_x: number;\n  binning_y: number;\n  roi: RegionOfInterest;\n};\n\nexport type Image = {\n  header: Header;\n  height: number;\n  width: number;\n  encoding: string;\n  is_bigendian: boolean;\n  step: number;\n  data: Int8Array | Uint8Array;\n};\n\nexport type CompressedImage = {\n  header: Header;\n  format: string;\n  data: Uint8Array;\n};\n\nexport type JointState = {\n  header: Header;\n  name: string[];\n  position: number[];\n  velocity: number[];\n  effort: number[];\n};\n\nexport const TIME_ZERO = { sec: 0, nsec: 0 };\n\nexport const TRANSFORM_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(TRANSFORM_STAMPED_DATATYPES, \"geometry_msgs/TransformStamped\");\n\nexport const TF_DATATYPES = new Set<string>();\naddRosDataType(TF_DATATYPES, \"tf/tfMessage\");\naddRosDataType(TF_DATATYPES, \"tf2_msgs/TFMessage\");\n\nexport const MARKER_DATATYPES = new Set<string>();\naddRosDataType(MARKER_DATATYPES, \"visualization_msgs/Marker\");\n\nexport const MARKER_ARRAY_DATATYPES = new Set<string>();\naddRosDataType(MARKER_ARRAY_DATATYPES, \"visualization_msgs/MarkerArray\");\n// Support the legacy \"studio_msgs/MarkerArray\" datatype name\naddRosDataType(MARKER_ARRAY_DATATYPES, \"studio_msgs/MarkerArray\");\n\nexport const OCCUPANCY_GRID_DATATYPES = new Set<string>();\naddRosDataType(OCCUPANCY_GRID_DATATYPES, \"nav_msgs/OccupancyGrid\");\n\nexport const POINTCLOUD_DATATYPES = new Set<string>();\naddRosDataType(POINTCLOUD_DATATYPES, \"sensor_msgs/PointCloud2\");\n\nexport const LASERSCAN_DATATYPES = new Set<string>();\naddRosDataType(LASERSCAN_DATATYPES, \"sensor_msgs/LaserScan\");\n\nexport const VELODYNE_SCAN_DATATYPES = new Set<string>();\naddRosDataType(VELODYNE_SCAN_DATATYPES, \"velodyne_msgs/VelodyneScan\");\n\nexport const POSE_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(POSE_STAMPED_DATATYPES, \"geometry_msgs/PoseStamped\");\n\nexport const POSE_WITH_COVARIANCE_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(POSE_WITH_COVARIANCE_STAMPED_DATATYPES, \"geometry_msgs/PoseWithCovarianceStamped\");\n\nexport const POSE_ARRAY_DATATYPES = new Set<string>();\naddRosDataType(POSE_ARRAY_DATATYPES, \"geometry_msgs/PoseArray\");\n\nexport const NAV_PATH_DATATYPES = new Set<string>();\naddRosDataType(NAV_PATH_DATATYPES, \"nav_msgs/Path\");\n\nexport const CAMERA_INFO_DATATYPES = new Set<string>();\naddRosDataType(CAMERA_INFO_DATATYPES, \"sensor_msgs/CameraInfo\");\n\nexport const IMAGE_DATATYPES = new Set<string>();\naddRosDataType(IMAGE_DATATYPES, \"sensor_msgs/Image\");\n\nexport const COMPRESSED_IMAGE_DATATYPES = new Set<string>();\naddRosDataType(COMPRESSED_IMAGE_DATATYPES, \"sensor_msgs/CompressedImage\");\n\nexport const POLYGON_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(POLYGON_STAMPED_DATATYPES, \"geometry_msgs/PolygonStamped\");\n\nexport const JOINTSTATE_DATATYPES = new Set<string>();\naddRosDataType(JOINTSTATE_DATATYPES, \"sensor_msgs/JointState\");\n\n// Expand a single ROS1 dataType into variations for ROS2 and protobufs,\n// then add them to the given output set\nfunction addRosDataType(output: Set<string>, dataType: string): Set<string> {\n  // Add the ROS1 variation: tf2_msgs/TFMessage\n  output.add(dataType);\n\n  // Add the ROS2 variation: tf2_msgs/msg/TFMessage\n  const parts = dataType.split(\"/\");\n  if (parts.length > 1) {\n    const base = parts[0];\n    const leaf = parts.slice(1).join(\"/\");\n    output.add(`${base}/msg/${leaf}`);\n  }\n\n  // Add the protobuf variation: ros.tf2_msgs.TFMessage\n  output.add(\"ros.\" + dataType.split(\"/\").join(\".\"));\n\n  return output;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { NumericType, PackedElementField } from \"@foxglove/schemas\";\n\nimport { PointField, PointFieldType } from \"../../ros\";\n\nexport type FieldReader = (view: DataView, pointOffset: number) => number;\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction int8Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getInt8(pointOffset + fieldOffset);\n    if (normalize) {\n      return Math.max(value / 0x7f, -1);\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction uint8Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getUint8(pointOffset + fieldOffset);\n    if (normalize) {\n      return value / 0xff;\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction int16Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getInt16(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return Math.max(value / 0x7fff, -1);\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction uint16Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getUint16(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return value / 0xffff;\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction int32Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getInt32(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return Math.max(value / 0x7fffffff, -1);\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction uint32Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getUint32(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return value / 0xffffffff;\n    }\n    return value;\n  };\n}\n\nfunction float32Reader(fieldOffset: number): FieldReader {\n  return (view: DataView, pointOffset: number) => view.getFloat32(pointOffset + fieldOffset, true);\n}\n\nfunction float64Reader(fieldOffset: number): FieldReader {\n  return (view: DataView, pointOffset: number) => view.getFloat64(pointOffset + fieldOffset, true);\n}\n\nexport function isSupportedField(field: PackedElementField | PointField): boolean {\n  // Only PointFields with count === 1 are supported (doesn't apply to PackedElementFields)\n  if (\"count\" in field && field.count !== 1) {\n    return false;\n  }\n  return true;\n}\n\nexport function getReader(\n  field: PackedElementField | PointField,\n  stride: number,\n  /** @see https://www.khronos.org/opengl/wiki/Normalized_Integer */\n  // Performance-sensitive: this code is called for every point cloud message\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  normalize = false,\n  forceType?: PointFieldType | NumericType,\n): FieldReader | undefined {\n  if (!isSupportedField(field)) {\n    return undefined;\n  }\n\n  const numericType = (field as Partial<PackedElementField>).type;\n  if (numericType == undefined) {\n    const type = forceType ?? (field as PointField).datatype;\n    switch (type) {\n      case PointFieldType.INT8:\n        return field.offset + 1 <= stride ? int8Reader(field.offset, normalize) : undefined;\n      case PointFieldType.UINT8:\n        return field.offset + 1 <= stride ? uint8Reader(field.offset, normalize) : undefined;\n      case PointFieldType.INT16:\n        return field.offset + 2 <= stride ? int16Reader(field.offset, normalize) : undefined;\n      case PointFieldType.UINT16:\n        return field.offset + 2 <= stride ? uint16Reader(field.offset, normalize) : undefined;\n      case PointFieldType.INT32:\n        return field.offset + 4 <= stride ? int32Reader(field.offset, normalize) : undefined;\n      case PointFieldType.UINT32:\n        return field.offset + 4 <= stride ? uint32Reader(field.offset, normalize) : undefined;\n      case PointFieldType.FLOAT32:\n        return field.offset + 4 <= stride ? float32Reader(field.offset) : undefined;\n      case PointFieldType.FLOAT64:\n        return field.offset + 8 <= stride ? float64Reader(field.offset) : undefined;\n      default:\n        return undefined;\n    }\n  } else {\n    const type = (forceType ?? numericType) as NumericType;\n    switch (type) {\n      case NumericType.INT8:\n        return field.offset + 1 <= stride ? int8Reader(field.offset, normalize) : undefined;\n      case NumericType.UINT8:\n        return field.offset + 1 <= stride ? uint8Reader(field.offset, normalize) : undefined;\n      case NumericType.INT16:\n        return field.offset + 2 <= stride ? int16Reader(field.offset, normalize) : undefined;\n      case NumericType.UINT16:\n        return field.offset + 2 <= stride ? uint16Reader(field.offset, normalize) : undefined;\n      case NumericType.INT32:\n        return field.offset + 4 <= stride ? int32Reader(field.offset, normalize) : undefined;\n      case NumericType.UINT32:\n        return field.offset + 4 <= stride ? uint32Reader(field.offset, normalize) : undefined;\n      case NumericType.FLOAT32:\n        return field.offset + 4 <= stride ? float32Reader(field.offset) : undefined;\n      case NumericType.FLOAT64:\n        return field.offset + 8 <= stride ? float64Reader(field.offset) : undefined;\n      default:\n        return undefined;\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { vec3, quat, mat4, ReadonlyMat4 } from \"gl-matrix\";\n\n// ts-prune-ignore-next\nexport type Point = {\n  x: number;\n  y: number;\n  z: number;\n};\n\n// ts-prune-ignore-next\nexport type Orientation = {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n};\n\nexport type Pose = {\n  position: Point;\n  orientation: Orientation;\n};\n\n// ts-prune-ignore-next\nexport function makePose(): Pose {\n  return { position: { x: 0, y: 0, z: 0 }, orientation: { x: 0, y: 0, z: 0, w: 1 } };\n}\n\nexport function xyzrpyToPose(xyz: vec3, rpy: vec3): Pose {\n  const o = quat.fromEuler([0, 0, 0, 1], rpy[0], rpy[1], rpy[2]);\n  return {\n    position: { x: xyz[0], y: xyz[1], z: xyz[2] },\n    orientation: { x: o[0], y: o[1], z: o[2], w: o[3] },\n  };\n}\n\n// Helper functions for constructing geometry primitives that can be used with\n// gl-matrix. These methods are preferred over the gl-matrix equivalents since\n// they produce number[] arrays instead of Float32Array, which have less\n// precision and are slower (float32 requires upcasting/downcasting to do math\n// in JavaScript).\n\nexport function vec3Identity(): vec3 {\n  return [0, 0, 0];\n}\n\n// ts-prune-ignore-next\nexport function vec3FromValues(x: number, y: number, z: number): vec3 {\n  return [x, y, z];\n}\n\n// ts-prune-ignore-next\nexport function vec3Clone(a: vec3): vec3 {\n  return [a[0], a[1], a[2]];\n}\n\n// ts-prune-ignore-next\nexport function quatIdentity(): quat {\n  return [0, 0, 0, 1];\n}\n\n// ts-prune-ignore-next\nexport function quatFromValues(x: number, y: number, z: number, w: number): quat {\n  return [x, y, z, w];\n}\n\n// ts-prune-ignore-next\nexport function quatClone(q: quat): quat {\n  return [q[0], q[1], q[2], q[3]];\n}\n\n// ts-prune-ignore-next\nexport function mat4Identity(): mat4 {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n// ts-prune-ignore-next\nexport function mat4FromValues(\n  m00: number,\n  m01: number,\n  m02: number,\n  m03: number,\n  m10: number,\n  m11: number,\n  m12: number,\n  m13: number,\n  m20: number,\n  m21: number,\n  m22: number,\n  m23: number,\n  m30: number,\n  m31: number,\n  m32: number,\n  m33: number,\n): mat4 {\n  return [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33];\n}\n\n// ts-prune-ignore-next\nexport function mat4Clone(m: mat4): mat4 {\n  return [\n    m[0],\n    m[1],\n    m[2],\n    m[3],\n    m[4],\n    m[5],\n    m[6],\n    m[7],\n    m[8],\n    m[9],\n    m[10],\n    m[11],\n    m[12],\n    m[13],\n    m[14],\n    m[15],\n  ];\n}\n\n/**\n * Test if two numbers are approximately equal.\n */\nexport function approxEq(v1: number, v2: number, epsilon = 0.00001): boolean {\n  return Math.abs(v1 - v2) <= epsilon;\n}\n\n/**\n * Test if two quaternions are approximately equal.\n */\nexport function quatAproxEq(q1: Orientation, q2: Orientation): boolean {\n  return (\n    approxEq(q1.x, q2.x) && approxEq(q1.y, q2.y) && approxEq(q1.z, q2.z) && approxEq(q1.w, q2.w)\n  );\n}\n\n/**\n * Test if two poses are approximately equal.\n */\nexport function poseApproxEq(p1: Pose, p2: Pose): boolean {\n  return (\n    approxEq(p1.position.x, p2.position.x) &&\n    approxEq(p1.position.y, p2.position.y) &&\n    approxEq(p1.position.z, p2.position.z) &&\n    quatAproxEq(p1.orientation, p2.orientation)\n  );\n}\n\n/**\n * Returns a quaternion representing the rotational component of a\n * transformation matrix. The matrix must not have any scaling applied to it.\n * @param out Quaternion to receive the rotation component\n * @param mat Matrix to be decomposed (input)\n * @param scaling Scaling of the matrix (input)\n * @return out\n */\nexport function getRotationNoScaling(out: quat, mat: ReadonlyMat4): quat {\n  const m11 = mat[0];\n  const m12 = mat[1];\n  const m13 = mat[2];\n  const m21 = mat[4];\n  const m22 = mat[5];\n  const m23 = mat[6];\n  const m31 = mat[8];\n  const m32 = mat[9];\n  const m33 = mat[10];\n  const trace = m11 + m22 + m33;\n  let S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (m23 - m32) / S;\n    out[1] = (m31 - m13) / S;\n    out[2] = (m12 - m21) / S;\n  } else if (m11 > m22 && m11 > m33) {\n    S = Math.sqrt(1.0 + m11 - m22 - m33) * 2;\n    out[3] = (m23 - m32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (m12 + m21) / S;\n    out[2] = (m31 + m13) / S;\n  } else if (m22 > m33) {\n    S = Math.sqrt(1.0 + m22 - m11 - m33) * 2;\n    out[3] = (m31 - m13) / S;\n    out[0] = (m12 + m21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (m23 + m32) / S;\n  } else {\n    S = Math.sqrt(1.0 + m33 - m11 - m22) * 2;\n    out[3] = (m12 - m21) / S;\n    out[0] = (m31 + m13) / S;\n    out[1] = (m23 + m32) / S;\n    out[2] = 0.25 * S;\n  }\n  return out;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { mat4, vec3, quat, ReadonlyMat4, ReadonlyVec3, ReadonlyQuat } from \"gl-matrix\";\n\nimport { Pose, getRotationNoScaling, mat4Identity, quatIdentity, vec3Identity } from \"./geometry\";\n\n/**\n * Transform represents a position and rotation in 3D space. It can be set and\n * accessed using either Vec3/Quat or Mat4, and these different representations\n * are automatically kept in sync.\n */\nexport class Transform {\n  private _position: vec3;\n  private _rotation: quat;\n  private _matrix: mat4;\n\n  public constructor(matrixOrPosition: mat4 | vec3, rotation?: quat) {\n    if (matrixOrPosition.length === 16) {\n      this._matrix = matrixOrPosition;\n      this._position = [0, 0, 0];\n      this._rotation = [0, 0, 0, 1];\n      mat4.getTranslation(this._position, this._matrix);\n      getRotationNoScaling(this._rotation, this._matrix);\n    } else if (matrixOrPosition.length === 3 && rotation != undefined) {\n      this._position = matrixOrPosition;\n      this._rotation = rotation;\n      quat.normalize(this._rotation, this._rotation);\n      this._matrix = mat4.fromRotationTranslation(mat4Identity(), this._rotation, this._position);\n    } else {\n      throw new Error(`new Transform() expected either mat4 or vec3 + quat`);\n    }\n  }\n\n  public position(): ReadonlyVec3 {\n    return this._position;\n  }\n\n  public rotation(): ReadonlyQuat {\n    return this._rotation;\n  }\n\n  public matrix(): ReadonlyMat4 {\n    return this._matrix;\n  }\n\n  public setPosition(position: ReadonlyVec3): this {\n    vec3.copy(this._position, position);\n    mat4.fromRotationTranslation(this._matrix, this._rotation, this._position);\n    return this;\n  }\n\n  public setRotation(rotation: ReadonlyQuat): this {\n    quat.normalize(this._rotation, rotation);\n    mat4.fromRotationTranslation(this._matrix, this._rotation, this._position);\n    return this;\n  }\n\n  /**\n   * Update position and rotation simultaneously. This is more efficient than\n   * calling setPosition and setRotation separately, since we only need to\n   * update the matrix once\n   */\n  public setPositionRotation(position: ReadonlyVec3, rotation: ReadonlyQuat): this {\n    vec3.copy(this._position, position);\n    quat.normalize(this._rotation, rotation);\n    mat4.fromRotationTranslation(this._matrix, this._rotation, this._position);\n    return this;\n  }\n\n  /**\n   * Update position and rotation from a Pose object\n   */\n  public setPose(pose: Readonly<Pose>): this {\n    vec3.set(this._position, pose.position.x, pose.position.y, pose.position.z);\n    quat.set(\n      this._rotation,\n      pose.orientation.x,\n      pose.orientation.y,\n      pose.orientation.z,\n      pose.orientation.w,\n    );\n    quat.normalize(this._rotation, this._rotation);\n    mat4.fromRotationTranslation(this._matrix, this._rotation, this._position);\n    return this;\n  }\n\n  /**\n   * Update position and rotation from a matrix with unit scale\n   */\n  public setMatrixUnscaled(matrix: ReadonlyMat4): this {\n    mat4.copy(this._matrix, matrix);\n    mat4.getTranslation(this._position, matrix);\n    getRotationNoScaling(this._rotation, matrix); // A faster mat4.getRotation when there is no scaling\n    return this;\n  }\n\n  /**\n   * Copy the values in another transform into this one\n   */\n  public copy(other: Transform): this {\n    // eslint-disable-next-line no-underscore-dangle\n    vec3.copy(this._position, other._position);\n    // eslint-disable-next-line no-underscore-dangle\n    quat.copy(this._rotation, other._rotation);\n    // eslint-disable-next-line no-underscore-dangle\n    mat4.copy(this._matrix, other._matrix);\n    return this;\n  }\n\n  public toPose(out: Pose): void {\n    out.position.x = this._position[0];\n    out.position.y = this._position[1];\n    out.position.z = this._position[2];\n    out.orientation.x = this._rotation[0];\n    out.orientation.y = this._rotation[1];\n    out.orientation.z = this._rotation[2];\n    out.orientation.w = this._rotation[3];\n  }\n\n  public static Identity(): Transform {\n    return new Transform(vec3Identity(), quatIdentity());\n  }\n\n  /**\n   * Interpolate between two rigid body transforms using linear interpolation on\n   * the translation vector and spherical linear interpolation on the rotation\n   * quaternion.\n   *\n   * @param out Output transform to store the result in\n   * @param a Start transform\n   * @param b End transform\n   * @param t Interpolant in the range [0, 1]\n   * @returns A reference to `out`\n   */\n  public static Interpolate(out: Transform, a: Transform, b: Transform, t: number): Transform {\n    // eslint-disable-next-line no-underscore-dangle\n    vec3.lerp(out._position, a.position(), b.position(), t);\n    // eslint-disable-next-line no-underscore-dangle\n    quat.slerp(out._rotation, a.rotation(), b.rotation(), t);\n    // eslint-disable-next-line no-underscore-dangle\n    out.setPositionRotation(out._position, out._rotation);\n    return out;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nexport type Time = bigint;\nexport type Duration = bigint;\n\nexport function compareTime(a: Time, b: Time): number {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nexport function percentOf(start: Time, end: Time, target: Time): number {\n  const totalDuration = end - start;\n  const targetDuration = target - start;\n  return Number(targetDuration) / Number(totalDuration);\n}\n\nexport function interpolate(start: Time, end: Time, fraction: number): Time {\n  const duration = Number(end - start);\n  return start + BigInt(Math.round(duration * fraction));\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @foxglove/no-boolean-parameters */\n\nimport { mat4, quat, vec3, vec4 } from \"gl-matrix\";\n\nimport { ArrayMap } from \"@foxglove/den/collection\";\n\nimport { Transform } from \"./Transform\";\nimport { Pose, mat4Identity } from \"./geometry\";\nimport { Duration, interpolate, percentOf, Time } from \"./time\";\n\ntype TimeAndTransform = [time: Time, transform: Transform];\n\nexport const MAX_DURATION: Duration = 4_294_967_295n * BigInt(1e9);\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\nconst tempLower: TimeAndTransform = [0n, Transform.Identity()];\nconst tempUpper: TimeAndTransform = [0n, Transform.Identity()];\nconst tempVec3: vec3 = [0, 0, 0];\nconst tempVec4: vec4 = [0, 0, 0, 0];\nconst tempTransform = Transform.Identity();\nconst tempMatrix = mat4Identity();\nconst temp2Matrix = mat4Identity();\n\nconst FALLBACK_FRAME_ID = Symbol(\"FALLBACK_FRAME_ID\");\nexport type FallbackFrameId = typeof FALLBACK_FRAME_ID;\n\nexport type UserFrameId = string;\nexport type AnyFrameId = UserFrameId | FallbackFrameId;\n\n/**\n * CoordinateFrame is a named 3D coordinate frame with an optional parent frame\n * and a history of transforms from this frame to its parent. The parent/child\n * hierarchy and transform history allow points to be transformed from one\n * coordinate frame to another while interpolating over time.\n */\n// ts-prune-ignore-next\nexport class CoordinateFrame<ID extends AnyFrameId = UserFrameId> {\n  public static readonly FALLBACK_FRAME_ID: FallbackFrameId = FALLBACK_FRAME_ID;\n\n  public readonly id: ID;\n  public maxStorageTime: Duration;\n  public maxCapacity: number;\n  // The percentage of maxCapacity that can be exceeded before overfilled frames in history are cleared\n  // allows for better perf by amortizing trimming of frames every few thousand transforms rather than every new transform\n  public capacityOverfillPercentage: number;\n  public offsetPosition: vec3 | undefined;\n  public offsetEulerDegrees: vec3 | undefined;\n\n  private _parent?: CoordinateFrame<UserFrameId>;\n  private _transforms: ArrayMap<Time, Transform>;\n\n  public constructor(\n    id: ID,\n    parent: CoordinateFrame<UserFrameId> | undefined, // fallback frame not allowed as parent\n    maxStorageTime: Duration,\n    maxCapacity: number,\n    capacityOverfillPercentage = 0.1,\n  ) {\n    if (parent) {\n      this._parent = parent;\n    }\n    this.id = id;\n    this.maxStorageTime = maxStorageTime;\n    this.maxCapacity = maxCapacity;\n    this.capacityOverfillPercentage = capacityOverfillPercentage;\n    this._transforms = new ArrayMap<Time, Transform>();\n  }\n\n  public static assertUserFrame(\n    frame: CoordinateFrame<AnyFrameId>,\n  ): asserts frame is CoordinateFrame<UserFrameId> {\n    if (frame.id === FALLBACK_FRAME_ID) {\n      throw new Error(\"Expected user frame\");\n    }\n  }\n\n  public parent(): CoordinateFrame<UserFrameId> | undefined {\n    return this._parent;\n  }\n\n  /**\n   * Returns the top-most frame by walking up each parent frame. If the current\n   * frame does not have a parent, the current frame is returned.\n   */\n  public root(): CoordinateFrame<ID> {\n    if (this.id === FALLBACK_FRAME_ID) {\n      return this;\n    }\n    CoordinateFrame.assertUserFrame(this);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let root: CoordinateFrame<UserFrameId> = this;\n    while (root._parent) {\n      root = root._parent;\n    }\n    return root as CoordinateFrame<ID>;\n  }\n\n  /**\n   * Returns true if this frame has no parent frame.\n   */\n  public isRoot(): boolean {\n    return this._parent == undefined;\n  }\n\n  /**\n   * Returns the number of transforms stored in the transform history.\n   */\n  public transformsSize(): number {\n    return this._transforms.size;\n  }\n\n  /**\n   * Set the parent frame for this frame. If the parent frame is already set to\n   * a different frame, the transform history is cleared.\n   */\n  public setParent(parent: CoordinateFrame<UserFrameId>): void {\n    if (this._parent && this._parent !== parent) {\n      this._transforms.clear();\n    }\n    this._parent = parent;\n  }\n\n  /**\n   * Search for an ancestor frame with the given ID by walking up the chain of\n   * parent frames, starting at the current frame.\n   * @param id Frame ID to search for\n   * @returns The ancestor frame, or undefined if not found\n   */\n  public findAncestor(id: string): CoordinateFrame<UserFrameId> | undefined {\n    let ancestor = this._parent;\n    while (ancestor) {\n      if (ancestor.id === id) {\n        return ancestor;\n      }\n      ancestor = ancestor._parent;\n    }\n    return undefined;\n  }\n\n  /**\n   * Add a transform to the transform history maintained by this frame. When the overfill\n   * limit has been reached, the history is trimmed by removing the larger portion of either\n   * frames that are outside of the `maxStorageTime` or the oldest frames over `maxCapacity`.\n   * This is to amortize the cost of trimming the history ever time a new transform is added.\n   *\n   * If a transform with an identical timestamp already exists, it is replaced.\n   */\n  public addTransform(time: Time, transform: Transform): void {\n    this._transforms.set(time, transform);\n\n    // Remove transforms that are too old\n    // percent over the maxCapacity\n    const overfillPercent =\n      Math.max(0, this._transforms.size - this.maxCapacity) / this.maxCapacity;\n\n    // Trim down to the maximum history size if we've exceeded the overfill\n    if (overfillPercent > this.capacityOverfillPercentage) {\n      const overfillIndex = this._transforms.size - this.maxCapacity;\n      // guaranteed to be more than minKey\n      let removeBeforeTime = this._transforms.at(overfillIndex)![0];\n      const endTime = this._transforms.maxKey()!;\n      // not guaranteed to be more than minKey\n      const startTime = endTime - this.maxStorageTime;\n      // at the very least we remove the overfill, but if the maxStorageTime enforces a  larger trim we take that\n      // we can't afford to check maxStorageTime every time we add a transform, so we only check it when overfill is full\n      removeBeforeTime = startTime > removeBeforeTime ? startTime : removeBeforeTime;\n\n      this._transforms.removeBefore(removeBeforeTime);\n    }\n  }\n\n  /** Remove all transforms with timestamps greater than the given timestamp. */\n  public removeTransformsAfter(time: Time): void {\n    this._transforms.removeAfter(time);\n  }\n\n  /** Removes a transform with a specific timestamp */\n  public removeTransformAt(time: Time): void {\n    this._transforms.remove(time);\n  }\n\n  /**\n   * Find the closest transform(s) in the transform history to the given time.\n   * Note that if an exact match is found, both `outLower` and `outUpper` will\n   * be set to the same transform.\n   * @param outLower This will be set to the found transform with the closest\n   *   timestamp <= the given time\n   * @param outUpper This will be set to the found transform with the closest\n   *   timestamp >= the given time\n   * @param time Time to search for\n   * @param maxDelta The time parameter can exceed the bounds of the transform\n   *   history by up to this amount and still clamp to the oldest or newest\n   *   transform\n   * @returns True if the search was successful\n   */\n  public findClosestTransforms(\n    outLower: TimeAndTransform,\n    outUpper: TimeAndTransform,\n    time: Time,\n    maxDelta: Duration,\n  ): boolean {\n    // perf-sensitive: function params instead of options object to avoid allocations\n    const transformCount = this._transforms.size;\n    if (transformCount === 0) {\n      return false;\n    } else if (transformCount === 1) {\n      // If only a single transform exists, check if `time` is before or equal to\n      // `latestTime + maxDelta`\n      const [latestTime, latestTf] = this._transforms.maxEntry()!;\n      if (time <= latestTime + maxDelta) {\n        outLower[0] = outUpper[0] = latestTime;\n        outLower[1] = outUpper[1] = latestTf;\n        return true;\n      }\n      return false;\n    }\n\n    const index = this._transforms.binarySearch(time);\n    if (index >= 0) {\n      // If the time is exactly on an existing transform, return it\n      const [_, tf] = this._transforms.at(index)!;\n      outLower[0] = outUpper[0] = time;\n      outLower[1] = outUpper[1] = tf;\n      return true;\n    }\n\n    const greaterThanIndex = ~index;\n    if (greaterThanIndex >= this._transforms.size) {\n      // If the time is greater than all existing transforms, return the last\n      // transform\n      const [latestTime, latestTf] = this._transforms.maxEntry()!;\n      if (time <= latestTime + maxDelta) {\n        outLower[0] = outUpper[0] = latestTime;\n        outLower[1] = outUpper[1] = latestTf;\n        return true;\n      }\n      return false;\n    }\n\n    const lessThanIndex = greaterThanIndex - 1;\n    if (lessThanIndex < 0) {\n      // If the time is less than all existing transforms, return the first\n      // transform\n      const [earliestTime, earliestTf] = this._transforms.minEntry()!;\n      if (earliestTime + maxDelta >= time) {\n        outLower[0] = outUpper[0] = earliestTime;\n        outLower[1] = outUpper[1] = earliestTf;\n        return true;\n      }\n      return false;\n    }\n\n    const [lteTime, lteTf] = this._transforms.at(lessThanIndex)!;\n    const [gtTime, gtTf] = this._transforms.at(greaterThanIndex)!;\n    outLower[0] = lteTime;\n    outLower[1] = lteTf;\n    outUpper[0] = gtTime;\n    outUpper[1] = gtTf;\n    return true;\n  }\n\n  /**\n   * Transform a pose from the coordinate frame `srcFrame` to this coordinate\n   * frame at the given time. The transform will be done using the shortest path\n   * from `srcFrame` to this frame\n   *\n   * Transforms can go up through multiple parents, down through one or more\n   * children, or both as long as the transforms share a common ancestor.\n   *\n   * A common variable naming convention for the returned pose is\n   * `thisFrame_T_srcFrame` which is read right-to-left as \"the translation that\n   * moves a point from `srcFrame` to `thisFrame`\".\n   * @param out Output pose, this will be modified with the result on success\n   * @param input Input pose that exists in `srcFrame`\n   * @param srcFrame Coordinate frame we are transforming from\n   * @param time Time to compute the transform at\n   * @param maxDelta The time parameter can exceed the bounds of the transform\n   *   history by up to this amount and still clamp to the oldest or newest\n   *   transform\n   * @returns A reference to `out` on success, otherwise undefined\n   */\n  public applyLocal(\n    out: Pose,\n    input: Readonly<Pose>,\n    srcFrame: CoordinateFrame<AnyFrameId>,\n    time: Time,\n    maxDelta: Duration = MAX_DURATION,\n  ): Pose | undefined {\n    // perf-sensitive: function params instead of options object to avoid allocations\n    if (this.id === FALLBACK_FRAME_ID || srcFrame.id === FALLBACK_FRAME_ID) {\n      // Fallback frame will be used as both src and input frame because it is both the render and root/fixed frame\n      // This will result in no transformation being done to the input pose.\n      return out;\n    }\n    CoordinateFrame.assertUserFrame(this);\n    CoordinateFrame.assertUserFrame(srcFrame);\n    if (srcFrame === this) {\n      // Identity transform\n      copyPose(out, input);\n      return out;\n    } else if (srcFrame.findAncestor(this.id)) {\n      // This frame is an ancestor of the source frame\n      return CoordinateFrame.Apply(out, input, this, srcFrame, false, time, maxDelta)\n        ? out\n        : undefined;\n    } else if (this.findAncestor(srcFrame.id)) {\n      // This frame is a descendant of the source frame\n      return CoordinateFrame.Apply(out, input, srcFrame, this, true, time, maxDelta)\n        ? out\n        : undefined;\n    }\n    // Check if the two frames share a common ancestor\n    let curSrcFrame: CoordinateFrame<UserFrameId> | undefined = srcFrame;\n    while (curSrcFrame) {\n      const commonAncestor = this.findAncestor(curSrcFrame.id);\n      if (commonAncestor) {\n        // Common ancestor found. Apply transforms from the source frame to the common ancestor,\n        // then apply transforms from the common ancestor to this frame\n        if (!CoordinateFrame.Apply(out, input, commonAncestor, srcFrame, false, time, maxDelta)) {\n          return undefined;\n        }\n        return CoordinateFrame.Apply(out, out, commonAncestor, this, true, time, maxDelta)\n          ? out\n          : undefined;\n      }\n      curSrcFrame = curSrcFrame._parent;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Transform a pose from the coordinate frame `srcFrame` to rootFrame at\n   * `srcTime`, then from `rootFrame` to this coordinate frame at `dstTime`. The\n   * transform will be done using the shortest path from `srcFrame` to the root\n   * frame, then from the root frame to this frame.\n   *\n   * Transforms can go up through multiple parents, down through one or more\n   * children, or both as long as the transforms share a common ancestor.\n   * @param out Output pose, this will be modified with the result on success\n   * @param input Input pose that exists in `srcFrame`\n   * @param rootFrame Reference coordinate frame to transform from srcFrame into as srcTime\n   * @param srcFrame Coordinate frame we are transforming from\n   * @param dstTime Time to transform from rootFrome into this frame\n   * @param srcTime Time to transform from srcFrame into rootFrame\n   * @param maxDelta The time parameter can exceed the bounds of the transform\n   *   history by up to this amount and still clamp to the oldest or newest\n   *   transform\n   * @returns A reference to `out` on success, otherwise undefined\n   */\n  public apply(\n    out: Pose,\n    input: Readonly<Pose>,\n    rootFrame: CoordinateFrame<AnyFrameId>,\n    srcFrame: CoordinateFrame<AnyFrameId>,\n    dstTime: Time,\n    srcTime: Time,\n    maxDelta: Duration = MAX_DURATION,\n  ): Pose | undefined {\n    // perf-sensitive: function params instead of options object to avoid allocations\n\n    // Transform from the source frame to the root frame\n    if (rootFrame.applyLocal(out, input, srcFrame, srcTime, maxDelta) == undefined) {\n      return undefined;\n    }\n    // Transform from the root frame to this frame\n    return this.applyLocal(out, out, rootFrame, dstTime, maxDelta);\n  }\n\n  /**\n   * Returns a display-friendly rendition of `id`, quoting the frame id if it is\n   * an empty string or starts or ends with whitespace.\n   */\n  public displayName(): string {\n    return CoordinateFrame.DisplayName(this.id);\n  }\n\n  /**\n   * Interpolate between two [time, transform] pairs.\n   * @param output Output parameter for the interpolated time and transform\n   * @param lower Start [time, transform]\n   * @param upper End [time, transform]\n   * @param time Interpolant in the range [lower[0], upper[0]]\n   */\n  public static Interpolate(\n    output: TimeAndTransform,\n    lower: TimeAndTransform,\n    upper: TimeAndTransform,\n    time: Time,\n  ): void {\n    // perf-sensitive: function params instead of options object to avoid allocations\n    const [lowerTime, lowerTf] = lower;\n    const [upperTime, upperTf] = upper;\n\n    if (lowerTime === upperTime) {\n      output[0] = upperTime;\n      output[1].copy(upperTf);\n      return;\n    }\n\n    // Interpolate times and transforms\n    const fraction = Math.max(0, Math.min(1, percentOf(lowerTime, upperTime, time)));\n    output[0] = interpolate(lowerTime, upperTime, fraction);\n    Transform.Interpolate(output[1], lowerTf, upperTf, fraction);\n  }\n\n  /**\n   * Interpolate the transform between two [time, transform] pairs.\n   * @param output Output parameter for the interpolated transform\n   * @param lower Start [time, transform]\n   * @param upper End [time, transform]\n   * @param time Interpolant in the range [lower[0], upper[0]]\n   */\n  public static InterpolateTransform(\n    output: Transform,\n    lower: TimeAndTransform,\n    upper: TimeAndTransform,\n    time: Time,\n  ): void {\n    // perf-sensitive: function params instead of options object to avoid allocations\n    const [lowerTime, lowerTf] = lower;\n    const [upperTime, upperTf] = upper;\n\n    if (lowerTime === upperTime) {\n      output.copy(upperTf);\n      return;\n    }\n\n    // Interpolate times and transforms\n    const fraction = Math.max(0, Math.min(1, percentOf(lowerTime, upperTime, time)));\n    Transform.Interpolate(output, lowerTf, upperTf, fraction);\n  }\n\n  /**\n   * Get the transform `parentFrame_T_childFrame` (from child to parent) at the\n   * given time.\n   * @param out Output transform matrix\n   * @param parentFrame Parent destination frame\n   * @param childFrame Child source frame\n   * @param time Time to transform at\n   * @param maxDelta The time parameter can exceed the bounds of the transform\n   *   history by up to this amount and still clamp to the oldest or newest\n   *   transform\n   * @returns True on success\n   */\n  public static GetTransformMatrix(\n    out: mat4,\n    parentFrame: CoordinateFrame,\n    childFrame: CoordinateFrame,\n    time: Time,\n    maxDelta: Duration,\n  ): boolean {\n    // perf-sensitive: function params instead of options object to avoid allocations\n    mat4.identity(out);\n\n    let curFrame = childFrame;\n    while (curFrame !== parentFrame) {\n      if (!curFrame.findClosestTransforms(tempLower, tempUpper, time, maxDelta)) {\n        return false;\n      }\n      CoordinateFrame.InterpolateTransform(tempTransform, tempLower, tempUpper, time);\n\n      if (curFrame.offsetEulerDegrees) {\n        const quaternion = tempTransform.rotation();\n        const rotationMatrix = mat4.fromQuat(temp2Matrix, quaternion);\n        const euler = eulerFromMatrixUnscaled(tempVec3, rotationMatrix);\n        vec3.add(euler, euler, curFrame.offsetEulerDegrees);\n        tempTransform.setRotation(quaternionFromEuler(tempVec4, euler));\n      }\n\n      if (curFrame.offsetPosition) {\n        const p = tempTransform.position() as vec3;\n        vec3.add(p, p, curFrame.offsetPosition);\n        tempTransform.setPosition(p);\n      }\n\n      mat4.multiply(out, tempTransform.matrix(), out);\n\n      if (curFrame._parent == undefined) {\n        throw new Error(\n          `Frame \"${parentFrame.displayName()}\" is not a parent of \"${childFrame.displayName()}\"`,\n        );\n      }\n      curFrame = curFrame._parent;\n    }\n\n    return true;\n  }\n\n  /**\n   * Apply the transform from `child` to `parent` at the given time to the given\n   * input pose. The transform can optionally be inverted, to go from `parent`\n   * to `child`.\n   * @param out Output pose, this will be modified with the result on success\n   * @param input Input pose that exists in `child`, or `parent` if `invert` is\n   *   true\n   * @param parent Parent frame\n   * @param child Child frame\n   * @invert Whether to invert the transform (go from parent to child)\n   * @param time Time to compute the transform at\n   * @param maxDelta The time parameter can exceed the bounds of the transform\n   *   history by up to this amount and still clamp to the oldest or newest\n   *   transform\n   * @returns True on success\n   */\n  public static Apply(\n    out: Pose,\n    input: Readonly<Pose>,\n    parent: CoordinateFrame,\n    child: CoordinateFrame,\n    invert: boolean,\n    time: Time,\n    maxDelta: Duration,\n  ): boolean {\n    // perf-sensitive: function params instead of options object to avoid allocations\n    if (!CoordinateFrame.GetTransformMatrix(tempMatrix, parent, child, time, maxDelta)) {\n      return false;\n    }\n    if (invert) {\n      mat4.invert(tempMatrix, tempMatrix);\n    }\n\n    mat4.multiply(tempMatrix, tempMatrix, tempTransform.setPose(input).matrix());\n    tempTransform.setMatrixUnscaled(tempMatrix).toPose(out);\n    return true;\n  }\n\n  /**\n   * Returns a display-friendly rendition of `frameId`, quoting the id if it is\n   * an empty string or starts or ends with whitespace.\n   */\n  public static DisplayName(frameId: AnyFrameId): string {\n    if (frameId === FALLBACK_FRAME_ID) {\n      return \"(none)\";\n    }\n    return frameId === \"\" || frameId.startsWith(\" \") || frameId.endsWith(\" \")\n      ? `\"${frameId}\"`\n      : frameId;\n  }\n}\n\nfunction copyPose(out: Pose, pose: Readonly<Pose>): void {\n  const p = pose.position;\n  const o = pose.orientation;\n  out.position.x = p.x;\n  out.position.y = p.y;\n  out.position.z = p.z;\n  out.orientation.x = o.x;\n  out.orientation.y = o.y;\n  out.orientation.z = o.z;\n  out.orientation.w = o.w;\n}\n\n// Compute XYZ Euler angles in degrees from an unscaled rotation matrix. This\n// method is adapted from THREE.js Euler#setFromRotationMatrix()\nfunction eulerFromMatrixUnscaled(out: vec3, m: mat4): vec3 {\n  const m11 = m[0];\n  const m12 = m[4];\n  const m13 = m[8];\n  const m22 = m[5];\n  const m23 = m[9];\n  const m32 = m[6];\n  const m33 = m[10];\n\n  out[1] = Math.asin(Math.max(-1, Math.min(1, m13)));\n\n  if (Math.abs(m13) < 0.9999999) {\n    out[0] = Math.atan2(-m23, m33);\n    out[2] = Math.atan2(-m12, m11);\n  } else {\n    out[0] = Math.atan2(m32, m22);\n    out[2] = 0;\n  }\n\n  // Convert to degrees\n  out[0] *= RAD2DEG;\n  out[1] *= RAD2DEG;\n  out[2] *= RAD2DEG;\n  return out;\n}\n\n// Compute a quaternion from XYZ Euler angles in degrees. This method is adapted\n// from THREE.js Quaternionr#setFromEuler()\nfunction quaternionFromEuler(out: quat, euler: vec3): quat {\n  const x = euler[0] * DEG2RAD;\n  const y = euler[1] * DEG2RAD;\n  const z = euler[2] * DEG2RAD;\n\n  const c1 = Math.cos(x / 2);\n  const c2 = Math.cos(y / 2);\n  const c3 = Math.cos(z / 2);\n\n  const s1 = Math.sin(x / 2);\n  const s2 = Math.sin(y / 2);\n  const s3 = Math.sin(z / 2);\n\n  out[0] = s1 * c2 * c3 + c1 * s2 * s3;\n  out[1] = c1 * s2 * c3 - s1 * c2 * s3;\n  out[2] = c1 * c2 * s3 + s1 * s2 * c3;\n  out[3] = c1 * c2 * c3 - s1 * s2 * s3;\n  return out;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { CoordinateFrame, MAX_DURATION, FallbackFrameId, AnyFrameId } from \"./CoordinateFrame\";\nimport { Transform } from \"./Transform\";\nimport { Pose } from \"./geometry\";\nimport { Duration, Time } from \"./time\";\n\nconst DEFAULT_MAX_CAPACITY_PER_FRAME = 50_000;\n\nexport enum AddTransformResult {\n  NOT_UPDATED,\n  UPDATED,\n  CYCLE_DETECTED,\n}\n\n/**\n * TransformTree is a collection of coordinate frames with convenience methods\n * for getting and creating frames and adding transforms between frames.\n */\nexport class TransformTree {\n  private _frames = new Map<string, CoordinateFrame>();\n  private _maxStorageTime: Duration;\n  private _maxCapacityPerFrame: number;\n  public defaultRootFrame: CoordinateFrame<FallbackFrameId>;\n\n  public constructor(\n    maxStorageTime = MAX_DURATION,\n    maxCapacityPerFrame = DEFAULT_MAX_CAPACITY_PER_FRAME,\n  ) {\n    this._maxStorageTime = maxStorageTime;\n    this._maxCapacityPerFrame = maxCapacityPerFrame;\n    this.defaultRootFrame = new CoordinateFrame(\n      CoordinateFrame.FALLBACK_FRAME_ID,\n      undefined,\n      this._maxStorageTime,\n      this._maxCapacityPerFrame,\n    );\n    this.defaultRootFrame.addTransform(0n, Transform.Identity());\n  }\n\n  public addTransform(\n    frameId: string,\n    parentFrameId: string,\n    time: Time,\n    transform: Transform,\n  ): AddTransformResult {\n    let updated = !this.hasFrame(frameId);\n    let cycleDetected = false;\n    const frame = this.getOrCreateFrame(frameId);\n    const curParentFrame = frame.parent();\n    if (curParentFrame == undefined || curParentFrame.id !== parentFrameId) {\n      cycleDetected = this._checkParentForCycle(frameId, parentFrameId);\n      // This frame was previously unparented but now we know its parent, or we\n      // are reparenting this frame\n      if (!cycleDetected) {\n        frame.setParent(this.getOrCreateFrame(parentFrameId));\n        updated = true;\n      }\n    }\n\n    if (!cycleDetected) {\n      frame.addTransform(time, transform);\n    }\n    return cycleDetected\n      ? AddTransformResult.CYCLE_DETECTED\n      : updated\n      ? AddTransformResult.UPDATED\n      : AddTransformResult.NOT_UPDATED;\n  }\n\n  /**\n   * Removes transform data from a particular parent-child link at the given timestamp. Does nothing\n   * if the child does not exist or has a different parent.\n   */\n  public removeTransform(childFrameId: string, parentFrameId: string, stamp: bigint): void {\n    const child = this.frame(childFrameId);\n    if (!child) {\n      return;\n    }\n    if (child.parent()?.id !== parentFrameId) {\n      return;\n    }\n    child.removeTransformAt(stamp);\n    this._removeEmptyAncestors(child);\n  }\n\n  /**\n   * Walk up the tree starting from `candidate` and prune frames with no history entries and no\n   * children.\n   */\n  private _removeEmptyAncestors(candidate: CoordinateFrame): void {\n    if (candidate.transformsSize() > 0) {\n      // don't want to delete this frame, it is not empty\n      return;\n    }\n\n    // Build a list of children for each frame in the tree, used to check whether nodes are leaf\n    // nodes\n    const childrenByParentId = new Map<string, Set<string>>();\n    for (const frame of this._frames.values()) {\n      childrenByParentId.set(frame.id, new Set());\n    }\n    for (const frame of this._frames.values()) {\n      const parent = frame.parent();\n      if (parent === candidate) {\n        // can't delete this frame or its ancestors, it still has children\n        return;\n      }\n      if (parent == undefined) {\n        continue;\n      }\n      const children = childrenByParentId.get(parent.id);\n      if (!children) {\n        throw new Error(\"invariant: should have children array\");\n      }\n      children.add(frame.id);\n    }\n\n    // Walk upwards, deleting nodes with no history entries and no children\n    for (\n      let current: typeof candidate | undefined = candidate;\n      current;\n      current = current.parent()\n    ) {\n      if (current.transformsSize() > 0) {\n        // don't want to delete this frame, it is not empty\n        return;\n      }\n      const children = childrenByParentId.get(current.id);\n      if (children && children.size > 0) {\n        // can't delete this frame or its ancestors, it still has children\n        return;\n      }\n      this._frames.delete(current.id);\n      childrenByParentId.delete(current.id);\n      const parentId = current.parent()?.id;\n      if (parentId) {\n        childrenByParentId.get(parentId)?.delete(current.id);\n      }\n    }\n  }\n\n  public clear(): void {\n    this._frames.clear();\n  }\n\n  public clearAfter(time: Time): void {\n    for (const frame of this._frames.values()) {\n      frame.removeTransformsAfter(time);\n    }\n  }\n\n  public hasFrame(id: AnyFrameId): boolean {\n    if (id === CoordinateFrame.FALLBACK_FRAME_ID) {\n      return true;\n    }\n    return this._frames.has(id);\n  }\n\n  public frame<ID extends AnyFrameId>(id: ID): CoordinateFrame<ID> | undefined {\n    if (id === CoordinateFrame.FALLBACK_FRAME_ID) {\n      return this.defaultRootFrame as CoordinateFrame<ID>;\n    }\n    return this._frames.get(id) as CoordinateFrame<ID>;\n  }\n\n  public getOrCreateFrame(id: string): CoordinateFrame {\n    let frame = this._frames.get(id);\n    if (!frame) {\n      frame = new CoordinateFrame(id, undefined, this._maxStorageTime, this._maxCapacityPerFrame);\n      this._frames.set(id, frame);\n    }\n    return frame;\n  }\n\n  public frames(): ReadonlyMap<string, CoordinateFrame> {\n    return this._frames;\n  }\n\n  public apply(\n    output: Pose,\n    input: Readonly<Pose>,\n    frameId: AnyFrameId,\n    rootFrameId: AnyFrameId | undefined,\n    srcFrameId: AnyFrameId,\n    dstTime: Time,\n    srcTime: Time,\n    maxDelta?: Duration,\n  ): Pose | undefined {\n    const frame = this.frame(frameId);\n    const srcFrame = this.frame(srcFrameId);\n    if (!frame || !srcFrame) {\n      return undefined;\n    }\n    const rootFrame =\n      (rootFrameId != undefined ? this.frame(rootFrameId) : frame.root()) ?? frame.root();\n    return frame.apply(output, input, rootFrame, srcFrame, dstTime, srcTime, maxDelta);\n  }\n\n  public frameList(): { label: string; value: string }[] {\n    type FrameEntry = { id: string; children: FrameEntry[] };\n\n    const frames = Array.from(this._frames.values());\n    const frameMap = new Map<string, FrameEntry>(\n      frames.map((frame) => [frame.id, { id: frame.id, children: [] }]),\n    );\n\n    // Create a hierarchy of coordinate frames\n    const rootFrames: FrameEntry[] = [];\n    for (const frame of frames) {\n      const frameEntry = frameMap.get(frame.id)!;\n      const parentId = frame.parent()?.id;\n      if (parentId == undefined) {\n        rootFrames.push(frameEntry);\n      } else {\n        const parent = frameMap.get(parentId);\n        if (parent == undefined) {\n          continue;\n        }\n        parent.children.push(frameEntry);\n      }\n    }\n\n    // Convert the `rootFrames` hierarchy into a flat list of coordinate frames with depth\n    const output: { label: string; value: string }[] = [];\n\n    function addFrame(frame: FrameEntry, depth: number) {\n      const displayName = CoordinateFrame.DisplayName(frame.id);\n      output.push({\n        value: frame.id,\n        label: `${\"\\u00A0\\u00A0\".repeat(depth)}${displayName}`,\n      });\n      frame.children.sort((a, b) => a.id.localeCompare(b.id));\n      for (const child of frame.children) {\n        addFrame(child, depth + 1);\n      }\n    }\n\n    rootFrames.sort((a, b) => a.id.localeCompare(b.id));\n    for (const entry of rootFrames) {\n      addFrame(entry, 0);\n    }\n\n    return output;\n  }\n  private _checkParentForCycle(frameId: string, parentFrameId: string): boolean {\n    if (frameId === parentFrameId) {\n      return true;\n    }\n    // walk up tree from parent Frame to check if it eventually crosses the frame\n    let frame = this.frame(parentFrameId);\n    while (frame?.parent()) {\n      if (frame.parent()?.id === frameId) {\n        return true;\n      }\n      frame = frame.parent();\n    }\n    return false;\n  }\n\n  public static Clone(tree: TransformTree): TransformTree {\n    // eslint-disable-next-line no-underscore-dangle\n    const newTree = new TransformTree(tree._maxStorageTime, tree._maxCapacityPerFrame);\n    // eslint-disable-next-line no-underscore-dangle\n    newTree._frames = tree._frames;\n    return newTree;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { AnyFrameId, CoordinateFrame } from \"../transforms\";\n\nexport const MISSING_TRANSFORM = \"MISSING_TRANSFORM\";\n\nexport function missingTransformMessage(\n  renderFrameId: AnyFrameId,\n  fixedFrameId: AnyFrameId,\n  srcFrameId: AnyFrameId,\n): string {\n  const dstFrameId = renderFrameId === srcFrameId ? fixedFrameId : renderFrameId;\n  if (srcFrameId !== dstFrameId) {\n    return `Missing transform from frame <${CoordinateFrame.DisplayName(\n      srcFrameId,\n    )}> to frame <${CoordinateFrame.DisplayName(dstFrameId)}>`;\n  } else if (srcFrameId !== fixedFrameId) {\n    return `Missing transform from frame <${CoordinateFrame.DisplayName(\n      srcFrameId,\n    )}> to fixed frame <${CoordinateFrame.DisplayName(\n      fixedFrameId,\n    )}> to frame <${CoordinateFrame.DisplayName(dstFrameId)}>`;\n  } else {\n    return `Identity transform failed for frame <${CoordinateFrame.DisplayName(srcFrameId)}>`;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { TransformTree, makePose, Pose, AnyFrameId } from \"./transforms\";\n\nconst tempPose = makePose();\n\nexport function updatePose(\n  renderable: THREE.Object3D,\n  transformTree: TransformTree,\n  renderFrameId: AnyFrameId,\n  fixedFrameId: AnyFrameId,\n  srcFrameId: string,\n  dstTime: bigint,\n  srcTime: bigint,\n): boolean {\n  const pose = renderable.userData.pose as Readonly<Pose> | undefined;\n  if (!pose) {\n    throw new Error(`Missing userData.pose for ${renderable.name}`);\n  }\n  const poseApplied = Boolean(\n    transformTree.apply(tempPose, pose, renderFrameId, fixedFrameId, srcFrameId, dstTime, srcTime),\n  );\n  renderable.visible = poseApplied;\n  if (poseApplied) {\n    const p = tempPose.position;\n    const q = tempPose.orientation;\n    renderable.position.set(p.x, p.y, p.z);\n    renderable.quaternion.set(q.x, q.y, q.z, q.w);\n  }\n  return poseApplied;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { set, unset } from \"lodash\";\nimport * as THREE from \"three\";\nimport { DeepPartial } from \"ts-essentials\";\n\nimport { MessageEvent, SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { Path } from \"./LayerErrors\";\nimport { BaseUserData, Renderable } from \"./Renderable\";\nimport type { Renderer } from \"./Renderer\";\nimport type { SettingsTreeEntry } from \"./SettingsManager\";\nimport { missingTransformMessage, MISSING_TRANSFORM } from \"./renderables/transforms\";\nimport { AnyFrameId } from \"./transforms\";\nimport { updatePose } from \"./updatePose\";\n\nexport type PartialMessage<T> = DeepPartial<T>;\n\nexport type PartialMessageEvent<T> = MessageEvent<DeepPartial<T>>;\n\n/**\n * SceneExtension is a base class for extending the 3D scene. It extends THREE.Object3D and is a\n * child of the THREE.Scene with an identity position and orientation (origin is the render frame\n * origin). The `startFrame()` method will automatically call `updatePose()` for each Renderable in\n * the `renderables` map, placing it at the correct pose given the current renderer TransformTree.\n *\n * A minimum implementation can simply add THREE.Object3D instances using `this.add()`. If these\n * instances are Renderables and also added to this.renderables, their pose will be kept\n * up-to-date in `startFrame()`.\n *\n * - Override `dispose()` to dispose of any unmanaged resources such as GPU buffers. Don't forget\n *   to call `super.dispose()`.\n * - Override `startFrame()` to execute code at the start of each frame. Call `super.startFrame()`\n *   to run `updatePose()` on each entry in `this.renderables`.\n * - Override `settingsNodes()` to add entries to the settings sidebar.\n * - Message subscriptions are added with `renderer.addDatatypeSubscriptions()` or\n *   `renderer.addTopicSubscription()`.\n * - Custom layer actions are added with `renderer.addCustomLayerAction()`.\n */\nexport class SceneExtension<\n  TRenderable extends Renderable<BaseUserData> = Renderable<BaseUserData>,\n  E extends THREE.BaseEvent = THREE.Event,\n> extends THREE.Object3D<E> {\n  /** A unique identifier for this SceneExtension, such as `foxglove.Markers`. */\n  public readonly extensionId: string;\n  /** A reference to the parent `Renderer` instance. */\n  protected readonly renderer: Renderer;\n  /**\n   * A map of string identifiers to Renderable instances. SceneExtensions are free to use any IDs\n   * they choose, although topic names are a common choice for extensions display up to one\n   * renderable per topic.\n   */\n  public readonly renderables = new Map<string, TRenderable>();\n\n  /**\n   * @param extensionId A unique identifier for this SceneExtension, such as `foxglove.Markers`.\n   * @param renderer A reference to the parent `Renderer` instance.\n   */\n  public constructor(extensionId: string, renderer: Renderer) {\n    super();\n    this.extensionId = this.name = extensionId;\n    this.renderer = renderer;\n    // updateSettingsTree() will call settingsNodes() which may be overridden in a child class.\n    // The child class may not assign its members until after this constructor returns. This breaks\n    // type assumptions, so we need to defer the call to updateSettingsTree()\n    queueMicrotask(() => this.updateSettingsTree());\n  }\n\n  /**\n   * Called when the scene is being destroyed. Free any unmanaged resources such as GPU buffers\n   * here. The base class implementation calls dispose() on all `renderables`.\n   */\n  public dispose(): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.dispose();\n    }\n    this.children.length = 0;\n    this.renderables.clear();\n  }\n\n  /**\n   * Called when seeking or a new data source is loaded. The base class implementation removes all\n   * `renderables` and calls `updateSettingsTree()`.\n   */\n  public removeAllRenderables(): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.dispose();\n      this.remove(renderable);\n    }\n    this.renderables.clear();\n    this.updateSettingsTree();\n  }\n\n  /**\n   * Returns a list of settings nodes generated by this extension and the paths they appear at in\n   * the settings sidebar. This method is only called when the scene fundamentally changes such as\n   * new topics appearing or seeking. To manually trigger this method being called, use\n   * `updateSettingsTree()`. The base class implementation returns an empty list.\n   */\n  public settingsNodes(): SettingsTreeEntry[] {\n    return [];\n  }\n\n  /**\n   * Handler for settings tree updates such as visibility toggling or field edits. This is a stub\n   * meant to be overridden in derived classes and used as the handler for settings tree nodes.\n   */\n  public handleSettingsAction = (action: SettingsTreeAction): void => {\n    void action;\n  };\n\n  /**\n   * Manually triggers an update of the settings tree for the nodes generated by this extension. The\n   * `settingsNodes()` method will be called to retrieve the latest nodes.\n   */\n  public updateSettingsTree(): void {\n    this.renderer.settings.setNodesForKey(this.extensionId, this.settingsNodes());\n  }\n\n  /**\n   * Persists a value to the panel configuration at the given path. The base class implementation\n   * calls `renderer.updateConfig()` and `updateSettingsTree()`.\n   */\n  public saveSetting(path: Path, value: unknown): void {\n    // Update the configuration\n    this.renderer.updateConfig((draft) => {\n      if (value == undefined) {\n        unset(draft, path);\n      } else {\n        set(draft, path, value);\n      }\n    });\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  }\n\n  /**\n   * Can be overridden to react to color scheme changes. The base class implementation does nothing.\n   */\n  public setColorScheme(\n    colorScheme: \"dark\" | \"light\",\n    backgroundColor: THREE.Color | undefined,\n  ): void {\n    void colorScheme;\n    void backgroundColor;\n  }\n\n  /**\n   * Called before the Renderer renders a new frame. The base class implementation calls\n   * updatePose() for each entry in `this.renderables`.\n   * @param currentTime Current time of the scene being rendered in nanoseconds. This is the\n   *   playback timestamp not a message timestamp, so it only makes sense to compare it to\n   *   `receiveTime` values.\n   * @param renderFrameId Coordinate frame where the scene camera is currently located.\n   * @param fixedFrameId The root coordinate frame of the scene, called the fixed frame because it\n   *   does not move relative to any parent frame. The fixed frame is the root frame of the render\n   *   frame.\n   */\n  public startFrame(\n    currentTime: bigint,\n    renderFrameId: AnyFrameId,\n    fixedFrameId: AnyFrameId,\n  ): void {\n    for (const renderable of this.renderables.values()) {\n      const path = renderable.userData.settingsPath;\n\n      // Update the THREE.Object3D.visible flag from the user settings visible toggle. If this\n      // renderable is not visible, clear any layer errors and skip its per-frame update logic\n      renderable.visible = renderable.userData.settings.visible;\n      if (!renderable.visible) {\n        this.renderer.settings.errors.clearPath(path);\n        continue;\n      }\n\n      // SceneExtension Renderables exist in a coordinate frame (`frameId`) at some position and\n      // orientation (`pose`) at a point in time (`messageTime` if `frameLocked` is false, otherwise\n      // `currentTime`). The scene is rendered from the point of view of another coordinate frame\n      // (`renderFrameId`) that is part of a coordinate frame hierarchy with `fixedFrameId` at its\n      // root (`renderFrameId` can be equal to `fixedFrameId`). The fixed is assumed to be the\n      // static world coordinates that all other frames connect to.\n      //\n      // Before each visual frame is rendered, every Renderable is transformed from its own\n      // coordinate frame (at its own `messageTime` when `frameLocked` is false) to the fixed frame\n      // at `currentTime` and then to the render frame at `currentTime`. This transformation is\n      // done using transform interpolation, so as new transform messages are received the results\n      // of this interpolation can change from frame to frame\n      const frameLocked = renderable.userData.settings.frameLocked ?? true;\n      const srcTime = frameLocked ? currentTime : renderable.userData.messageTime;\n      const frameId = renderable.userData.frameId;\n      const updated = updatePose(\n        renderable,\n        this.renderer.transformTree,\n        renderFrameId,\n        fixedFrameId,\n        frameId,\n        currentTime,\n        srcTime,\n      );\n      if (!updated) {\n        const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n        this.renderer.settings.errors.add(path, MISSING_TRANSFORM, message);\n      } else {\n        this.renderer.settings.errors.remove(path, MISSING_TRANSFORM);\n      }\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { Time } from \"@foxglove/rostime\";\nimport { FrameTransform, FrameTransforms, NumericType } from \"@foxglove/schemas\";\n\nimport type { PartialMessage } from \"./SceneExtension\";\nimport {\n  ColorRGBA,\n  Header,\n  Matrix6,\n  PointFieldType,\n  Quaternion,\n  TFMessage,\n  Transform,\n  TransformStamped,\n  Vector3,\n} from \"./ros\";\nimport type { Pose } from \"./transforms\";\n\n// Legacy foxglove.Transform type -- see https://github.com/foxglove/schemas/pull/46\ntype LegacyTransform = {\n  timestamp: Time;\n  translation: Vector3;\n  rotation: Quaternion;\n};\n// Legacy foxglove.FrameTransform type -- see https://github.com/foxglove/schemas/pull/46\nexport type LegacyFrameTransform = {\n  timestamp: Time;\n  parent_frame_id: string;\n  child_frame_id: string;\n  transform: LegacyTransform;\n};\n\nexport function normalizeTime(time: Partial<Time> | undefined): Time {\n  if (!time) {\n    return { sec: 0, nsec: 0 };\n  }\n  return { sec: time.sec ?? 0, nsec: time.nsec ?? 0 };\n}\n\nexport function normalizeByteArray(byteArray: unknown): Uint8Array {\n  if (byteArray == undefined) {\n    return new Uint8Array(0);\n  } else if (byteArray instanceof Uint8Array) {\n    return byteArray;\n  } else if (Array.isArray(byteArray) || byteArray instanceof ArrayBuffer) {\n    return new Uint8Array(byteArray);\n  } else {\n    return new Uint8Array(0);\n  }\n}\n\nexport function normalizeInt8Array(int8Array: unknown): Int8Array {\n  if (int8Array == undefined) {\n    return new Int8Array(0);\n  } else if (int8Array instanceof Int8Array) {\n    return int8Array;\n  } else if (Array.isArray(int8Array) || int8Array instanceof ArrayBuffer) {\n    return new Int8Array(int8Array);\n  } else {\n    return new Int8Array(0);\n  }\n}\n\nexport function normalizeFloat32Array(array: unknown): Float32Array {\n  if (array == undefined) {\n    return new Float32Array(0);\n  } else if (array instanceof Float32Array) {\n    return array;\n  } else if (\n    Array.isArray(array) ||\n    array instanceof ArrayBuffer ||\n    array instanceof Float64Array\n  ) {\n    return new Float32Array(array);\n  } else {\n    return new Float32Array(0);\n  }\n}\n\nexport function normalizeVector3(vector: Partial<Vector3> | undefined): Vector3 {\n  if (!vector) {\n    return { x: 0, y: 0, z: 0 };\n  }\n  return { x: vector.x ?? 0, y: vector.y ?? 0, z: vector.z ?? 0 };\n}\n\nexport function normalizeVector3s(\n  vectors: (Partial<Vector3> | undefined)[] | undefined,\n): Vector3[] {\n  if (!vectors) {\n    return [];\n  }\n  return vectors.map(normalizeVector3);\n}\n\nexport function normalizeMatrix6(mat: number[] | undefined): Matrix6 {\n  if (!mat || mat.length !== 36 || typeof mat[0] !== \"number\") {\n    // prettier-ignore\n    return [\n      1, 0, 0, 0, 0, 0,\n      0, 1, 0, 0, 0, 0,\n      0, 0, 1, 0, 0, 0,\n      0, 0, 0, 1, 0, 0,\n      0, 0, 0, 0, 1, 0,\n      0, 0, 0, 0, 0, 1\n    ];\n  }\n  return mat as Matrix6;\n}\n\nexport function normalizeQuaternion(quat: Partial<Quaternion> | undefined): Quaternion {\n  if (!quat) {\n    return { x: 0, y: 0, z: 0, w: 1 };\n  }\n  return { x: quat.x ?? 0, y: quat.y ?? 0, z: quat.z ?? 0, w: quat.w ?? 0 };\n}\n\nexport function normalizeColorRGBA(color: Partial<ColorRGBA> | undefined): ColorRGBA {\n  if (!color) {\n    return { r: 0, g: 0, b: 0, a: 1 };\n  }\n  // alpha defaults to 1 if unspecified\n  return { r: color.r ?? 0, g: color.g ?? 0, b: color.b ?? 0, a: color.a ?? 1 };\n}\n\nexport function normalizeColorRGBAs(\n  colors: (Partial<ColorRGBA> | undefined)[] | undefined,\n): ColorRGBA[] {\n  if (!colors) {\n    return [];\n  }\n  return colors.map(normalizeColorRGBA);\n}\n\nexport function normalizePose(pose: PartialMessage<Pose> | undefined): Pose {\n  return {\n    position: normalizeVector3(pose?.position),\n    orientation: normalizeQuaternion(pose?.orientation),\n  };\n}\n\nexport function normalizeHeader(header: PartialMessage<Header> | undefined): Header {\n  return {\n    frame_id: header?.frame_id ?? \"\",\n    stamp: normalizeTime(header?.stamp),\n    seq: header?.seq,\n  };\n}\n\nexport function normalizeTransform(transform: PartialMessage<Transform> | undefined): Transform {\n  return {\n    translation: normalizeVector3(transform?.translation),\n    rotation: normalizeQuaternion(transform?.rotation),\n  };\n}\n\nexport function normalizeTransformStamped(\n  transform: PartialMessage<TransformStamped> | undefined,\n): TransformStamped {\n  return {\n    header: normalizeHeader(transform?.header),\n    child_frame_id: transform?.child_frame_id ?? \"\",\n    transform: normalizeTransform(transform?.transform),\n  };\n}\n\nexport function normalizeTFMessage(tfMessage: PartialMessage<TFMessage> | undefined): TFMessage {\n  return {\n    transforms: (tfMessage?.transforms ?? []).map(normalizeTransformStamped),\n  };\n}\n\nexport function normalizeFrameTransform(\n  frameTransform:\n    | (PartialMessage<FrameTransform> & PartialMessage<LegacyFrameTransform>)\n    | undefined,\n): FrameTransform {\n  return {\n    timestamp: normalizeTime(frameTransform?.timestamp),\n    parent_frame_id: frameTransform?.parent_frame_id ?? \"\",\n    child_frame_id: frameTransform?.child_frame_id ?? \"\",\n    translation: normalizeVector3(\n      frameTransform?.translation ?? frameTransform?.transform?.translation,\n    ),\n    rotation: normalizeQuaternion(frameTransform?.rotation ?? frameTransform?.transform?.rotation),\n  };\n}\n\nexport function normalizeFrameTransforms(\n  frameTransforms: PartialMessage<FrameTransforms> | undefined,\n): FrameTransforms {\n  return {\n    transforms: (frameTransforms?.transforms ?? []).map(normalizeFrameTransform),\n  };\n}\n\nexport function numericTypeToPointFieldType(type: NumericType): PointFieldType {\n  switch (type) {\n    case NumericType.UINT8:\n      return PointFieldType.UINT8;\n    case NumericType.INT8:\n      return PointFieldType.INT8;\n    case NumericType.UINT16:\n      return PointFieldType.UINT16;\n    case NumericType.INT16:\n      return PointFieldType.INT16;\n    case NumericType.UINT32:\n      return PointFieldType.UINT32;\n    case NumericType.INT32:\n      return PointFieldType.INT32;\n    case NumericType.FLOAT32:\n      return PointFieldType.FLOAT32;\n    case NumericType.FLOAT64:\n      return PointFieldType.FLOAT64;\n    default:\n      return PointFieldType.UNKNOWN;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Topic } from \"@foxglove/studio\";\n\n/**\n * Determines whether `topic` has a supported schema from the set of `supportedSchemaNames`, either\n * as the original schema or one of the `convertibleTo` schemas.\n */\nexport function topicIsConvertibleToSchema(\n  topic: Topic,\n  supportedSchemaNames: Set<string>,\n): boolean {\n  return (\n    supportedSchemaNames.has(topic.schemaName) ||\n    (topic.convertibleTo?.some((name) => supportedSchemaNames.has(name)) ?? false)\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { Grid, NumericType, PackedElementField } from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\nimport { GRID_DATATYPES } from \"@foxglove/studio-base/panels/ThreeDeeRender/foxglove\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport {\n  baseColorModeSettingsNode,\n  ColorModeSettings,\n  getColorConverter,\n  NEEDS_MIN_MAX,\n  FS_SRGB_TO_LINEAR,\n  RGBA_PACKED_FIELDS,\n  hasSeparateRgbaFields,\n} from \"./pointClouds/colors\";\nimport { FieldReader, getReader } from \"./pointClouds/fieldReaders\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { rgbaToCssString, rgbaToLinear, stringToRgba } from \"../color\";\nimport { normalizePose, normalizeTime, normalizeByteArray } from \"../normalizeMessages\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\n\ntype GridColorModeSettings = ColorModeSettings & {\n  // rgba packed modes are only supported for sensor_msgs/PointCloud2\n  colorMode: Exclude<ColorModeSettings[\"colorMode\"], \"rgb\" | \"rgba\">;\n};\n\nexport type LayerSettingsFoxgloveGrid = BaseSettings &\n  GridColorModeSettings & {\n    frameLocked: boolean;\n  };\nfunction zeroReader(): number {\n  return 0;\n}\n\nconst floatTextureColorModes: GridColorModeSettings[\"colorMode\"][] = [\"gradient\", \"colormap\"];\n\nconst INVALID_FOXGLOVE_GRID = \"INVALID_FOXGLOVE_GRID\";\n\nconst DEFAULT_COLOR_MAP = \"turbo\";\nconst DEFAULT_FLAT_COLOR = { r: 1, g: 1, b: 1, a: 1 };\nconst DEFAULT_MIN_COLOR = { r: 100 / 255, g: 47 / 255, b: 105 / 255, a: 1 };\nconst DEFAULT_MAX_COLOR = { r: 227 / 255, g: 177 / 255, b: 135 / 255, a: 1 };\n\nconst COLOR_MODE_TO_GLSL: {\n  [K in GridColorModeSettings[\"colorMode\"] as `COLOR_MODE_${K extends \"rgba-fields\"\n    ? \"RGBA\"\n    : Uppercase<K>}`]: number;\n} = {\n  COLOR_MODE_FLAT: 0,\n  COLOR_MODE_RGBA: 1,\n  COLOR_MODE_GRADIENT: 2,\n  COLOR_MODE_COLORMAP: 3,\n};\n\nconst COLOR_MAP_TO_GLSL: {\n  [K in ColorModeSettings[\"colorMap\"] as `COLOR_MAP_${Uppercase<K>}`]: number;\n} = {\n  COLOR_MAP_TURBO: 0,\n  COLOR_MAP_RAINBOW: 1,\n};\n\nconst DEFAULT_SETTINGS: LayerSettingsFoxgloveGrid = {\n  visible: false,\n  frameLocked: false,\n  colorMode: \"flat\",\n  minValue: undefined,\n  maxValue: undefined,\n  flatColor: rgbaToCssString(DEFAULT_FLAT_COLOR),\n  colorField: undefined,\n  gradient: [rgbaToCssString(DEFAULT_MIN_COLOR), rgbaToCssString(DEFAULT_MAX_COLOR)],\n  colorMap: DEFAULT_COLOR_MAP,\n  explicitAlpha: 1,\n};\n\ninterface GridShaderMaterial extends THREE.ShaderMaterial {\n  uniforms: {\n    map: THREE.IUniform<THREE.DataTexture>;\n\n    colorMode: THREE.IUniform<number>;\n    minValue: THREE.IUniform<number>;\n    maxValue: THREE.IUniform<number>;\n\n    colorMap: THREE.IUniform<number>;\n    colorMapOpacity: THREE.IUniform<number>;\n\n    minGradientColorLinear: THREE.IUniform<THREE.Vector4>;\n    maxGradientColorLinear: THREE.IUniform<THREE.Vector4>;\n  };\n  defines: typeof COLOR_MODE_TO_GLSL &\n    typeof COLOR_MAP_TO_GLSL & {\n      PICKING: number;\n    };\n}\n\nexport type FoxgloveGridUserData = BaseUserData & {\n  settings: LayerSettingsFoxgloveGrid;\n  topic: string;\n  foxgloveGrid: Grid;\n  mesh: THREE.Mesh;\n  texture: THREE.DataTexture;\n  material: GridShaderMaterial;\n  pickingMaterial: THREE.ShaderMaterial;\n};\n\ntype RgbaFieldReaders = {\n  redReader: FieldReader;\n  greenReader: FieldReader;\n  blueReader: FieldReader;\n  alphaReader: FieldReader;\n};\nconst tempRgbaFieldReaders: RgbaFieldReaders = {\n  redReader: zeroReader,\n  greenReader: zeroReader,\n  blueReader: zeroReader,\n  alphaReader: zeroReader,\n};\n\nfunction numericTypeName(type: NumericType): string {\n  return NumericType[type as number] ?? `${type}`;\n}\n\nfunction getTextureEncoding(settings: GridColorModeSettings) {\n  switch (settings.colorMode) {\n    case \"flat\":\n      // color is converted to linear by getColorConverter before being written to the texture\n      return THREE.LinearEncoding;\n    case \"gradient\":\n    case \"colormap\":\n      // color value is raw numeric value\n      return THREE.LinearEncoding;\n    case \"rgba-fields\":\n      return THREE.sRGBEncoding;\n  }\n}\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 1 };\nconst tempMinMaxColor: THREE.Vector2Tuple = [0, 0];\nexport class FoxgloveGridRenderable extends Renderable<FoxgloveGridUserData> {\n  public override dispose(): void {\n    this.userData.texture.dispose();\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.foxgloveGrid;\n  }\n\n  public syncPickingMaterial(): void {\n    const { pickingMaterial, material } = this.userData;\n    pickingMaterial.uniforms = material.uniforms;\n    pickingMaterial.needsUpdate = true;\n  }\n\n  private _getRgbaFieldReaders(out: RgbaFieldReaders, foxgloveGrid: Grid) {\n    const { cell_stride } = foxgloveGrid;\n    for (const field of foxgloveGrid.fields) {\n      const { name } = field;\n      if (name === \"red\") {\n        out.redReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      } else if (name === \"green\") {\n        out.greenReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      } else if (name === \"blue\") {\n        out.blueReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      } else if (name === \"alpha\") {\n        out.alphaReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      }\n    }\n  }\n\n  private _getColorByFieldReader(\n    foxgloveGrid: Grid,\n    settings: LayerSettingsFoxgloveGrid,\n  ): FieldReader | undefined {\n    const { cell_stride } = foxgloveGrid;\n\n    for (const field of foxgloveGrid.fields) {\n      const { type, offset, name } = field;\n\n      if (name === settings.colorField) {\n        const fieldReader = getReader(field, cell_stride);\n        if (!fieldReader) {\n          const typeName = NumericType[type];\n          const message = `Grid field \"${name}\" is invalid. type=${typeName}, offset=${offset}, stride=${cell_stride}`;\n          invalidFoxgloveGridError(this.renderer, this.userData.topic, message);\n          return undefined;\n        }\n        return fieldReader;\n      }\n    }\n\n    return zeroReader;\n  }\n\n  public updateMaterial(settings: LayerSettingsFoxgloveGrid): void {\n    const { colorMode } = settings;\n    const { material } = this.userData;\n    let updated = false;\n    let transparent = false;\n    if (colorMode === \"flat\") {\n      stringToRgba(tempColor, settings.flatColor);\n      transparent = tempColor.a < 1.0;\n    } else if (colorMode === \"gradient\") {\n      stringToRgba(tempColor, settings.gradient[0]);\n      transparent = tempColor.a < 1.0;\n\n      stringToRgba(tempColor, settings.gradient[1]);\n      transparent = transparent || tempColor.a < 1.0;\n    } else if (colorMode === \"colormap\") {\n      transparent = settings.explicitAlpha < 1.0;\n    }\n    if (transparent !== material.transparent) {\n      material.depthWrite = !transparent;\n      material.transparent = transparent;\n      updated = true;\n    }\n    if (updated) {\n      material.needsUpdate = true;\n    }\n  }\n\n  public updateUniforms(foxgloveGrid: Grid, settings: LayerSettingsFoxgloveGrid): void {\n    const { material } = this.userData;\n    const {\n      uniforms: {\n        colorMode,\n        colorMap,\n        colorMapOpacity,\n        minValue,\n        maxValue,\n        minGradientColorLinear,\n        maxGradientColorLinear,\n      },\n    } = material;\n\n    if (settings.colorMode === \"rgba-fields\") {\n      colorMode.value = COLOR_MODE_TO_GLSL.COLOR_MODE_RGBA;\n    } else {\n      colorMode.value = COLOR_MODE_TO_GLSL[`COLOR_MODE_${settings.colorMode.toUpperCase()}`];\n    }\n\n    colorMap.value = COLOR_MAP_TO_GLSL[`COLOR_MAP_${settings.colorMap.toUpperCase()}`];\n\n    colorMapOpacity.value = settings.explicitAlpha;\n\n    minMaxColorValues(\n      tempMinMaxColor,\n      settings,\n      foxgloveGrid.fields.find((field) => settings.colorField === field.name)?.type ??\n        NumericType.UNKNOWN,\n    );\n\n    const [minColorValue, maxColorValue] = tempMinMaxColor;\n    minValue.value = minColorValue;\n    maxValue.value = maxColorValue;\n\n    const minColor = stringToRgba(tempColor, settings.gradient[0]);\n    rgbaToLinear(minColor, minColor);\n    minGradientColorLinear.value.set(minColor.r, minColor.g, minColor.b, minColor.a);\n\n    const maxColor = stringToRgba(tempColor, settings.gradient[1]);\n    rgbaToLinear(maxColor, maxColor);\n    maxGradientColorLinear.value.set(maxColor.r, maxColor.g, maxColor.b, maxColor.a);\n    // unnecessary to update material because all uniforms are sent to GPU every frame\n  }\n\n  public updateTexture(foxgloveGrid: Grid, settings: LayerSettingsFoxgloveGrid): void {\n    let texture = this.userData.texture;\n    const fieldReader = this._getColorByFieldReader(foxgloveGrid, settings);\n    if (!fieldReader) {\n      return;\n    }\n\n    const view = new DataView(\n      foxgloveGrid.data.buffer,\n      foxgloveGrid.data.byteOffset,\n      foxgloveGrid.data.byteLength,\n    );\n\n    const { column_count: cols, row_stride, cell_stride } = foxgloveGrid;\n    const rows = foxgloveGrid.data.length / row_stride;\n    const sizeChanged = cols !== texture.image.width || rows !== texture.image.height;\n    const floatMode = floatTextureColorModes.includes(settings.colorMode);\n    const formatChanged = floatMode\n      ? texture.format !== THREE.RedFormat\n      : texture.format !== THREE.RGBAFormat;\n    if (formatChanged || sizeChanged) {\n      // The image dimensions or format changed, regenerate the texture\n      texture.dispose();\n      texture = createTexture(foxgloveGrid, settings);\n      texture.generateMipmaps = false;\n      this.userData.texture = texture;\n      this.userData.material.uniforms.map.value = texture;\n    }\n\n    const encoding = getTextureEncoding(settings);\n    if (encoding !== texture.encoding) {\n      texture.encoding = encoding;\n      texture.needsUpdate = true;\n    }\n\n    if (floatMode) {\n      // FLOAT texture handling (gradient & colorMap)\n      // type of image.data is Uint8ClampedArray, but it is in fact the raw texture data even thought it's\n      // meant to be used as an RGBA image data array\n      const valueData = texture.image.data as unknown as Float32Array;\n      for (let y = 0; y < rows; y++) {\n        for (let x = 0; x < cols; x++) {\n          const offset = y * row_stride + x * cell_stride;\n          const colorValue = fieldReader(view, offset);\n          const i = y * cols + x;\n          valueData[i] = colorValue;\n        }\n      }\n    } else {\n      // RGBA textures (flat & rgba modes)\n      const rgba = texture.image.data;\n      let hasTransparency = false;\n      if (settings.colorMode === \"rgba-fields\") {\n        this._getRgbaFieldReaders(tempRgbaFieldReaders, foxgloveGrid);\n        const { redReader, greenReader, blueReader, alphaReader } = tempRgbaFieldReaders;\n        for (let y = 0; y < rows; y++) {\n          for (let x = 0; x < cols; x++) {\n            const offset = y * row_stride + x * cell_stride;\n            const i = y * cols + x;\n            const rgbaOffset = i * 4;\n            const alpha = alphaReader(view, offset);\n            rgba[rgbaOffset + 0] = (redReader(view, offset) * 255) | 0;\n            rgba[rgbaOffset + 1] = (greenReader(view, offset) * 255) | 0;\n            rgba[rgbaOffset + 2] = (blueReader(view, offset) * 255) | 0;\n            rgba[rgbaOffset + 3] = (alpha * 255) | 0;\n\n            // We cheat a little with transparency: alpha 0 will be handled by the alphaTest setting, so\n            // we don't need to set material.transparent = true.\n            if (alpha !== 0 && alpha !== 1) {\n              hasTransparency = true;\n            }\n          }\n        }\n      } else {\n        // flat\n        const colorConverter = getColorConverter(\n          settings as typeof settings & { colorMode: typeof settings.colorMode },\n          0,\n          1,\n        );\n        for (let y = 0; y < rows; y++) {\n          for (let x = 0; x < cols; x++) {\n            const offset = y * row_stride + x * cell_stride;\n            const colorValue = fieldReader(view, offset);\n            colorConverter(tempColor, colorValue);\n            const i = y * cols + x;\n            const rgbaOffset = i * 4;\n            rgba[rgbaOffset + 0] = Math.floor(tempColor.r * 255);\n            rgba[rgbaOffset + 1] = Math.floor(tempColor.g * 255);\n            rgba[rgbaOffset + 2] = Math.floor(tempColor.b * 255);\n            rgba[rgbaOffset + 3] = Math.floor(tempColor.a * 255);\n\n            // We cheat a little with transparency: alpha 0 will be handled by the alphaTest setting, so\n            // we don't need to set material.transparent = true.\n            if (tempColor.a !== 0 && tempColor.a !== 1) {\n              hasTransparency = true;\n            }\n          }\n        }\n      }\n      if (this.userData.material.transparent !== hasTransparency) {\n        this.userData.material.transparent = hasTransparency;\n        this.userData.material.depthWrite = !hasTransparency;\n        this.userData.material.needsUpdate = true;\n      }\n    }\n    this.userData.material.uniforms.map.value.needsUpdate = true;\n  }\n}\n\nexport class FoxgloveGrid extends SceneExtension<FoxgloveGridRenderable> {\n  private fieldsByTopic = new Map<string, string[]>();\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Grid\", renderer);\n\n    renderer.addSchemaSubscriptions(GRID_DATATYPES, this.handleFoxgloveGrid);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, GRID_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsFoxgloveGrid>;\n\n      const node = baseColorModeSettingsNode(\n        this.fieldsByTopic.get(topic.name) ?? [],\n        config,\n        topic,\n        DEFAULT_SETTINGS,\n        { supportsPackedRgbModes: false, supportsRgbaFieldsMode: true },\n      );\n      node.icon = \"Cells\";\n      node.fields.frameLocked = {\n        label: \"Frame lock\",\n        input: \"boolean\",\n        value: config.frameLocked ?? DEFAULT_SETTINGS.frameLocked,\n      };\n      (node as SettingsTreeNodeWithActionHandler).handler = handler;\n      entries.push({\n        path: [\"topics\", topic.name],\n        node,\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsFoxgloveGrid>\n        | undefined;\n      renderable.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n\n      renderable.updateMaterial(renderable.userData.settings);\n      renderable.updateUniforms(renderable.userData.foxgloveGrid, renderable.userData.settings);\n      if (\n        action.payload.path[2] === \"colorMode\" ||\n        action.payload.path[2] === \"colorField\" ||\n        action.payload.path[2] === \"flatColor\"\n      ) {\n        // needs to recalculate texture when colorMode or colorField changes\n        // technically it doesn't if it's going between gradient and colorMap, but since it's an infrequent user-action it's not a big hit\n        renderable.updateTexture(renderable.userData.foxgloveGrid, renderable.userData.settings);\n      }\n      renderable.syncPickingMaterial();\n    }\n  };\n\n  private handleFoxgloveGrid = (messageEvent: PartialMessageEvent<Grid>): void => {\n    const topic = messageEvent.topic;\n    const foxgloveGrid = normalizeFoxgloveGrid(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n\n    if (!this._validateFoxgloveGrid(foxgloveGrid, messageEvent.topic)) {\n      if (renderable) {\n        renderable.visible = false;\n      }\n      return;\n    }\n\n    if (renderable) {\n      renderable.visible = true;\n    } else {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsFoxgloveGrid>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      // only want to autoselect if it's in flatcolor mode (without colorfield) and previously didn't have fields\n      if (settings.colorField == undefined && this.fieldsByTopic.get(topic) == undefined) {\n        autoSelectColorField(settings, foxgloveGrid.fields, { supportsPackedRgbModes: false });\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      // Check color\n      const texture = createTexture(foxgloveGrid, settings);\n      const geometry = this.renderer.sharedGeometry.getGeometry(\n        this.constructor.name,\n        createGridGeometry,\n      );\n      const mesh = createMesh(topic, texture, geometry);\n      const material = mesh.material as GridShaderMaterial;\n      const pickingMaterial = mesh.userData.pickingMaterial as THREE.ShaderMaterial;\n\n      // Create the renderable\n      renderable = new FoxgloveGridRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(foxgloveGrid.timestamp),\n        frameId: this.renderer.normalizeFrameId(foxgloveGrid.frame_id),\n        pose: foxgloveGrid.pose,\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        foxgloveGrid,\n        mesh,\n        texture,\n        material,\n        pickingMaterial,\n      });\n      renderable.add(mesh);\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    let fields = this.fieldsByTopic.get(topic);\n    if (!fields || fields.length !== foxgloveGrid.fields.length) {\n      fields = foxgloveGrid.fields.map((field) => field.name);\n      this.fieldsByTopic.set(topic, fields);\n      this.updateSettingsTree();\n    }\n\n    this._updateFoxgloveGridRenderable(\n      renderable,\n      foxgloveGrid,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  };\n\n  private _validateFoxgloveGrid(foxgloveGrid: Grid, topic: string): boolean {\n    const { cell_stride, row_stride, column_count: cols } = foxgloveGrid;\n    const rows = foxgloveGrid.data.byteLength / row_stride;\n\n    if (foxgloveGrid.fields.length === 0) {\n      invalidFoxgloveGridError(\n        this.renderer,\n        topic,\n        `Grid has no fields. At least one field is required for the Grid to be displayed.`,\n      );\n      return false;\n    }\n\n    if (Math.floor(cols) !== cols || Math.floor(rows) !== rows) {\n      const message = `Grid column count (${foxgloveGrid.column_count}) or row count (${rows} = data.byteLength ${foxgloveGrid.data.byteLength} / row_stride ${row_stride}) is not an integer.`;\n      invalidFoxgloveGridError(this.renderer, topic, message);\n      return false;\n    }\n\n    if (cell_stride * cols > row_stride) {\n      const message = `Grid row_stride (${row_stride}) does not allow for requisite column_count (${cols}) with cell stride (${cell_stride}). Minimum requisite bytes in row_stride needed: (${\n        cols * cell_stride\n      }) `;\n      invalidFoxgloveGridError(this.renderer, topic, message);\n      return false;\n    }\n\n    // Determine the minimum bytes needed per cell based on offset/size of each\n    // field, so we can ensure cell_stride is >= this value\n    let minBytesPerCell = 0;\n    let maxField: PackedElementField | undefined;\n    for (const field of foxgloveGrid.fields) {\n      const byteWidth = numericTypeWidth(field.type);\n      if (field.offset + byteWidth > minBytesPerCell) {\n        minBytesPerCell = field.offset + byteWidth;\n        maxField = field;\n      }\n    }\n    if (minBytesPerCell > cell_stride) {\n      let message = `Grid cell_stride (${cell_stride}) is less than minimum bytes per cell (${minBytesPerCell})`;\n      if (maxField) {\n        message += ` required by “${maxField.name}” field, type=${numericTypeName(\n          maxField.type,\n        )}, offset=${maxField.offset}`;\n      }\n      invalidFoxgloveGridError(this.renderer, topic, message);\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @param foxgloveGrid must be validated already */\n  private _updateFoxgloveGridRenderable(\n    renderable: FoxgloveGridRenderable,\n    foxgloveGrid: Grid,\n    receiveTime: bigint,\n    settings: LayerSettingsFoxgloveGrid,\n  ): void {\n    renderable.userData.foxgloveGrid = foxgloveGrid;\n    renderable.userData.pose = foxgloveGrid.pose;\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(foxgloveGrid.timestamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(foxgloveGrid.frame_id);\n    const { row_stride, column_count: cols } = foxgloveGrid;\n    const rows = foxgloveGrid.data.byteLength / row_stride;\n\n    renderable.updateMaterial(settings);\n    renderable.updateUniforms(foxgloveGrid, settings);\n    renderable.updateTexture(foxgloveGrid, settings);\n\n    renderable.scale.set(foxgloveGrid.cell_size.x * cols, foxgloveGrid.cell_size.y * rows, 1);\n\n    renderable.syncPickingMaterial();\n  }\n}\nfunction createGridGeometry(): THREE.PlaneGeometry {\n  const geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n  geometry.translate(0.5, 0.5, 0);\n  geometry.computeBoundingSphere();\n  return geometry;\n}\n\nfunction invalidFoxgloveGridError(renderer: Renderer, topic: string, message: string): void {\n  renderer.settings.errors.addToTopic(topic, INVALID_FOXGLOVE_GRID, message);\n}\n\nfunction createTexture(foxgloveGrid: Grid, settings: GridColorModeSettings): THREE.DataTexture {\n  const { column_count: cols, row_stride } = foxgloveGrid;\n  const rows = foxgloveGrid.data.byteLength / row_stride;\n  const size = isFinite(cols * rows) ? cols * rows : 0;\n  const isFloatType = floatTextureColorModes.includes(settings.colorMode);\n  const data = isFloatType ? new Float32Array(size) : new Uint8ClampedArray(size * 4);\n  const format = isFloatType ? THREE.RedFormat : THREE.RGBAFormat;\n  const type = isFloatType ? THREE.FloatType : THREE.UnsignedByteType;\n  const texture = new THREE.DataTexture(\n    data,\n    cols,\n    rows,\n    format,\n    type,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    1,\n    getTextureEncoding(settings),\n  );\n  texture.generateMipmaps = false;\n  return texture;\n}\n\nfunction createMesh(\n  topic: string,\n  texture: THREE.DataTexture,\n  geometry: THREE.PlaneGeometry,\n): THREE.Mesh {\n  // Create the texture, material, and mesh\n  const material = createMaterial(texture, topic);\n  const pickingMaterial = createPickingMaterial(material);\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.castShadow = true;\n  mesh.receiveShadow = true;\n  // This overrides the picking material used for `mesh`. See Picker.ts\n  mesh.userData.pickingMaterial = pickingMaterial;\n  return mesh;\n}\n\nfunction numericTypeWidth(type: NumericType): number {\n  switch (type) {\n    case NumericType.INT8:\n    case NumericType.UINT8:\n      return 1;\n    case NumericType.INT16:\n    case NumericType.UINT16:\n      return 2;\n    case NumericType.INT32:\n    case NumericType.UINT32:\n    case NumericType.FLOAT32:\n      return 4;\n    case NumericType.FLOAT64:\n      return 8;\n    default:\n      return 0;\n  }\n}\n\nfunction createMaterial(texture: THREE.DataTexture, topic: string): GridShaderMaterial {\n  return new THREE.ShaderMaterial({\n    name: `${topic}:Material`,\n    // Enable alpha clipping. Fully transparent (alpha=0) pixels are skipped\n    // even when transparency is disabled\n    alphaTest: 1e-4,\n    side: THREE.DoubleSide,\n    uniforms: {\n      objectId: { value: [NaN, NaN, NaN, NaN] },\n      colorMode: { value: COLOR_MODE_TO_GLSL.COLOR_MODE_RGBA },\n      colorMap: { value: COLOR_MAP_TO_GLSL.COLOR_MAP_TURBO },\n      colorMapOpacity: { value: 1.0 },\n      minValue: { value: 0.0 },\n      maxValue: { value: 1.0 },\n      minGradientColorLinear: { value: new THREE.Vector4() },\n      maxGradientColorLinear: { value: new THREE.Vector4() },\n      map: { value: texture },\n    },\n    vertexShader: /* glsl */ `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `,\n    defines: {\n      ...COLOR_MODE_TO_GLSL,\n      ...COLOR_MAP_TO_GLSL,\n      PICKING: 0,\n    },\n    fragmentShader: /* glsl */ `\n      uniform vec4 objectId;\n\n      uniform sampler2D map;\n\n      uniform int colorMode;\n      uniform float minValue;\n      uniform float maxValue;\n\n      uniform int colorMap;\n      uniform float colorMapOpacity;\n\n      uniform vec4 minGradientColorLinear;\n      uniform vec4 maxGradientColorLinear;\n\n      varying vec2 vUv;\n\n      ${FS_SRGB_TO_LINEAR}\n\n      // adapted from https://gist.github.com/mikhailov-work/0d177465a8151eb6ede1768d51d476c7\n      vec3 turboLinear(float x) {\n        const vec4 kRedVec4 = vec4(0.13572138, 4.61539260, -42.66032258, 132.13108234);\n        const vec4 kGreenVec4 = vec4(0.09140261, 2.19418839, 4.84296658, -14.18503333);\n        const vec4 kBlueVec4 = vec4(0.10667330, 12.64194608, -60.58204836, 110.36276771);\n        const vec2 kRedVec2 = vec2(-152.94239396, 59.28637943);\n        const vec2 kGreenVec2 = vec2(4.27729857, 2.82956604);\n        const vec2 kBlueVec2 = vec2(-89.90310912, 27.34824973);\n\n        vec4 v4 = vec4(1.0, x, x * x, x * x * x);\n        vec2 v2 = v4.zw * v4.z;\n        return sRGBToLinear(vec3(\n          (dot(v4, kRedVec4)   + dot(v2, kRedVec2)),\n          (dot(v4, kGreenVec4) + dot(v2, kGreenVec2)),\n          (dot(v4, kBlueVec4)  + dot(v2, kBlueVec2))\n        ));\n      }\n\n\n      // taken from http://docs.ros.org/jade/api/rviz/html/c++/point__cloud__transformers_8cpp_source.html\n      // line 47\n      vec3 rainbowLinear(float pct) {\n        vec3 colorOut = vec3(0.0);\n        float h = (1.0 - clamp(pct, 0.0, 1.0)) * 5.0 + 1.0;\n        float i = floor(h);\n        float f = mod(h, 1.0);\n        // if i is even\n        if (mod(i, 2.0) < 1.0) {\n          f = 1.0 - f;\n        }\n        float n = (1.0 - f);\n\n        if (i <= 1.0) {\n          colorOut.r = n;\n          colorOut.g = 0.0;\n          colorOut.b = 1.0;\n        } else if (i == 2.0) {\n          colorOut.r = 0.0;\n          colorOut.g = n;\n          colorOut.b = 1.0;\n        } else if (i == 3.0) {\n          colorOut.r = 0.0;\n          colorOut.g = 1.0;\n          colorOut.b = n;\n        } else if (i == 4.0) {\n          colorOut.r = n;\n          colorOut.g = 1.0;\n          colorOut.b = 0.0;\n        } else {\n          colorOut.r = 1.0;\n          colorOut.g = n;\n          colorOut.b = 0.0;\n        }\n        return sRGBToLinear(colorOut);\n      }\n\n      void main() {\n        vec4 color = texture2D(map, vUv);\n        if(colorMode == COLOR_MODE_RGBA) {\n          // input color is in sRGB, texture.encoding is sRGB, so no conversion is needed\n          gl_FragColor = color;\n        } else if (colorMode == COLOR_MODE_FLAT) {\n          // input color was already converted to linear by getColorConverter\n          gl_FragColor = color;\n        } else {\n          // input color was already converted to linear by getColorConverter\n          float delta = max(maxValue - minValue, 0.00001);\n          float colorValue = color.r;\n          float normalizedColorValue = clamp((colorValue - minValue) / delta, 0.0, 1.0);\n          if(colorMode == COLOR_MODE_GRADIENT) {\n            /**\n            * Computes a gradient step from colors a to b using pre-multiplied alpha to\n            * match CSS linear gradients. The inputs are assumed to not have pre-multiplied\n            * alpha, and the output will have pre-multiplied alpha.\n            */\n            vec4 weightedMinColor = vec4(minGradientColorLinear.rgb * minGradientColorLinear.a, minGradientColorLinear.a);\n            vec4 weightedMaxColor = vec4(maxGradientColorLinear.rgb * maxGradientColorLinear.a, maxGradientColorLinear.a);\n            vec4 finalColor = mix(weightedMinColor, weightedMaxColor, normalizedColorValue);\n            // gradient computation takes place in linear colorspace\n            gl_FragColor = finalColor;\n          } else if(colorMode == COLOR_MODE_COLORMAP) {\n            // colormap\n            if(colorMap == COLOR_MAP_TURBO) {\n              gl_FragColor = vec4(turboLinear(normalizedColorValue), colorMapOpacity);\n            } else if(colorMap == COLOR_MAP_RAINBOW) {\n              gl_FragColor = vec4(rainbowLinear(normalizedColorValue), colorMapOpacity);\n            }\n          }\n        }\n        if(gl_FragColor.a < 0.00001) {\n          discard;\n        }\n        if(PICKING == 1) {\n          gl_FragColor = objectId;\n        } else {\n          #include <encodings_fragment>\n        }\n      }\n    `,\n  }) as GridShaderMaterial;\n}\n\nfunction createPickingMaterial(originalMaterial: GridShaderMaterial): THREE.ShaderMaterial {\n  const material = new THREE.ShaderMaterial();\n  material.copy(originalMaterial);\n  material.name = \"\";\n  material.defines.PICKING = 1;\n  material.uniformsNeedUpdate = true;\n  material.needsUpdate = true;\n  return material;\n}\n\nfunction normalizePackedElementField(\n  field: PartialMessage<PackedElementField> | undefined,\n): PackedElementField {\n  return {\n    name: field?.name ?? \"\",\n    offset: field?.offset ?? 0,\n    type: field?.type ?? 0,\n  };\n}\n\nfunction normalizeFoxgloveGrid(message: PartialMessage<Grid>): Grid {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    pose: normalizePose(message.pose),\n    frame_id: message.frame_id ?? \"\",\n    row_stride: message.row_stride ?? 0,\n    cell_stride: message.cell_stride ?? 0,\n    column_count: message.column_count ?? 0,\n    cell_size: {\n      x: message.cell_size?.x ?? 1,\n      y: message.cell_size?.y ?? 1,\n    },\n    fields: message.fields?.map(normalizePackedElementField) ?? [],\n    data: normalizeByteArray(message.data),\n  };\n}\n\nfunction minMaxColorValues(\n  output: THREE.Vector2Tuple,\n  settings: LayerSettingsFoxgloveGrid,\n  numericType: NumericType,\n): void {\n  if (!NEEDS_MIN_MAX.includes(settings.colorMode)) {\n    return;\n  }\n\n  const [numericMin, numericMax] = NumericTypeMinMaxValueMap[numericType];\n  const minColorValue = settings.minValue ?? numericMin;\n  const maxColorValue = settings.maxValue ?? numericMax;\n  output[0] = minColorValue;\n  output[1] = maxColorValue;\n}\n\nconst NumericTypeMinMaxValueMap: Record<NumericType, [number, number]> = {\n  [NumericType.UNKNOWN]: [0, 1.0],\n  [NumericType.UINT8]: [0, 255],\n  [NumericType.UINT16]: [0, 65535],\n  [NumericType.UINT32]: [0, Math.pow(2, 32) - 1],\n  [NumericType.INT8]: [-128, 127],\n  [NumericType.INT16]: [-Math.pow(2, 16 - 1), -Math.pow(2, 16 - 1) - 1],\n  [NumericType.INT32]: [-Math.pow(2, 32 - 1), -Math.pow(2, 32 - 1) - 1],\n  [NumericType.FLOAT32]: [0, 1.0],\n  [NumericType.FLOAT64]: [0, 1.0],\n};\n\nfunction autoSelectColorField<Settings extends ColorModeSettings>(\n  output: Settings,\n  fields: PackedElementField[],\n  { supportsPackedRgbModes }: { supportsPackedRgbModes: boolean },\n): void {\n  // Prefer color fields first\n  if (supportsPackedRgbModes) {\n    for (const field of fields) {\n      const fieldNameLower = field.name.toLowerCase();\n      if (RGBA_PACKED_FIELDS.has(fieldNameLower)) {\n        output.colorField = field.name;\n        switch (fieldNameLower) {\n          case \"rgb\":\n            output.colorMode = \"rgb\";\n            break;\n          default:\n          case \"rgba\":\n            output.colorMode = \"rgba\";\n            break;\n        }\n        return;\n      }\n    }\n  }\n\n  if (hasSeparateRgbaFields(fields.map((f) => f.name))) {\n    output.colorMode = \"rgba-fields\";\n    return;\n  }\n\n  // Fall back to using the first field\n  if (fields.length > 0) {\n    const firstField = fields[0]!;\n    output.colorField = firstField.name;\n    output.colorMode = \"colormap\";\n    output.colorMap = \"turbo\";\n    return;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport * as THREE from \"three\";\nimport { Key } from \"ts-key-enum\";\n\nconst MAX_DIST = 1;\n\nconst tempVec2 = new THREE.Vector2();\n\nconst XY_PLANE = new THREE.Plane(new THREE.Vector3(0, 0, 1), 0);\n\nexport type InputEvents = {\n  resize: (windowSize: THREE.Vector2) => void;\n  click: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  mousedown: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  mousemove: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  mouseup: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  keydown: (key: Key, event: KeyboardEvent) => void;\n};\n\nexport class Input extends EventEmitter<InputEvents> {\n  private readonly canvas: HTMLCanvasElement;\n  public canvasSize: THREE.Vector2;\n  private resizeObserver: ResizeObserver;\n  private startClientPos?: THREE.Vector2;\n  private cursorCoords = new THREE.Vector2();\n  private worldSpaceCursorCoords?: THREE.Vector3;\n  private raycaster = new THREE.Raycaster();\n\n  public constructor(canvas: HTMLCanvasElement, private getCamera: () => THREE.Camera) {\n    super();\n\n    const parentEl = canvas.parentElement;\n    if (!parentEl) {\n      throw new Error(\"<canvas> must be parented to a DOM element\");\n    }\n\n    this.canvas = canvas;\n    this.canvasSize = new THREE.Vector2(canvas.width, canvas.height);\n\n    this.resizeObserver = new ResizeObserver(this.onResize);\n    this.resizeObserver.observe(parentEl);\n\n    canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    canvas.addEventListener(\"click\", this.onClick);\n    canvas.addEventListener(\"touchstart\", this.onTouchStart, { passive: false });\n    canvas.addEventListener(\"touchend\", this.onTouchEnd, { passive: false });\n    canvas.addEventListener(\"touchmove\", this.onTouchMove, { passive: false });\n    canvas.addEventListener(\"touchcancel\", this.onTouchCancel, { passive: false });\n  }\n\n  public dispose(): void {\n    const canvas = this.canvas;\n\n    this.removeAllListeners();\n    this.resizeObserver.disconnect();\n\n    canvas.removeEventListener(\"mousedown\", this.onMouseDown);\n    canvas.removeEventListener(\"mousemove\", this.onMouseMove);\n    canvas.removeEventListener(\"mouseup\", this.onMouseUp);\n    canvas.removeEventListener(\"click\", this.onClick);\n    canvas.removeEventListener(\"touchstart\", this.onTouchStart);\n    canvas.removeEventListener(\"touchend\", this.onTouchEnd);\n    canvas.removeEventListener(\"touchmove\", this.onTouchMove);\n    canvas.removeEventListener(\"touchcancel\", this.onTouchCancel);\n  }\n\n  private onResize = (_entries: ResizeObserverEntry[]): void => {\n    if (this.canvas.parentElement) {\n      const newSize = innerSize(this.canvas.parentElement);\n      if (isNaN(newSize.width) || isNaN(newSize.height)) {\n        return;\n      }\n      if (newSize.width !== this.canvasSize.width || newSize.height !== this.canvasSize.height) {\n        this.canvasSize.width = newSize.width;\n        this.canvasSize.height = newSize.height;\n        this.emit(\"resize\", this.canvasSize);\n      }\n    }\n  };\n\n  private onMouseDown = (event: MouseEvent): void => {\n    this.startClientPos = new THREE.Vector2(event.offsetX, event.offsetY);\n    this.updateCursorCoords(event);\n    this.emit(\"mousedown\", this.cursorCoords, this.worldSpaceCursorCoords, event);\n  };\n\n  private onMouseMove = (event: MouseEvent): void => {\n    this.updateCursorCoords(event);\n    this.emit(\"mousemove\", this.cursorCoords, this.worldSpaceCursorCoords, event);\n  };\n\n  private onMouseUp = (event: MouseEvent): void => {\n    this.updateCursorCoords(event);\n    this.emit(\"mouseup\", this.cursorCoords, this.worldSpaceCursorCoords, event);\n  };\n\n  private onClick = (event: MouseEvent): void => {\n    if (!this.startClientPos) {\n      return;\n    }\n\n    const dist = this.startClientPos.distanceTo(tempVec2.set(event.offsetX, event.offsetY));\n    this.startClientPos = undefined;\n\n    if (dist > MAX_DIST) {\n      return;\n    }\n\n    this.updateCursorCoords(event);\n    this.emit(\"click\", this.cursorCoords, this.worldSpaceCursorCoords, event);\n  };\n\n  private onTouchStart = (event: TouchEvent): void => {\n    const touch = event.touches[0];\n    if (touch) {\n      this.startClientPos = new THREE.Vector2(touch.clientX, touch.clientY);\n    }\n    event.preventDefault();\n  };\n\n  private onTouchEnd = (event: TouchEvent): void => {\n    event.preventDefault();\n  };\n\n  private onTouchMove = (event: TouchEvent): void => {\n    event.preventDefault();\n  };\n\n  private onTouchCancel = (event: TouchEvent): void => {\n    event.preventDefault();\n  };\n\n  private updateCursorCoords(event: MouseEvent): void {\n    this.cursorCoords.x = event.offsetX;\n    this.cursorCoords.y = event.offsetY;\n\n    this.raycaster.setFromCamera(\n      // Cursor position in NDC\n      tempVec2.set(\n        (event.offsetX / this.canvasSize.width) * 2 - 1,\n        -((event.offsetY / this.canvasSize.height) * 2 - 1),\n      ),\n      this.getCamera(),\n    );\n    this.worldSpaceCursorCoords =\n      this.raycaster.ray.intersectPlane(\n        XY_PLANE,\n        this.worldSpaceCursorCoords ?? new THREE.Vector3(),\n      ) ?? undefined;\n  }\n}\n\nfunction innerSize(node: HTMLElement) {\n  const cs = getComputedStyle(node);\n\n  const paddingX = parseFloat(cs.paddingLeft) + parseFloat(cs.paddingRight);\n  const paddingY = parseFloat(cs.paddingTop) + parseFloat(cs.paddingBottom);\n\n  const borderX = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth);\n  const borderY = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth);\n\n  const width = node.clientWidth - paddingX - borderX;\n  const height = node.clientHeight - paddingY - borderY;\n\n  return { width, height };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { MeshoptDecoder } from \"meshoptimizer\";\nimport * as THREE from \"three\";\nimport dracoDecoderWasmUrl from \"three/examples/jsm/libs/draco/draco_decoder.wasm\";\nimport dracoWasmWrapperJs from \"three/examples/jsm/libs/draco/draco_wasm_wrapper.js?raw\";\nimport { ColladaLoader } from \"three/examples/jsm/loaders/ColladaLoader\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { STLLoader } from \"three/examples/jsm/loaders/STLLoader\";\n\nimport Logger from \"@foxglove/log\";\n\nconst log = Logger.getLogger(__filename);\n\nexport type MeshUpAxis = \"y_up\" | \"z_up\";\nexport const DEFAULT_MESH_UP_AXIS: MeshUpAxis = \"y_up\";\n\nexport type ModelCacheOptions = {\n  edgeMaterial: THREE.Material;\n  ignoreColladaUpAxis: boolean;\n  meshUpAxis: MeshUpAxis;\n};\n\ntype LoadModelOptions = {\n  overrideMediaType?: string;\n};\n\nexport type LoadedModel = THREE.Group | THREE.Scene;\n\ntype ErrorCallback = (err: Error) => void;\n\nconst DEFAULT_COLOR = new THREE.Color(0x248eff).convertSRGBToLinear();\n\nconst GLTF_MIME_TYPES = [\"model/gltf\", \"model/gltf-binary\", \"model/gltf+json\"];\n// Sourced from <https://github.com/Ultimaker/Cura/issues/4141>\nconst STL_MIME_TYPES = [\"model/stl\", \"model/x.stl-ascii\", \"model/x.stl-binary\", \"application/sla\"];\nconst DAE_MIME_TYPES = [\"model/vnd.collada+xml\"];\nconst OBJ_MIME_TYPES = [\"model/obj\", \"text/prs.wavefront-obj\"];\n\nexport class ModelCache {\n  private _textDecoder = new TextDecoder();\n  private _models = new Map<string, Promise<LoadedModel | undefined>>();\n  private _edgeMaterial: THREE.Material;\n\n  private _dracoLoader?: DRACOLoader;\n\n  public constructor(public readonly options: ModelCacheOptions) {\n    this._edgeMaterial = options.edgeMaterial;\n  }\n\n  public async load(\n    url: string,\n    opts: LoadModelOptions,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel | undefined> {\n    let promise = this._models.get(url);\n    if (promise) {\n      return await promise;\n    }\n\n    promise = this._loadModel(url, opts, reportError)\n      .then((model) => addEdges(model, this._edgeMaterial))\n      .catch(async (err) => {\n        reportError(err as Error);\n        return undefined;\n      });\n\n    this._models.set(url, promise);\n    return await promise;\n  }\n\n  private async _loadModel(\n    url: string,\n    options: LoadModelOptions,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel> {\n    const GLB_MAGIC = 0x676c5446; // \"glTF\"\n\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errMsg = response.statusText;\n      throw new Error(`Error ${response.status}${errMsg ? ` (${errMsg})` : ``}`);\n    }\n\n    const buffer = await response.arrayBuffer();\n    if (buffer.byteLength < 4) {\n      throw new Error(`${buffer.byteLength} bytes received`);\n    }\n    const view = new DataView(buffer);\n    const contentType = options.overrideMediaType ?? response.headers.get(\"content-type\") ?? \"\";\n\n    // Check if this is a glTF .glb or .gltf file\n    if (\n      GLB_MAGIC === view.getUint32(0, false) ||\n      GLTF_MIME_TYPES.includes(contentType) ||\n      /\\.glb$/i.test(url) ||\n      /\\.gltf$/i.test(url)\n    ) {\n      return await this.loadGltf(url, reportError);\n    }\n\n    // Check if this is a STL file based on content-type or file extension\n    if (STL_MIME_TYPES.includes(contentType) || /\\.stl$/i.test(url)) {\n      return this.loadSTL(url, buffer, this.options.meshUpAxis);\n    }\n\n    // Check if this is a COLLADA file based on content-type or file extension\n    if (DAE_MIME_TYPES.includes(contentType) || /\\.dae$/i.test(url)) {\n      const text = this._textDecoder.decode(buffer);\n      return await this.loadCollada(url, text, this.options.ignoreColladaUpAxis, reportError);\n    }\n\n    // Check if this is an OBJ file based on content-type or file extension\n    if (OBJ_MIME_TYPES.includes(contentType) || /\\.obj$/i.test(url)) {\n      const text = this._textDecoder.decode(buffer);\n      return await this.loadOBJ(url, text, this.options.meshUpAxis, reportError);\n    }\n\n    throw new Error(`Unknown ${buffer.byteLength} byte mesh (content-type: \"${contentType}\")`);\n  }\n\n  private async loadGltf(url: string, reportError: ErrorCallback): Promise<LoadedModel> {\n    const onError = (assetUrl: string) => {\n      const originalUrl = unrewriteUrl(assetUrl);\n      log.error(`Failed to load GLTF asset \"${originalUrl}\" for \"${url}\"`);\n      reportError(new Error(`Failed to load GLTF asset \"${originalUrl}\"`));\n    };\n\n    const manager = new THREE.LoadingManager(undefined, undefined, onError);\n    manager.setURLModifier(rewriteUrl);\n    const gltfLoader = new GLTFLoader(manager);\n    gltfLoader.setMeshoptDecoder(MeshoptDecoder);\n    gltfLoader.setDRACOLoader(this.getDracoLoader(manager));\n\n    manager.itemStart(url);\n    const gltf = await gltfLoader.loadAsync(url);\n    manager.itemEnd(url);\n\n    // THREE.js uses Y-up, while Studio follows the ROS\n    // [REP-0103](https://www.ros.org/reps/rep-0103.html) convention of Z-up\n    gltf.scene.rotateX(Math.PI / 2);\n\n    return gltf.scene;\n  }\n\n  private loadSTL(url: string, buffer: ArrayBuffer, meshUpAxis: MeshUpAxis): LoadedModel {\n    // STL files do not reference any external assets, no LoadingManager needed\n    const stlLoader = new STLLoader();\n    const bufferGeometry = stlLoader.parse(buffer);\n    log.debug(`Finished loading STL from ${url}`);\n    const material = new THREE.MeshStandardMaterial({\n      name: url.slice(-32), // truncate to 32 characters\n      color: DEFAULT_COLOR,\n      metalness: 0,\n      roughness: 1,\n      dithering: true,\n    });\n    const mesh = new THREE.Mesh(bufferGeometry, material);\n    const group = new THREE.Group();\n    group.add(mesh);\n\n    // THREE.js uses Y-up, while Studio follows the ROS\n    // [REP-0103](https://www.ros.org/reps/rep-0103.html) convention of Z-up\n    if (meshUpAxis === \"y_up\") {\n      group.rotateX(Math.PI / 2);\n    }\n\n    return group;\n  }\n\n  private async loadCollada(\n    url: string,\n    text: string,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    ignoreUpAxis: boolean,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel> {\n    const onError = (assetUrl: string) => {\n      const originalUrl = unrewriteUrl(assetUrl);\n      log.error(`Failed to load COLLADA asset \"${originalUrl}\" for \"${url}\"`);\n      reportError(new Error(`Failed to load COLLADA asset \"${originalUrl}\"`));\n    };\n\n    // The three.js ColladaLoader handles <up_axis> by detecting Z_UP and simply\n    // applying a scene rotation. Since Studio is already Z_UP, we do our own\n    // <up_axis> handling and skip rotation entirely for the Z_UP case\n    const xml = new DOMParser().parseFromString(text, \"application/xml\");\n    const upAxis = ignoreUpAxis\n      ? \"Z_UP\"\n      : (xml.querySelector(\"up_axis\")?.textContent ?? \"Y_UP\").trim().toUpperCase();\n    xml.querySelectorAll(\"up_axis\").forEach((node) => node.remove());\n    const xmlText = xml.documentElement.outerHTML;\n\n    const manager = new THREE.LoadingManager(undefined, undefined, onError);\n    manager.setURLModifier(rewriteUrl);\n    const daeLoader = new ColladaLoader(manager);\n\n    manager.itemStart(url);\n    const dae = daeLoader.parse(xmlText, baseUrl(url));\n    manager.itemEnd(url);\n\n    // If the <up_axis> is Y_UP, rotate to the Studio convention of Z-up following\n    // ROS [REP-0103](https://www.ros.org/reps/rep-0103.html)\n    if (upAxis === \"Y_UP\") {\n      dae.scene.rotateX(Math.PI / 2);\n    }\n\n    return fixDaeMaterials(dae.scene);\n  }\n\n  private async loadOBJ(\n    url: string,\n    text: string,\n    meshUpAxis: MeshUpAxis,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel> {\n    const onError = (assetUrl: string) => {\n      const originalUrl = unrewriteUrl(assetUrl);\n      log.error(`Failed to load OBJ asset \"${originalUrl}\" for \"${url}\"`);\n      reportError(new Error(`Failed to load OBJ asset \"${originalUrl}\"`));\n    };\n\n    const manager = new THREE.LoadingManager(undefined, undefined, onError);\n    manager.setURLModifier(rewriteUrl);\n    const objLoader = new OBJLoader(manager);\n\n    manager.itemStart(url);\n    const group = objLoader.parse(text);\n    manager.itemEnd(url);\n\n    // THREE.js uses Y-up, while Studio follows the ROS\n    // [REP-0103](https://www.ros.org/reps/rep-0103.html) convention of Z-up\n    if (meshUpAxis === \"y_up\") {\n      group.rotateX(Math.PI / 2);\n    }\n\n    return fixObjMaterials(group);\n  }\n\n  // singleton dracoloader\n  private getDracoLoader(manager: THREE.LoadingManager): DRACOLoader {\n    let dracoLoader = this._dracoLoader;\n    if (!dracoLoader) {\n      dracoLoader = new DRACOLoader(manager);\n      // Hack in a replacement function to load assets from the webpack bundle\n      (dracoLoader as { _loadLibrary?: (url: string, responseType: string) => unknown })[\n        \"_loadLibrary\"\n      ] = async function (url: string, responseType: string) {\n        if (url === \"draco_wasm_wrapper.js\" && responseType === \"text\") {\n          return dracoWasmWrapperJs;\n        } else if (url === \"draco_decoder.wasm\" && responseType === \"arraybuffer\") {\n          return await (await fetch(dracoDecoderWasmUrl)).arrayBuffer();\n        } else {\n          throw new Error(\n            `DRACOLoader attempt to load non-bundled asset: ${url} as ${responseType}`,\n          );\n        }\n      };\n      this._dracoLoader = dracoLoader;\n    }\n\n    dracoLoader.manager = manager;\n    return dracoLoader;\n  }\n\n  public dispose(): void {\n    // DRACOLoader is only loader that needs to be disposed because it uses a webworker\n    this._dracoLoader?.dispose();\n    this._dracoLoader = undefined;\n  }\n}\n\nexport const EDGE_LINE_SEGMENTS_NAME = \"edges\";\nfunction addEdges(model: LoadedModel, edgeMaterial: THREE.Material): LoadedModel {\n  const edgesToAdd: [edges: THREE.LineSegments, parent: THREE.Object3D][] = [];\n\n  model.traverse((child) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    // Enable shadows for all meshes\n    child.castShadow = true;\n    child.receiveShadow = true;\n\n    // Draw edges for all meshes\n    const edgesGeometry = new THREE.EdgesGeometry(child.geometry, 40);\n    const line = new THREE.LineSegments(edgesGeometry, edgeMaterial);\n    line.name = EDGE_LINE_SEGMENTS_NAME;\n    edgesToAdd.push([line, child]);\n  });\n\n  for (const [line, parent] of edgesToAdd) {\n    parent.add(line);\n  }\n  return model;\n}\n\nfunction fixDaeMaterials(model: LoadedModel): LoadedModel {\n  model.traverse((child) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    if (child.material instanceof THREE.MeshLambertMaterial) {\n      const material = toStandard(child.material);\n      child.material.dispose();\n      child.material = material;\n    } else if (child.material instanceof THREE.MeshStandardMaterial) {\n      child.material.dithering = true;\n    }\n  });\n  return model;\n}\n\nfunction fixObjMaterials(model: LoadedModel): LoadedModel {\n  model.traverse((child) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    if (child.material instanceof THREE.MeshPhongMaterial) {\n      const material = toStandard(child.material);\n      child.material.dispose();\n      child.material = material;\n    } else if (child.material instanceof THREE.MeshStandardMaterial) {\n      child.material.metalness = 0;\n      child.material.roughness = 1;\n      child.material.dithering = true;\n    }\n  });\n  return model;\n}\n\nfunction toStandard(\n  material: THREE.MeshPhongMaterial | THREE.MeshLambertMaterial,\n): THREE.MeshStandardMaterial {\n  const standard = new THREE.MeshStandardMaterial({ name: material.name });\n  const shininess = (material as Partial<THREE.MeshPhongMaterial>).shininess ?? 0; // [0-100]\n\n  // MeshStandardMaterial.copy() assumes the normalScale property exists, which\n  // is true for other MeshStandardMaterials or MeshPhongMaterial but not\n  // MeshLambertMaterial. Default initialize this property if needed so the\n  // `standard.copy(material)` below succeeds\n  const maybePhong = material as Partial<THREE.MeshPhongMaterial>;\n  maybePhong.normalScale ??= new THREE.Vector2(1, 1);\n\n  standard.copy(material);\n  standard.metalness = 0;\n  standard.roughness = 1 - shininess / 100;\n  standard.dithering = true;\n  return standard;\n}\n\n// The THREE.TextureLoader does not support loading .tiff files into textures. To work around\n// this we rewrite any `package://` url pointing at a .tiff file into a url which returns a png.\n// The x-foxglove-converted-tiff protocol is used because the electron protocol handler for\n// package:// uses registerFileProtocol and for converted tiff we need registerBufferProtocol\nfunction rewriteUrl(url: string): string {\n  if (url.startsWith(\"package://\") && /\\.tiff?$/i.test(url)) {\n    return url.replace(\"package://\", \"x-foxglove-converted-tiff://\");\n  }\n  return url;\n}\n\nfunction unrewriteUrl(url: string): string {\n  if (url.startsWith(\"x-foxglove-converted-tiff://\")) {\n    return url.replace(\"x-foxglove-converted-tiff://\", \"package://\");\n  }\n  return url;\n}\n\nfunction baseUrl(url: string): string {\n  return url.slice(0, url.lastIndexOf(\"/\") + 1);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// Adapted from <https://github.com/bzztbomb/three_js_gpu_picking/blob/main/src/gpupicker.js>\n// released under the public domain. Original authors:\n// - bzztbomb https://github.com/bzztbomb\n// - jfaust https://github.com/jfaust\n\nimport * as THREE from \"three\";\n\nimport type { Renderable } from \"./Renderable\";\n\ntype Camera = THREE.PerspectiveCamera | THREE.OrthographicCamera;\n\n// The width and height of the output viewport. This could be 1 to sample a\n// single pixel, but GL_POINTS with a >1 point size would be clipped\nconst PIXEL_WIDTH = 31;\n\nconst WHITE_COLOR = new THREE.Color(0xffffff);\n\nconst AlwaysPickObject = (_obj: THREE.Object3D) => true;\n// This works around an incorrect method definition, where passing null is valid\nconst NullScene = ReactNull as unknown as THREE.Scene;\n\nexport type PickedRenderable = {\n  renderable: Renderable;\n  instanceIndex?: number;\n};\n\nexport type PickerOptions = {\n  debug?: boolean;\n};\n\n/**\n * Handles picking of objects in a scene (detecting 3D objects at a given screen\n * coordinate). This works by performing a second rendering pass after\n * `WebGLRenderer.renderLists` has been populated from a normal rendering pass.\n * In the second pass, objectIds are written as colors to a small offscreen\n * rendering target surrounding the sample point. The color at the sample point\n * is then read back and used to determine which object was picked.\n *\n * Objects can set their own `userData.pickingMaterial` to override the default\n * shader used for picking.\n */\nexport class Picker {\n  private gl: THREE.WebGLRenderer;\n  private scene: THREE.Scene;\n  private camera?: Camera;\n  private shouldPickObjectCB: (object: THREE.Object3D) => boolean;\n  private materialCache = new Map<number, THREE.ShaderMaterial>();\n  private emptyScene: THREE.Scene;\n  private pixelBuffer: Uint8Array;\n  private currClearColor = new THREE.Color();\n  private pickingTarget: THREE.WebGLRenderTarget;\n  private debug: boolean;\n  private isDebugPass = false;\n\n  public constructor(gl: THREE.WebGLRenderer, scene: THREE.Scene, options: PickerOptions = {}) {\n    this.gl = gl;\n    this.scene = scene;\n    this.shouldPickObjectCB = AlwaysPickObject;\n    this.debug = options.debug ?? false;\n\n    // This is the PIXEL_WIDTH x PIXEL_WIDTH render target we use to do the picking\n    this.pickingTarget = new THREE.WebGLRenderTarget(PIXEL_WIDTH, PIXEL_WIDTH, {\n      minFilter: THREE.NearestFilter,\n      magFilter: THREE.NearestFilter,\n      format: THREE.RGBAFormat, // stores objectIds as uint32\n      encoding: THREE.LinearEncoding,\n      generateMipmaps: false,\n    });\n    this.pixelBuffer = new Uint8Array(4);\n    // We need to be inside of .render in order to call renderBufferDirect in\n    // renderList() so create an empty scene\n    this.emptyScene = new THREE.Scene();\n  }\n\n  public dispose(): void {\n    for (const material of this.materialCache.values()) {\n      material.dispose();\n    }\n    this.materialCache.clear();\n    this.pickingTarget.dispose();\n  }\n\n  public pick(\n    x: number,\n    y: number,\n    camera: THREE.OrthographicCamera | THREE.PerspectiveCamera,\n    shouldPickObject = AlwaysPickObject,\n  ): number {\n    // Use the onAfterRender callback to actually render geometry for picking\n    this.emptyScene.onAfterRender = this.handleAfterRender;\n    this.camera = camera;\n    this.shouldPickObjectCB = shouldPickObject;\n    const hw = (PIXEL_WIDTH / 2) | 0;\n    const pixelRatio = this.gl.getPixelRatio();\n    const xi = Math.max(0, x * pixelRatio - hw);\n    const yi = Math.max(0, y * pixelRatio - hw);\n    const w = this.gl.domElement.width;\n    const h = this.gl.domElement.height;\n    // Set the projection matrix to only look at the pixels we are interested in\n    camera.setViewOffset(w, h, xi, yi, PIXEL_WIDTH, PIXEL_WIDTH);\n    const currRenderTarget = this.gl.getRenderTarget();\n    const currAlpha = this.gl.getClearAlpha();\n    this.gl.getClearColor(this.currClearColor);\n    this.gl.setRenderTarget(this.pickingTarget);\n    this.gl.setClearColor(WHITE_COLOR, 1);\n    this.gl.clear();\n    this.gl.render(this.emptyScene, camera);\n    this.gl.readRenderTargetPixels(this.pickingTarget, hw, hw, 1, 1, this.pixelBuffer);\n    this.gl.setRenderTarget(currRenderTarget);\n    this.gl.setClearColor(this.currClearColor, currAlpha);\n    camera.clearViewOffset();\n\n    const val =\n      (this.pixelBuffer[0]! << 24) +\n      (this.pixelBuffer[1]! << 16) +\n      (this.pixelBuffer[2]! << 8) +\n      this.pixelBuffer[3]!;\n\n    if (this.debug) {\n      this.pickDebugRender(camera);\n    }\n\n    return val;\n  }\n\n  public pickInstance(\n    x: number,\n    y: number,\n    camera: THREE.OrthographicCamera | THREE.PerspectiveCamera,\n    renderable: Renderable,\n  ): number {\n    this.emptyScene.onAfterRender = this.makeHandleInstanceAfterRender(renderable);\n    this.camera = camera;\n\n    const hw = (PIXEL_WIDTH / 2) | 0;\n    const pixelRatio = this.gl.getPixelRatio();\n    const xi = Math.max(0, x * pixelRatio - hw);\n    const yi = Math.max(0, y * pixelRatio - hw);\n    const w = this.gl.domElement.width;\n    const h = this.gl.domElement.height;\n    // Set the projection matrix to only look at the pixels we are interested in\n    camera.setViewOffset(w, h, xi, yi, PIXEL_WIDTH, PIXEL_WIDTH);\n    const currRenderTarget = this.gl.getRenderTarget();\n    const currAlpha = this.gl.getClearAlpha();\n    this.gl.getClearColor(this.currClearColor);\n    this.gl.setRenderTarget(this.pickingTarget);\n    this.gl.setClearColor(WHITE_COLOR, 1);\n    this.gl.clear();\n    this.gl.render(this.emptyScene, camera);\n    this.gl.readRenderTargetPixels(this.pickingTarget, hw, hw, 1, 1, this.pixelBuffer);\n    this.gl.setRenderTarget(currRenderTarget);\n    this.gl.setClearColor(this.currClearColor, currAlpha);\n    camera.clearViewOffset();\n\n    if (this.debug) {\n      this.pickInstanceDebugRender(camera, renderable);\n    }\n\n    return (\n      (this.pixelBuffer[0]! << 24) +\n      (this.pixelBuffer[1]! << 16) +\n      (this.pixelBuffer[2]! << 8) +\n      this.pixelBuffer[3]!\n    );\n  }\n\n  public pickDebugRender(camera: THREE.OrthographicCamera | THREE.PerspectiveCamera): void {\n    this.isDebugPass = true;\n    this.emptyScene.onAfterRender = this.handleAfterRender;\n    const currAlpha = this.gl.getClearAlpha();\n    this.gl.getClearColor(this.currClearColor);\n    this.gl.setClearColor(WHITE_COLOR, 1);\n    this.gl.clear();\n    this.gl.render(this.emptyScene, camera);\n    this.gl.setClearColor(this.currClearColor, currAlpha);\n    this.isDebugPass = false;\n  }\n\n  public pickInstanceDebugRender(\n    camera: THREE.OrthographicCamera | THREE.PerspectiveCamera,\n    renderable: Renderable,\n  ): void {\n    this.isDebugPass = true;\n    this.emptyScene.onAfterRender = this.makeHandleInstanceAfterRender(renderable);\n    const currAlpha = this.gl.getClearAlpha();\n    this.gl.getClearColor(this.currClearColor);\n    this.gl.setClearColor(WHITE_COLOR, 1);\n    this.gl.clear();\n    this.gl.render(this.emptyScene, camera);\n    this.gl.setClearColor(this.currClearColor, currAlpha);\n    this.isDebugPass = false;\n  }\n\n  private handleAfterRender = (): void => {\n    // This is the magic, these render lists are still filled with valid data.\n    // So we can submit them again for picking and save lots of work!\n    const renderList = this.gl.renderLists.get(this.scene, 0);\n    renderList.opaque.forEach(this.processItem);\n    renderList.transmissive.forEach(this.processItem);\n    renderList.transparent.forEach(this.processItem);\n  };\n\n  private makeHandleInstanceAfterRender(renderable: Renderable): () => void {\n    return (): void => {\n      // Note that no attempt is made to define a sensible sort order. Since the\n      // instanced picking pass should only be rendering opaque pixels, the\n      // worst that will happen is some overdraw\n      renderable.traverseVisible((object) => {\n        const maybeRender = object as Partial<THREE.Mesh>;\n        if (maybeRender.id != undefined && maybeRender.geometry && maybeRender.material) {\n          const renderItem: THREE.RenderItem = {\n            id: maybeRender.id,\n            object,\n            geometry: maybeRender.geometry,\n            material: maybeRender.material as THREE.Material,\n            // `program` is not used by WebGLRenderer even though it is defined in RenderItem\n            program: undefined as unknown as THREE.WebGLProgram,\n            groupOrder: 0,\n            renderOrder: 0,\n            z: 0,\n            group: ReactNull,\n          };\n          this.processInstancedItem(renderItem);\n        }\n      });\n    };\n  }\n\n  private processItem = (renderItem: THREE.RenderItem): void => {\n    if (!this.camera) {\n      return;\n    }\n    const object = renderItem.object;\n    const objId = this.isDebugPass ? hashInt(object.id) : object.id;\n    const material = renderItem.material;\n    const geometry = renderItem.geometry;\n    if (\n      !geometry || // Skip if geometry is not defined\n      renderItem.object.userData.picking === false || // Skip if object is marked no picking\n      !this.shouldPickObjectCB(object) // Skip if user callback returns false\n    ) {\n      return;\n    }\n\n    const sprite = material.type === \"SpriteMaterial\" ? 1 : 0;\n    const sizeAttenuation =\n      (material as Partial<THREE.PointsMaterial>).sizeAttenuation === true ? 1 : 0;\n    const pickingMaterial = renderItem.object.userData.pickingMaterial as\n      | THREE.ShaderMaterial\n      | undefined;\n    const renderMaterial = pickingMaterial ?? this.renderMaterial(sprite, sizeAttenuation);\n    if (sprite === 1) {\n      renderMaterial.uniforms.rotation = { value: (material as THREE.SpriteMaterial).rotation };\n      renderMaterial.uniforms.center = { value: (object as THREE.Sprite).center };\n    }\n    setObjectId(renderMaterial, objId);\n    this.gl.renderBufferDirect(this.camera, NullScene, geometry, renderMaterial, object, ReactNull);\n  };\n\n  private processInstancedItem = (renderItem: THREE.RenderItem): void => {\n    if (!this.camera) {\n      return;\n    }\n    const object = renderItem.object;\n    const geometry = renderItem.geometry;\n    if (\n      !geometry || // Skip if geometry is not defined\n      renderItem.object.userData.picking === false // Skip if object is marked no picking\n    ) {\n      return;\n    }\n\n    const instancePickingMaterial = renderItem.object.userData.instancePickingMaterial as\n      | THREE.ShaderMaterial\n      | undefined;\n    const renderMaterial = instancePickingMaterial ?? this.instanceRenderMaterial();\n    this.gl.renderBufferDirect(this.camera, NullScene, geometry, renderMaterial, object, ReactNull);\n  };\n\n  private renderMaterial(sprite: 0 | 1, sizeAttenuation: 0 | 1): THREE.ShaderMaterial {\n    const index = (sprite << 0) | (sizeAttenuation << 1);\n    let renderMaterial = this.materialCache.get(index);\n    if (renderMaterial) {\n      return renderMaterial;\n    }\n\n    let vertexShader = THREE.ShaderChunk.meshbasic_vert;\n    if (sprite === 1) {\n      vertexShader = THREE.ShaderChunk.sprite_vert!;\n    }\n    if (sizeAttenuation === 1) {\n      vertexShader = \"#define USE_SIZEATTENUATION\\n\\n\" + vertexShader;\n    }\n    renderMaterial = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader: /* glsl */ `\n          uniform vec4 objectId;\n          void main() {\n            gl_FragColor = objectId;\n          }\n        `,\n      side: THREE.DoubleSide,\n      uniforms: { objectId: { value: [NaN, NaN, NaN, NaN] } },\n    });\n    this.materialCache.set(index, renderMaterial);\n    return renderMaterial;\n  }\n\n  private instanceRenderMaterial(): THREE.ShaderMaterial {\n    const index = -1; // special materialCache index used for the instanced picking material\n    let renderMaterial = this.materialCache.get(index);\n    if (renderMaterial) {\n      return renderMaterial;\n    }\n\n    let vertexShader = THREE.ShaderChunk.meshbasic_vert;\n    vertexShader = vertexShader.replace(\n      \"void main() {\",\n      /* glsl */ `\n      varying vec4 objectId;\n\n      void main() {\n        objectId = vec4(\n          float((gl_InstanceID >> 24) & 255) / 255.0,\n          float((gl_InstanceID >> 16) & 255) / 255.0,\n          float((gl_InstanceID >> 8) & 255) / 255.0,\n          float(gl_InstanceID & 255) / 255.0);\n      `,\n    );\n    renderMaterial = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader: /* glsl */ `\n          varying vec4 objectId;\n          void main() {\n            gl_FragColor = objectId;\n          }\n        `,\n      side: THREE.DoubleSide,\n      uniforms: { objectId: { value: [NaN, NaN, NaN, NaN] } },\n    });\n    this.materialCache.set(index, renderMaterial);\n    return renderMaterial;\n  }\n}\n\nfunction setObjectId(material: THREE.ShaderMaterial, objectId: number): void {\n  const iObjectId = material.uniforms.objectId;\n  if (!iObjectId) {\n    throw new Error(`objectId uniform not found in picking material`);\n  }\n  iObjectId.value = [\n    ((objectId >> 24) & 255) / 255,\n    ((objectId >> 16) & 255) / 255,\n    ((objectId >> 8) & 255) / 255,\n    (objectId & 255) / 255,\n  ];\n  material.uniformsNeedUpdate = true;\n}\n\n// Used for debug colors, this remaps objectIds to pseudo-random 32-bit integers\nconst A = new Uint32Array(1);\nfunction hashInt(x: number): number {\n  A[0] = x | 0;\n  A[0] -= A[0] << 6;\n  A[0] ^= A[0] >>> 17;\n  A[0] -= A[0] << 9;\n  A[0] ^= A[0] << 4;\n  A[0] -= A[0] << 3;\n  A[0] ^= A[0] << 10;\n  A[0] ^= A[0] >>> 15;\n  return A[0];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { Renderer } from \"./Renderer\";\n\ntype vec4 = [number, number, number, number];\n\nexport class ScreenOverlay extends THREE.Object3D {\n  private material: THREE.ShaderMaterial;\n\n  public constructor(renderer: Renderer) {\n    super();\n\n    this.material = new THREE.ShaderMaterial({\n      transparent: true,\n      uniforms: { color: { value: [1, 0, 1, 1] } },\n      vertexShader: /* glsl */ `\n        void main() {\n          gl_Position = vec4(position.xy, 0.0, 1.0);\n        }`,\n      fragmentShader: /* glsl */ `\n        uniform vec4 color;\n        void main() {\n          gl_FragColor = color;\n        }\n      `,\n    });\n\n    const geometry = renderer.sharedGeometry.getGeometry(this.constructor.name, createGeometry);\n    const mesh = new THREE.Mesh(geometry, this.material);\n    mesh.frustumCulled = false;\n    this.add(mesh);\n  }\n\n  public setColor(color: THREE.Color, opacity: number): void {\n    const colorUniform = this.material.uniforms.color!.value as vec4;\n    colorUniform[0] = color.r;\n    colorUniform[1] = color.g;\n    colorUniform[2] = color.b;\n    colorUniform[3] = opacity;\n  }\n}\n\nfunction createGeometry(): THREE.PlaneGeometry {\n  const geometry = new THREE.PlaneGeometry(2, 2, 1, 1);\n  return geometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\n\nimport Logger from \"@foxglove/log\";\n\nexport type Path = ReadonlyArray<string>;\n\nconst TOPIC_PATH: [string, string] = [\"topics\", \"\"];\n\nexport class NodeError {\n  public path: Path;\n  public errorsById?: Map<string, string>;\n  public children?: Map<string, NodeError>;\n\n  public constructor(path: Path) {\n    this.path = path;\n  }\n\n  public errorMessage(): string | undefined {\n    if (this.errorsById && this.errorsById.size > 0) {\n      const errorMessages = Array.from(this.errorsById.values());\n      return errorMessages.join(\"\\n\");\n    } else {\n      return undefined;\n    }\n  }\n\n  public errorAtPath(path: Path): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let node: NodeError | undefined = this;\n    for (const segment of path) {\n      node = node.children?.get(segment);\n      if (!node) {\n        return undefined;\n      }\n    }\n    return node.errorMessage();\n  }\n\n  public clone(): NodeError {\n    const clone = new NodeError(this.path);\n    clone.errorsById = this.errorsById;\n    clone.children = this.children;\n    return clone;\n  }\n}\n\nexport type LayerErrorEvents = {\n  update: (path: Path, errorId: string, errorMessage: string) => void;\n  remove: (path: Path, errorId: string) => void;\n  clear: (path: Path) => void;\n};\n\nconst log = Logger.getLogger(__filename);\n\nexport class LayerErrors extends EventEmitter<LayerErrorEvents> {\n  public errors = new NodeError([]);\n\n  public add(path: Path, errorId: string, errorMessage: string): void {\n    // Get or create the node for the given path\n    let node = this.errors;\n    for (const segment of path) {\n      if (!node.children) {\n        node.children = new Map();\n      }\n      if (!node.children.has(segment)) {\n        node.children.set(segment, new NodeError([...node.path, segment]));\n      }\n      node = node.children.get(segment)!;\n    }\n\n    // Create the error map if it does not already exist\n    node.errorsById ??= new Map();\n\n    // Onlu log the first error message per path+id for performance\n    const prevErrorMessage = node.errorsById.get(errorId);\n    if (prevErrorMessage == undefined) {\n      log.warn(`[${path.join(\" > \")}] ${errorMessage}`);\n    }\n\n    // Add or update the error\n    if (errorMessage !== prevErrorMessage) {\n      node.errorsById.set(errorId, errorMessage);\n      this.emit(\"update\", path, errorId, errorMessage);\n    }\n  }\n\n  public addToTopic(topicId: string, errorId: string, errorMessage: string): void {\n    TOPIC_PATH[1] = topicId;\n    this.add(TOPIC_PATH, errorId, errorMessage);\n  }\n\n  public hasError(path: Path, errorId: string): boolean {\n    const node = this._getNode(path);\n    return node?.errorsById?.has(errorId) === true;\n  }\n\n  public remove(path: Path, errorId: string): void {\n    const node = this._getNode(path);\n    if (node?.errorsById?.has(errorId) === true) {\n      node.errorsById.delete(errorId);\n      this.emit(\"remove\", path, errorId);\n    }\n  }\n\n  public removeFromTopic(topicId: string, errorId: string): void {\n    TOPIC_PATH[1] = topicId;\n    this.remove(TOPIC_PATH, errorId);\n  }\n\n  public clearPath(path: Path): void {\n    const node = this._getNode(path);\n    if (node) {\n      node.children?.clear();\n      node.errorsById?.clear();\n      this.emit(\"clear\", path);\n    }\n  }\n\n  public clearTopic(topicId: string): void {\n    TOPIC_PATH[1] = topicId;\n    this.clearPath(TOPIC_PATH);\n  }\n\n  public clear(): void {\n    this.clearPath([]);\n  }\n\n  private _getNode(path: Path): NodeError | undefined {\n    let node: NodeError | undefined = this.errors;\n    for (const segment of path) {\n      node = node.children?.get(segment);\n      if (!node) {\n        return undefined;\n      }\n    }\n    return node;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport { produce } from \"immer\";\n\nimport { SettingsTreeAction, SettingsTreeNode, SettingsTreeNodes } from \"@foxglove/studio\";\n\nimport { LayerErrors, Path } from \"./LayerErrors\";\n\nexport type ActionHandler = (action: SettingsTreeAction) => void;\n\nexport type SettingsTreeNodeWithActionHandler = SettingsTreeNode & { handler?: ActionHandler };\n\nexport type SettingsTreeEntry = { path: Path; node: SettingsTreeNodeWithActionHandler };\n\nexport type SettingsManagerEvents = {\n  update: () => void;\n};\n\nexport class SettingsManager extends EventEmitter<SettingsManagerEvents> {\n  public errors = new LayerErrors();\n\n  private _nodesByKey = new Map<string, SettingsTreeEntry[]>();\n  private _root: SettingsTreeNodeWithActionHandler = { children: {} };\n\n  public constructor(baseTree: SettingsTreeNodes) {\n    super();\n\n    this._root = { children: baseTree };\n    this.errors.on(\"update\", this.handleErrorUpdate);\n    this.errors.on(\"remove\", this.handleErrorUpdate);\n    this.errors.on(\"clear\", this.handleErrorUpdate);\n  }\n\n  public setNodesForKey(key: string, nodes: SettingsTreeEntry[]): void {\n    this._root = produce(this._root, (draft) => {\n      // Delete all previous nodes for this key\n      const prevNodes = this._nodesByKey.get(key);\n      if (prevNodes) {\n        for (const { path } of prevNodes) {\n          removeNodeAtPath(draft, path);\n        }\n      }\n\n      // Add the new nodes\n      for (const { path, node } of nodes) {\n        node.error ??= this.errors.errors.errorAtPath(path);\n        node.label ??= path[path.length - 1];\n        node.defaultExpansionState ??= \"collapsed\";\n        addNodeAtPath(draft, path, node);\n      }\n    });\n\n    // Update the map of nodes by key\n    this._nodesByKey.set(key, nodes);\n\n    this.emit(\"update\");\n  }\n\n  public setLabel(path: Path, label: string): void {\n    this._root = produce(this._root, (draft) => {\n      setLabelAtPath(draft, path, label);\n    });\n\n    this.emit(\"update\");\n  }\n\n  public clearChildren(path: Path): void {\n    this._root = produce(this._root, (draft) => {\n      clearChildren(draft, path);\n    });\n\n    this.emit(\"update\");\n  }\n\n  public tree(): SettingsTreeNodes {\n    return this._root.children!;\n  }\n\n  public handleAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // Walk the settings tree down to the end of the path, firing any action\n    // handlers along the way\n    let curNode = this._root;\n    curNode.handler?.(action);\n    for (const segment of path) {\n      const nextNode: SettingsTreeNodeWithActionHandler | undefined = curNode.children?.[segment];\n      if (!nextNode) {\n        return;\n      }\n      nextNode.handler?.(action);\n      curNode = nextNode;\n    }\n  };\n\n  public handleErrorUpdate = (path: Path): void => {\n    this._root = produce(this._root, (draft) => {\n      if (path.length === 0) {\n        return { ...draft };\n      }\n\n      let curNode = draft;\n      for (const segment of path) {\n        const nextNode = curNode.children?.[segment];\n        if (!nextNode) {\n          curNode.children = { ...curNode.children };\n          return draft;\n        }\n        curNode = nextNode;\n      }\n\n      curNode.error = this.errors.errors.errorAtPath(path);\n      return draft;\n    });\n\n    this.emit(\"update\");\n  };\n}\n\nfunction removeNodeAtPath(root: SettingsTreeNode, path: Path): boolean {\n  if (path.length === 0) {\n    return false;\n  }\n\n  const segment = path[0]!;\n  const nextNode = root.children?.[segment];\n  if (!nextNode) {\n    return false;\n  }\n\n  if (path.length === 1) {\n    const hasEntry = root.children?.[segment] != undefined;\n    if (hasEntry) {\n      root.children![segment] = undefined;\n    }\n    return hasEntry;\n  }\n\n  return removeNodeAtPath(nextNode, path.slice(1));\n}\n\nfunction clearChildren(root: SettingsTreeNode, path: Path): void {\n  if (path.length === 0) {\n    return;\n  }\n\n  const segment = path[0]!;\n  const nextNode = root.children?.[segment];\n  if (!nextNode) {\n    return;\n  }\n\n  if (path.length === 1) {\n    nextNode.children = undefined;\n    return;\n  }\n\n  clearChildren(nextNode, path.slice(1));\n}\n\nfunction addNodeAtPath(root: SettingsTreeNode, path: Path, node: SettingsTreeNode): void {\n  if (path.length === 0) {\n    throw new Error(`Empty path for settings node \"${node.label}\"`);\n  }\n\n  // Recursively walk/build the settings tree down to the end of the path except\n  // for the last segment, which is the node to add\n  let curNode = root;\n  for (let i = 0; i < path.length - 1; i++) {\n    const segment = path[i]!;\n    if (!curNode.children) {\n      curNode.children = {};\n    }\n    if (!curNode.children[segment]) {\n      curNode.children[segment] = {};\n    }\n    curNode = curNode.children[segment]!;\n  }\n\n  // Assign the node to the last segment of the path\n  const lastSegment = path[path.length - 1]!;\n  if (!curNode.children) {\n    curNode.children = {};\n  }\n  curNode.children[lastSegment] = node;\n}\n\nfunction setLabelAtPath(root: SettingsTreeNode, path: Path, label: string): void {\n  if (path.length === 0) {\n    throw new Error(`Empty path for settings label \"${label}\"`);\n  }\n\n  // Recursively walk/build the settings tree down to the end of the path\n  let curNode = root;\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]!;\n    if (!curNode.children) {\n      curNode.children = {};\n    }\n    if (!curNode.children[segment]) {\n      curNode.children[segment] = {};\n    }\n    curNode = curNode.children[segment]!;\n  }\n\n  curNode.label = label;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\n/**\n * Class for storing a single instance of each geometry to reuse across scene extensions\n * Callers of `getGeometry` will need to specify a unique key from which to extract the\n * singleton geometry.\n */\nexport class SharedGeometry {\n  private _geometryMap = new Map<string, THREE.BufferGeometry>();\n\n  /**\n   * Get a geometry from the map, or create it if it doesn't exist.\n   * Note that this map will not allow overwriting of existing geometries.\n   * @param key unique key to identify the geometry\n   * @param createGeometry - function to create the geometry if it does not exist\n   * @returns - created geometry if it doesn't exist or the existing geometry from the map\n   */\n  public getGeometry<T extends THREE.BufferGeometry>(key: string, createGeometry: () => T): T {\n    let geometry = this._geometryMap.get(key);\n    if (!geometry) {\n      geometry = createGeometry();\n      this._geometryMap.set(key, geometry);\n    }\n    return geometry as T;\n  }\n  // disposes of all geometries and clears the map\n  public dispose(): void {\n    for (const geometry of this._geometryMap.values()) {\n      geometry.dispose();\n    }\n    this._geometryMap.clear();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { WebGLCapabilities } from \"three\";\n\nexport enum DetailLevel {\n  Low,\n  Medium,\n  High,\n}\n\n/** Returns the number of samples used for Multi-Sample Anti-Aliasing (MSAA) */\nexport function msaaSamples(capabilities: WebGLCapabilities): number {\n  // NOTE: Type definition workaround\n  return (capabilities as { maxSamples?: number }).maxSamples ?? 0;\n}\n\nexport function arrowShaftSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 12;\n    case DetailLevel.Medium:\n      return 20;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n\nexport function arrowHeadSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 12;\n    case DetailLevel.Medium:\n      return 20;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n\nexport function cylinderSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 12;\n    case DetailLevel.Medium:\n      return 20;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n\nexport function sphereSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 10;\n    case DetailLevel.Medium:\n      return 24;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { SettingsTreeField } from \"@foxglove/studio\";\n\nexport type SelectEntry = { label: string; value: string };\n\nexport type TwoColors = [string, string];\nexport type Vec3 = [number, number, number];\n\n/**\n * Common settings for all persisted SceneExtension settings.\n */\nexport type BaseSettings = {\n  /** Visibility for any associated scene renderables and settings tree nodes. */\n  visible: boolean;\n  /** If true, always use `currentTime` for pose updates. This means objects in a coordinate frame\n   * will move as the coordinate frame moves. */\n  frameLocked?: boolean;\n};\n\n/**\n * Settings for a \"Custom Layer\", a user-added collection of one or more renderables such as a Grid.\n */\nexport type CustomLayerSettings = BaseSettings & {\n  /** An identifier for a unique instance of a layer. */\n  instanceId: string;\n  /** An identifier for a type of layer, such as `\"foxglove.Grid\"`. */\n  layerId: string;\n  /** The label to use for this layer in the settings tree, under \"Custom Layers\". */\n  label: string;\n  /** Optional value specifying order in the custom layer list */\n  order?: number;\n};\n\nexport const PRECISION_DISTANCE = 3; // [1mm]\nexport const PRECISION_DEGREES = 1;\n\nexport function fieldSize(\n  label: string,\n  value: number | undefined,\n  placeholder?: string | number,\n): SettingsTreeField {\n  return {\n    label,\n    input: \"number\",\n    min: 0,\n    step: 0.5,\n    precision: PRECISION_DISTANCE,\n    value,\n    placeholder: String(placeholder),\n  };\n}\n\nexport function fieldScaleVec3(label: string, value: Vec3): SettingsTreeField {\n  return {\n    label,\n    input: \"vec3\",\n    labels: [\"X\", \"Y\", \"Z\"],\n    step: 0.5,\n    precision: PRECISION_DISTANCE,\n    value,\n  };\n}\n\nexport function fieldLineWidth(\n  label: string,\n  value: number | undefined,\n  placeholder?: string | number,\n): SettingsTreeField {\n  return {\n    label,\n    input: \"number\",\n    min: 0,\n    step: 0.005,\n    precision: 4,\n    value,\n    placeholder: String(placeholder),\n  };\n}\n\nexport function fieldGradient(label: string, value: TwoColors): SettingsTreeField {\n  return { label, input: \"gradient\", value };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport { cloneDeep, set } from \"lodash\";\n\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { DEFAULT_CAMERA_STATE } from \"../camera\";\nimport { PRECISION_DEGREES, PRECISION_DISTANCE } from \"../settings\";\n\nexport class CameraStateSettings extends SceneExtension {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.CameraStateSettings\", renderer);\n\n    renderer.on(\"cameraMove\", this.handleCameraMove);\n    renderer.settings.errors.on(\"update\", this.handleErrorChange);\n    renderer.settings.errors.on(\"clear\", this.handleErrorChange);\n    renderer.settings.errors.on(\"remove\", this.handleErrorChange);\n  }\n\n  public override dispose(): void {\n    this.renderer.off(\"cameraMove\", this.handleCameraMove);\n    this.renderer.settings.errors.off(\"update\", this.handleErrorChange);\n    this.renderer.settings.errors.off(\"clear\", this.handleErrorChange);\n    this.renderer.settings.errors.off(\"remove\", this.handleErrorChange);\n    super.dispose();\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const { cameraState: camera } = config;\n    const handler = this.handleSettingsAction;\n\n    return [\n      {\n        path: [\"cameraState\"],\n        node: {\n          label: t(\"threeDee:view\"),\n          actions: [{ type: \"action\", id: \"reset-camera\", label: t(\"threeDee:reset\") }],\n          handler,\n          fields: {\n            syncCamera: {\n              label: t(\"threeDee:syncCamera\"),\n              input: \"boolean\",\n              error: this.renderer.cameraSyncError(),\n              value: config.scene.syncCamera ?? false,\n              help: t(\"threeDee:syncCameraHelp\"),\n            },\n            distance: {\n              label: t(\"threeDee:distance\"),\n              input: \"number\",\n              step: 1,\n              precision: PRECISION_DISTANCE,\n              value: camera.distance,\n            },\n            perspective: {\n              label: t(\"threeDee:perspective\"),\n              input: \"boolean\",\n              value: camera.perspective,\n            },\n            targetOffset: {\n              label: t(\"threeDee:target\"),\n              input: \"vec3\",\n              labels: [\"X\", \"Y\", \"Z\"],\n              precision: PRECISION_DISTANCE,\n              value: [...camera.targetOffset],\n            },\n            thetaOffset: {\n              label: t(\"threeDee:theta\"),\n              input: \"number\",\n              step: 1,\n              precision: PRECISION_DEGREES,\n              value: camera.thetaOffset,\n            },\n            ...(camera.perspective && {\n              phi: {\n                label: t(\"threeDee:phi\"),\n                input: \"number\",\n                step: 1,\n                precision: PRECISION_DEGREES,\n                value: camera.phi,\n              },\n              fovy: {\n                label: t(\"threeDee:fovy\"),\n                input: \"number\",\n                step: 1,\n                precision: PRECISION_DEGREES,\n                value: camera.fovy,\n              },\n            }),\n            near: {\n              label: t(\"threeDee:near\"),\n              input: \"number\",\n              step: DEFAULT_CAMERA_STATE.near,\n              precision: PRECISION_DISTANCE,\n              value: camera.near,\n            },\n            far: {\n              label: t(\"threeDee:far\"),\n              input: \"number\",\n              step: 1,\n              precision: PRECISION_DISTANCE,\n              value: camera.far,\n            },\n          },\n        },\n      },\n    ];\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action === \"perform-node-action\" && action.payload.id === \"reset-camera\") {\n      this.renderer.updateConfig((draft) => {\n        draft.cameraState = cloneDeep(DEFAULT_CAMERA_STATE);\n      });\n      this.updateSettingsTree();\n      return;\n    }\n\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const path = action.payload.path;\n    const category = path[0]!;\n    const value = action.payload.value;\n    if (category === \"cameraState\") {\n      if (path[1] === \"syncCamera\") {\n        // Update the configuration. This is done manually since syncCamera is under `scene`, not `cameraState`\n        this.renderer.updateConfig((draft) => {\n          draft.scene.syncCamera = value as boolean;\n        });\n      } else {\n        this.renderer.updateConfig((draft) => set(draft, path, value));\n      }\n    } else {\n      return;\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  private handleCameraMove = (): void => {\n    this.updateSettingsTree();\n  };\n  private handleErrorChange = (): void => {\n    this.updateSettingsTree();\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { BaseUserData, Renderable } from \"../../Renderable\";\nimport type { Renderer } from \"../../Renderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { Marker } from \"../../ros\";\nimport { LayerSettingsMarker } from \"../Markers\";\n\nconst tempColor = new THREE.Color();\nconst tempColor2 = new THREE.Color();\nconst tempTuple4: THREE.Vector4Tuple = [0, 0, 0, 0];\n\nexport type MarkerUserData = BaseUserData & {\n  topic: string;\n  marker: Marker; // The marker used for rendering\n  originalMarker: Marker; // The original marker received from the topic, used for inspection\n  expiresIn: bigint | undefined;\n};\n\nexport function getMarkerId(topic: string, ns: string, id: number): string {\n  return `${topic}:${ns ? ns + \":\" : \"\"}${id}`.replace(/\\s/g, \"_\");\n}\n\nexport class RenderableMarker extends Renderable<MarkerUserData> {\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    const name = getMarkerId(topic, marker.ns, marker.id);\n    const hasLifetime = marker.lifetime.sec !== 0 || marker.lifetime.nsec !== 0;\n\n    super(name, renderer, {\n      receiveTime: receiveTime ?? 0n,\n      messageTime: toNanoSec(marker.header.stamp),\n      frameId: renderer.normalizeFrameId(marker.header.frame_id),\n      pose: marker.pose,\n      settingsPath: [\"topics\", topic],\n      settings: { visible: true, frameLocked: marker.frame_locked },\n      topic,\n      marker,\n      originalMarker: marker,\n      expiresIn: hasLifetime ? toNanoSec(marker.lifetime) : undefined,\n    });\n  }\n\n  public override idFromMessage(): number | string | undefined {\n    return this.userData.marker.id;\n  }\n\n  public override selectedIdVariable(): string | undefined {\n    const settings = this.getSettings();\n    return settings?.selectedIdVariable;\n  }\n\n  public getSettings(): LayerSettingsMarker | undefined {\n    return this.renderer.config.topics[this.userData.topic] as LayerSettingsMarker | undefined;\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMarker;\n  }\n\n  public update(marker: Marker, receiveTime: bigint | undefined): void {\n    const hasLifetime = marker.lifetime.sec !== 0 || marker.lifetime.nsec !== 0;\n\n    if (receiveTime != undefined) {\n      this.userData.receiveTime = receiveTime;\n    }\n    this.userData.messageTime = toNanoSec(marker.header.stamp);\n    this.userData.frameId = this.renderer.normalizeFrameId(marker.header.frame_id);\n    this.userData.pose = marker.pose;\n    this.userData.marker = this._renderMarker(marker);\n    this.userData.originalMarker = marker;\n    this.userData.expiresIn = hasLifetime ? toNanoSec(marker.lifetime) : undefined;\n  }\n\n  // Convert sRGB values to linear\n  protected _markerColorsToLinear(\n    marker: Marker,\n    pointsLength: number,\n    callback: (color: THREE.Vector4Tuple, i: number) => void,\n  ): void {\n    rgbToThreeColor(tempColor, marker.color);\n\n    for (let i = 0; i < pointsLength; i++) {\n      const srgb = marker.colors[i];\n      if (srgb) {\n        // Per-point color\n        rgbToThreeColor(tempColor2, srgb);\n        tempTuple4[0] = tempColor2.r;\n        tempTuple4[1] = tempColor2.g;\n        tempTuple4[2] = tempColor2.b;\n        tempTuple4[3] = srgb.a;\n      } else {\n        // Base marker color\n        tempTuple4[0] = tempColor.r;\n        tempTuple4[1] = tempColor.g;\n        tempTuple4[2] = tempColor.b;\n        tempTuple4[3] = marker.color.a;\n      }\n\n      callback(tempTuple4, i);\n    }\n  }\n\n  private _renderMarker(marker: Marker): Marker {\n    const topicName = this.userData.topic;\n    const settings = this.renderer.config.topics[topicName] as\n      | Partial<LayerSettingsMarker>\n      | undefined;\n    const colorStr = settings?.color;\n\n    if (colorStr == undefined) {\n      return marker;\n    }\n\n    // Create a clone of the marker with the color overridden\n    const color = stringToRgba(makeRgba(), colorStr);\n    const newMarker = { ...marker, color, colors: [] };\n    return newMarker;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Adapted from <https://github.com/mrdoob/three.js/blob/master/examples/jsm/lines/LineMaterial.js>\n// to support vertex color alpha channel\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable no-restricted-syntax */\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsLib,\n  UniformsUtils,\n  Vector2,\n  MaterialParameters,\n} from \"three\";\n\n(UniformsLib as any).line = {\n  worldUnits: { value: 1 },\n  linewidth: { value: 1 },\n  resolution: { value: new Vector2(1, 1) },\n  dashOffset: { value: 0 },\n  dashScale: { value: 1 },\n  dashSize: { value: 1 },\n  gapSize: { value: 1 },\n};\n\nShaderLib[\"foxglove.line\"] = {\n  uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.fog, (UniformsLib as any).line]),\n\n  vertexShader: /* glsl */ `\n    #include <common>\n    #include <color_pars_vertex>\n    #include <fog_pars_vertex>\n    #include <logdepthbuf_pars_vertex>\n    #include <clipping_planes_pars_vertex>\n\n    uniform float linewidth;\n    uniform vec2 resolution;\n\n    attribute vec3 instanceStart;\n    attribute vec3 instanceEnd;\n\n    attribute vec4 instanceColorStart;\n    attribute vec4 instanceColorEnd;\n\n    #ifdef WORLD_UNITS\n\n      varying vec4 worldPos;\n      varying vec3 worldStart;\n      varying vec3 worldEnd;\n\n      #ifdef USE_DASH\n\n        varying vec2 vUv;\n\n      #endif\n\n    #else\n\n      varying vec2 vUv;\n\n    #endif\n\n    #ifdef USE_DASH\n\n      uniform float dashScale;\n      attribute float instanceDistanceStart;\n      attribute float instanceDistanceEnd;\n      varying float vLineDistance;\n\n    #endif\n\n    #ifdef USE_COLOR\n\n      varying float vAlpha;\n\n    #endif\n\n    void trimSegment( const in vec4 start, inout vec4 end ) {\n\n      // trim end segment so it terminates between the camera plane and the near plane\n\n      // conservative estimate of the near plane\n      float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n      float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n      float nearEstimate = - 0.5 * b / a;\n\n      float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n      end.xyz = mix( start.xyz, end.xyz, alpha );\n\n    }\n\n    void main() {\n\n      #ifdef USE_COLOR\n\n        vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart.xyz : instanceColorEnd.xyz;\n        vAlpha = ( position.y < 0.5 ) ? instanceColorStart.w : instanceColorEnd.w;\n\n      #endif\n\n      #ifdef USE_DASH\n\n        vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n        vUv = uv;\n\n      #endif\n\n      float aspect = resolution.x / resolution.y;\n\n      // camera space\n      vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n      vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n      #ifdef WORLD_UNITS\n\n        worldStart = start.xyz;\n        worldEnd = end.xyz;\n\n      #else\n\n        vUv = uv;\n\n      #endif\n\n      // special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n      // clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n      // but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n      // perhaps there is a more elegant solution -- WestLangley\n\n      bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n      if ( perspective ) {\n\n        if ( start.z < 0.0 && end.z >= 0.0 ) {\n\n          trimSegment( start, end );\n\n        } else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n          trimSegment( end, start );\n\n        }\n\n      }\n\n      // clip space\n      vec4 clipStart = projectionMatrix * start;\n      vec4 clipEnd = projectionMatrix * end;\n\n      // ndc space\n      vec3 ndcStart = clipStart.xyz / clipStart.w;\n      vec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n      // direction\n      vec2 dir = ndcEnd.xy - ndcStart.xy;\n\n      // account for clip-space aspect ratio\n      dir.x *= aspect;\n      dir = normalize( dir );\n\n      #ifdef WORLD_UNITS\n\n        // get the offset direction as perpendicular to the view vector\n        vec3 worldDir = normalize( end.xyz - start.xyz );\n        vec3 offset;\n        if ( position.y < 0.5 ) {\n\n          offset = normalize( cross( start.xyz, worldDir ) );\n\n        } else {\n\n          offset = normalize( cross( end.xyz, worldDir ) );\n\n        }\n\n        // sign flip\n        if ( position.x < 0.0 ) offset *= - 1.0;\n\n        float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n        // don't extend the line if we're rendering dashes because we\n        // won't be rendering the endcaps\n        #ifndef USE_DASH\n\n          // extend the line bounds to encompass  endcaps\n          start.xyz += - worldDir * linewidth * 0.5;\n          end.xyz += worldDir * linewidth * 0.5;\n\n          // shift the position of the quad so it hugs the forward edge of the line\n          offset.xy -= dir * forwardOffset;\n          offset.z += 0.5;\n\n        #endif\n\n        // endcaps\n        if ( position.y > 1.0 || position.y < 0.0 ) {\n\n          offset.xy += dir * 2.0 * forwardOffset;\n\n        }\n\n        // adjust for linewidth\n        offset *= linewidth * 0.5;\n\n        // set the world position\n        worldPos = ( position.y < 0.5 ) ? start : end;\n        worldPos.xyz += offset;\n\n        // project the worldpos\n        vec4 clip = projectionMatrix * worldPos;\n\n        // shift the depth of the projected points so the line\n        // segements overlap neatly\n        vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n        clip.z = clipPose.z * clip.w;\n\n      #else\n\n        vec2 offset = vec2( dir.y, - dir.x );\n        // undo aspect ratio adjustment\n        dir.x /= aspect;\n        offset.x /= aspect;\n\n        // sign flip\n        if ( position.x < 0.0 ) offset *= - 1.0;\n\n        // endcaps\n        if ( position.y < 0.0 ) {\n\n          offset += - dir;\n\n        } else if ( position.y > 1.0 ) {\n\n          offset += dir;\n\n        }\n\n        // adjust for linewidth\n        offset *= linewidth;\n\n        // adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n        offset /= resolution.y;\n\n        // select end\n        vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n        // back to clip space\n        offset *= clip.w;\n\n        clip.xy += offset;\n\n      #endif\n\n      gl_Position = clip;\n\n      vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n      #include <logdepthbuf_vertex>\n      #include <clipping_planes_vertex>\n      #include <fog_vertex>\n\n    }\n    `,\n\n  fragmentShader: /* glsl */ `\n    uniform vec3 diffuse;\n    uniform float opacity;\n    uniform float linewidth;\n\n    #ifdef USE_DASH\n\n      uniform float dashOffset;\n      uniform float dashSize;\n      uniform float gapSize;\n\n    #endif\n\n    varying float vLineDistance;\n\n    #ifdef WORLD_UNITS\n\n      varying vec4 worldPos;\n      varying vec3 worldStart;\n      varying vec3 worldEnd;\n\n      #ifdef USE_DASH\n\n        varying vec2 vUv;\n\n      #endif\n\n    #else\n\n      varying vec2 vUv;\n\n    #endif\n\n    #ifdef USE_COLOR\n\n      varying float vAlpha;\n\n    #endif\n\n    #include <common>\n    #include <color_pars_fragment>\n    #include <fog_pars_fragment>\n    #include <logdepthbuf_pars_fragment>\n    #include <clipping_planes_pars_fragment>\n\n    vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n      float mua;\n      float mub;\n\n      vec3 p13 = p1 - p3;\n      vec3 p43 = p4 - p3;\n\n      vec3 p21 = p2 - p1;\n\n      float d1343 = dot( p13, p43 );\n      float d4321 = dot( p43, p21 );\n      float d1321 = dot( p13, p21 );\n      float d4343 = dot( p43, p43 );\n      float d2121 = dot( p21, p21 );\n\n      float denom = d2121 * d4343 - d4321 * d4321;\n\n      float numer = d1343 * d4321 - d1321 * d4343;\n\n      mua = numer / denom;\n      mua = clamp( mua, 0.0, 1.0 );\n      mub = ( d1343 + d4321 * ( mua ) ) / d4343;\n      mub = clamp( mub, 0.0, 1.0 );\n\n      return vec2( mua, mub );\n\n    }\n\n    void main() {\n\n      #include <clipping_planes_fragment>\n\n      #ifdef USE_DASH\n\n        if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n        if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n      #endif\n\n      #ifdef USE_COLOR\n\n      float alpha = vAlpha;\n\n      #else\n\n      float alpha = opacity;\n\n      #endif\n\n      #ifdef WORLD_UNITS\n\n        // Find the closest points on the view ray and the line segment\n        vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n        vec3 lineDir = worldEnd - worldStart;\n        vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n        vec3 p1 = worldStart + lineDir * params.x;\n        vec3 p2 = rayEnd * params.y;\n        vec3 delta = p1 - p2;\n        float len = length( delta );\n        float norm = len / linewidth;\n\n        #ifndef USE_DASH\n\n          #ifdef USE_ALPHA_TO_COVERAGE\n\n            float dnorm = fwidth( norm );\n            alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n          #else\n\n            if ( norm > 0.5 ) {\n\n              discard;\n\n            }\n\n          #endif\n\n        #endif\n\n      #else\n\n        #ifdef USE_ALPHA_TO_COVERAGE\n\n          // artifacts appear on some hardware if a derivative is taken within a conditional\n          float a = vUv.x;\n          float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n          float len2 = a * a + b * b;\n          float dlen = fwidth( len2 );\n\n          if ( abs( vUv.y ) > 1.0 ) {\n\n            alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n          }\n\n        #else\n\n          if ( abs( vUv.y ) > 1.0 ) {\n\n            float a = vUv.x;\n            float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n            float len2 = a * a + b * b;\n\n            if ( len2 > 1.0 ) discard;\n\n          }\n\n        #endif\n\n      #endif\n\n      vec4 diffuseColor = vec4( diffuse, alpha );\n\n      #include <logdepthbuf_fragment>\n      #include <color_fragment>\n\n      gl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n      #include <tonemapping_fragment>\n      #include <encodings_fragment>\n      #include <fog_fragment>\n      #include <premultiplied_alpha_fragment>\n\n    }\n    `,\n};\n\nexport interface LineMaterialParameters extends MaterialParameters {\n  alphaToCoverage?: boolean | undefined;\n  color?: number | undefined;\n  dashed?: boolean | undefined;\n  dashScale?: number | undefined;\n  dashSize?: number | undefined;\n  dashOffset?: number | undefined;\n  gapSize?: number | undefined;\n  linewidth?: number | undefined;\n  resolution?: Vector2 | undefined;\n  wireframe?: boolean | undefined;\n  worldUnits?: boolean | undefined;\n}\n\nexport class LineMaterial extends ShaderMaterial {\n  public readonly isLineMaterial = true;\n\n  public constructor(parameters: LineMaterialParameters) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    super({\n      type: \"LineMaterial\",\n\n      uniforms: UniformsUtils.clone((ShaderLib[\"foxglove.line\"] as any).uniforms),\n\n      vertexShader: (ShaderLib[\"foxglove.line\"] as any).vertexShader,\n      fragmentShader: (ShaderLib[\"foxglove.line\"] as any).fragmentShader,\n\n      clipping: true, // required for clipping support\n    } as any);\n\n    this.setValues(parameters);\n  }\n\n  public get color() {\n    return this.uniforms.diffuse!.value;\n  }\n\n  public set color(value) {\n    this.uniforms.diffuse!.value = value;\n  }\n\n  public get worldUnits() {\n    return \"WORLD_UNITS\" in this.defines;\n  }\n\n  public set worldUnits(value) {\n    if (value) {\n      this.defines.WORLD_UNITS = \"\";\n    } else {\n      delete this.defines.WORLD_UNITS;\n    }\n  }\n\n  public get lineWidth() {\n    return this.uniforms.linewidth!.value;\n  }\n\n  public set lineWidth(value) {\n    this.uniforms.linewidth!.value = value;\n  }\n\n  public get dashed() {\n    return Boolean(\"USE_DASH\" in this.defines);\n  }\n\n  public set dashed(value) {\n    if (Boolean(value) !== Boolean(\"USE_DASH\" in this.defines)) {\n      this.needsUpdate = true;\n    }\n\n    if (value) {\n      this.defines.USE_DASH = \"\";\n    } else {\n      delete this.defines.USE_DASH;\n    }\n  }\n\n  public get dashScale() {\n    return this.uniforms.dashScale!.value;\n  }\n\n  public set dashScale(value) {\n    this.uniforms.dashScale!.value = value;\n  }\n\n  public get dashSize() {\n    return this.uniforms.dashSize!.value;\n  }\n\n  public set dashSize(value) {\n    this.uniforms.dashSize!.value = value;\n  }\n\n  public get dashOffset() {\n    return this.uniforms.dashOffset!.value;\n  }\n\n  public set dashOffset(value) {\n    this.uniforms.dashOffset!.value = value;\n  }\n\n  public get gapSize() {\n    return this.uniforms.gapSize!.value;\n  }\n\n  public set gapSize(value) {\n    this.uniforms.gapSize!.value = value;\n  }\n\n  public get resolution(): THREE.Vector2 {\n    return this.uniforms.resolution!.value;\n  }\n\n  public set resolution(value: THREE.Vector2) {\n    this.uniforms.resolution!.value.copy(value);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { LineMaterial } from \"../../LineMaterial\";\nimport { ColorRGBA, Marker, MarkerType } from \"../../ros\";\n\nexport type LineOptions = {\n  resolution: THREE.Vector2;\n  worldUnits?: boolean;\n};\n\nexport function markerHasTransparency(marker: Marker): boolean {\n  switch (marker.type) {\n    case MarkerType.ARROW:\n    case MarkerType.CUBE:\n    case MarkerType.SPHERE:\n    case MarkerType.CYLINDER:\n    case MarkerType.TEXT_VIEW_FACING:\n    case MarkerType.MESH_RESOURCE:\n      return marker.color.a < 1.0;\n    case MarkerType.LINE_STRIP:\n    case MarkerType.LINE_LIST:\n    case MarkerType.CUBE_LIST:\n    case MarkerType.SPHERE_LIST:\n    case MarkerType.POINTS:\n    case MarkerType.TRIANGLE_LIST:\n    default:\n      for (const color of marker.colors) {\n        if (color.a < 1.0) {\n          return true;\n        }\n      }\n      return marker.colors.length >= marker.points.length ? false : marker.color.a < 1.0;\n  }\n}\n\nexport function makeStandardMaterial(color: ColorRGBA): THREE.MeshStandardMaterial {\n  return new THREE.MeshStandardMaterial({\n    color: new THREE.Color(color.r, color.g, color.b).convertSRGBToLinear(),\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    opacity: color.a,\n    transparent: color.a < 1,\n    depthWrite: color.a === 1,\n  });\n}\n\nexport function makeStandardVertexColorMaterial(marker: Marker): THREE.MeshStandardMaterial {\n  const transparent = markerHasTransparency(marker);\n  return new THREE.MeshStandardMaterial({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    vertexColors: true,\n    side: THREE.DoubleSide,\n    opacity: 1,\n    transparent,\n    depthWrite: !transparent,\n  });\n}\n\nexport function makeStandardInstancedMaterial(marker: Marker): THREE.MeshStandardMaterial {\n  const transparent = markerHasTransparency(marker);\n  return new THREE.MeshStandardMaterial({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    opacity: 1,\n    transparent,\n    depthWrite: !transparent,\n  });\n}\n\nexport function makeLinePrepassMaterial(marker: Marker, options: LineOptions): LineMaterial {\n  const lineWidth = marker.scale.x;\n  const transparent = markerHasTransparency(marker);\n  const material = new LineMaterial({\n    worldUnits: options.worldUnits ?? true,\n    colorWrite: false,\n    transparent,\n    depthWrite: !transparent,\n    linewidth: lineWidth,\n    resolution: options.resolution,\n\n    stencilWrite: true,\n    stencilRef: 1,\n    stencilZPass: THREE.ReplaceStencilOp,\n  });\n  material.lineWidth = lineWidth; // Fix for THREE.js type annotations\n  return material;\n}\n\nexport function makeLineMaterial(marker: Marker, options: LineOptions): LineMaterial {\n  const lineWidth = marker.scale.x;\n  const transparent = markerHasTransparency(marker);\n  const material = new LineMaterial({\n    worldUnits: options.worldUnits ?? true,\n    vertexColors: true,\n    linewidth: lineWidth,\n    transparent,\n    depthWrite: !transparent,\n    resolution: options.resolution,\n\n    stencilWrite: true,\n    stencilRef: 0,\n    stencilFunc: THREE.NotEqualStencilFunc,\n    stencilFail: THREE.ReplaceStencilOp,\n    stencilZPass: THREE.ReplaceStencilOp,\n  });\n  material.lineWidth = lineWidth; // Fix for THREE.js type annotations\n  return material;\n}\n\nexport function makeLinePickingMaterial(\n  lineWidth: number,\n  options: LineOptions,\n): THREE.ShaderMaterial {\n  return new THREE.ShaderMaterial({\n    vertexShader: THREE.ShaderLib[\"foxglove.line\"]!.vertexShader,\n    fragmentShader: /* glsl */ `\n      uniform vec4 objectId;\n      void main() {\n        gl_FragColor = objectId;\n      }\n    `,\n    clipping: true,\n    uniforms: {\n      objectId: { value: [NaN, NaN, NaN, NaN] },\n      linewidth: { value: lineWidth },\n      resolution: { value: options.resolution },\n      dashOffset: { value: 0 },\n      dashScale: { value: 1 },\n      dashSize: { value: 1 },\n      gapSize: { value: 1 },\n    },\n    defines: options.worldUnits ?? true ? { WORLD_UNITS: \"\" } : {},\n  });\n}\n\nexport function makePointsMaterial(marker: Marker): THREE.PointsMaterial {\n  const transparent = markerHasTransparency(marker);\n  return new THREE.PointsMaterial({\n    vertexColors: true,\n    size: marker.scale.x,\n    sizeAttenuation: true,\n    transparent,\n    depthWrite: !transparent,\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport {\n  makeLineMaterial,\n  makeLinePrepassMaterial,\n  makeLinePickingMaterial,\n  markerHasTransparency,\n} from \"./materials\";\nimport { LineMaterial } from \"../../LineMaterial\";\nimport type { Renderer } from \"../../Renderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableLineList extends RenderableMarker {\n  private geometry: LineSegmentsGeometry;\n  private linePrepass: LineSegments2;\n  private line: LineSegments2;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n    options: { worldUnits?: boolean } = {},\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.geometry = new LineSegmentsGeometry();\n\n    const { worldUnits = true } = options;\n    const lineOptions = { resolution: this.renderer.input.canvasSize, worldUnits };\n\n    // We alleviate corner artifacts using a two-pass render for lines. The\n    // first pass writes to depth only, followed by a color pass with stencil\n    // operations. The source for this technique is:\n    // <https://github.com/mrdoob/three.js/issues/23680#issuecomment-1063294691>\n    // <https://gkjohnson.github.io/threejs-sandbox/fat-line-opacity/webgl_lines_fat.html>\n\n    // Depth pass 1\n    const matLinePrepass = makeLinePrepassMaterial(marker, lineOptions);\n    this.linePrepass = new LineSegments2(this.geometry, matLinePrepass);\n    this.linePrepass.renderOrder = 1;\n    this.linePrepass.userData.picking = false;\n    this.add(this.linePrepass);\n\n    // Color pass 2\n    const matLine = makeLineMaterial(marker, lineOptions);\n    this.line = new LineSegments2(this.geometry, matLine);\n    this.line.renderOrder = 2;\n    const pickingLineWidth = marker.scale.x * 1.2;\n    this.line.userData.pickingMaterial = makeLinePickingMaterial(pickingLineWidth, lineOptions);\n    this.add(this.line);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.linePrepass.material.dispose();\n    this.line.material.dispose();\n\n    const pickingMaterial = this.line.userData.pickingMaterial as THREE.ShaderMaterial;\n    pickingMaterial.dispose();\n\n    this.geometry.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    let pointsLength = marker.points.length;\n    if (pointsLength % 2 !== 0) {\n      pointsLength--;\n    }\n\n    const lineWidth = marker.scale.x;\n    const transparent = markerHasTransparency(marker);\n\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.linePrepass.material.transparent = transparent;\n      this.linePrepass.material.depthWrite = !transparent;\n      this.linePrepass.material.needsUpdate = true;\n      this.line.material.transparent = transparent;\n      this.line.material.depthWrite = !transparent;\n      this.line.material.needsUpdate = true;\n    }\n\n    const matLinePrepass = this.linePrepass.material as LineMaterial;\n    matLinePrepass.lineWidth = lineWidth;\n    const matLine = this.line.material as LineMaterial;\n    matLine.lineWidth = lineWidth;\n\n    const prevPointsLength = (this.geometry.attributes.instanceStart?.count ?? 0) * 2;\n    if (pointsLength !== prevPointsLength) {\n      this.geometry.dispose();\n      this.geometry = new LineSegmentsGeometry();\n      this.linePrepass.geometry = this.geometry;\n      this.line.geometry = this.geometry;\n    }\n\n    this._setPositions(marker, pointsLength);\n    this._setColors(marker, pointsLength);\n\n    // These both update the same `LineSegmentsGeometry` reference, so no need to call both\n    // this.linePrepass.computeLineDistances();\n    this.line.computeLineDistances();\n  }\n\n  private _setPositions(marker: Marker, pointsLength: number): void {\n    const linePositions = new Float32Array(3 * pointsLength);\n    for (let i = 0; i < pointsLength; i++) {\n      const point = marker.points[i]!;\n      const offset = i * 3;\n      linePositions[offset + 0] = point.x;\n      linePositions[offset + 1] = point.y;\n      linePositions[offset + 2] = point.z;\n    }\n\n    this.geometry.setPositions(linePositions);\n  }\n\n  private _setColors(marker: Marker, pointsLength: number): void {\n    // Converts color-per-point to a flattened typed array\n    const rgbaData = new Float32Array(4 * pointsLength);\n    this._markerColorsToLinear(marker, pointsLength, (color, i) => {\n      const offset = i * 4;\n      rgbaData[offset + 0] = color[0];\n      rgbaData[offset + 1] = color[1];\n      rgbaData[offset + 2] = color[2];\n      rgbaData[offset + 3] = color[3];\n    });\n\n    // [rgba, rgba]\n    const instanceColorBuffer = new THREE.InstancedInterleavedBuffer(rgbaData, 8, 1);\n    this.geometry.setAttribute(\n      \"instanceColorStart\",\n      new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 0),\n    );\n    this.geometry.setAttribute(\n      \"instanceColorEnd\",\n      new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 4),\n    );\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { CameraCalibration } from \"@foxglove/schemas\";\n\nimport { PartialMessage } from \"../SceneExtension\";\nimport { normalizeHeader, normalizeTime } from \"../normalizeMessages\";\nimport {\n  CameraInfo,\n  IncomingCameraInfo,\n  Matrix3,\n  Matrix3x4,\n  RegionOfInterest,\n  Vector2,\n  Vector3,\n} from \"../ros\";\n\nconst tempVec2 = { x: 0, y: 0 };\nconst tempVec3a = { x: 0, y: 0, z: 0 };\nconst tempVec3b = { x: 0, y: 0, z: 0 };\n\nexport function projectPixel(\n  out: Vector3,\n  uv: Readonly<Vector2>,\n  cameraModel: PinholeCameraModel,\n  settings: { distance: number; planarProjectionFactor: number },\n): Vector3 {\n  cameraModel.rectifyPixel(tempVec2, uv);\n\n  if (settings.planarProjectionFactor === 0) {\n    cameraModel.projectPixelTo3dRay(out, tempVec2);\n  } else if (settings.planarProjectionFactor === 1) {\n    cameraModel.projectPixelTo3dPlane(out, tempVec2);\n  } else {\n    cameraModel.projectPixelTo3dRay(tempVec3a, tempVec2);\n    cameraModel.projectPixelTo3dPlane(tempVec3b, tempVec2);\n    lerpVec3(out, tempVec3a, tempVec3b, settings.planarProjectionFactor);\n  }\n\n  multiplyScalar(out, settings.distance);\n  return out;\n}\n\nexport function cameraInfosEqual(a: CameraInfo | undefined, b: CameraInfo | undefined): boolean {\n  if (!a || !b) {\n    return a === b;\n  } else if (a === b) {\n    return true;\n  }\n\n  if (\n    !(\n      a.header.frame_id === b.header.frame_id &&\n      a.width === b.width &&\n      a.height === b.height &&\n      a.distortion_model === b.distortion_model &&\n      a.binning_x === b.binning_x &&\n      a.binning_y === b.binning_y &&\n      a.roi.x_offset === b.roi.x_offset &&\n      a.roi.y_offset === b.roi.y_offset &&\n      a.roi.height === b.roi.height &&\n      a.roi.width === b.roi.width &&\n      a.roi.do_rectify === b.roi.do_rectify &&\n      a.D.length === b.D.length\n    )\n  ) {\n    return false;\n  }\n  for (let i = 0; i < a.D.length; i++) {\n    if (a.D[i] !== b.D[i]) {\n      return false;\n    }\n  }\n  for (let i = 0; i < 9; i++) {\n    if (a.K[i] !== b.K[i]) {\n      return false;\n    }\n  }\n  for (let i = 0; i < 9; i++) {\n    if (a.R[i] !== b.R[i]) {\n      return false;\n    }\n  }\n  for (let i = 0; i < 12; i++) {\n    if (a.P[i] !== b.P[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function normalizeCameraInfo(\n  message: PartialMessage<IncomingCameraInfo> & PartialMessage<CameraCalibration>,\n): CameraInfo {\n  // Handle lowercase field names as well (ROS2 compatibility)\n  const D = message.D ?? message.d;\n  const K = message.K ?? message.k;\n  const R = message.R ?? message.r;\n  const P = message.P ?? message.p;\n\n  const Dlen = D?.length ?? 0;\n  const Klen = K?.length ?? 0;\n  const Rlen = R?.length ?? 0;\n  const Plen = P?.length ?? 0;\n\n  return {\n    header:\n      \"timestamp\" in message\n        ? { stamp: normalizeTime(message.timestamp), frame_id: message.frame_id ?? \"\" }\n        : normalizeHeader(message.header),\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    distortion_model: message.distortion_model ?? \"\",\n    D: Dlen > 0 ? (D as number[]) : [],\n    K: Klen === 9 ? (K as Matrix3) : [],\n    R: Rlen === 9 ? (R as Matrix3) : [],\n    P: Plen === 12 ? (P as Matrix3x4) : [],\n    binning_x: message.binning_x ?? 0,\n    binning_y: message.binning_y ?? 0,\n    roi: normalizeRegionOfInterest(message.roi),\n  };\n}\n\nfunction normalizeRegionOfInterest(\n  roi: PartialMessage<RegionOfInterest> | undefined,\n): RegionOfInterest {\n  if (!roi) {\n    return { x_offset: 0, y_offset: 0, height: 0, width: 0, do_rectify: false };\n  }\n  return {\n    x_offset: roi.x_offset ?? 0,\n    y_offset: roi.y_offset ?? 0,\n    height: roi.height ?? 0,\n    width: roi.width ?? 0,\n    do_rectify: roi.do_rectify ?? false,\n  };\n}\n\nfunction lerpVec3(out: Vector3, a: Readonly<Vector3>, b: Readonly<Vector3>, t: number): void {\n  out.x = a.x + (b.x - a.x) * t;\n  out.y = a.y + (b.y - a.y) * t;\n  out.z = a.z + (b.z - a.z) * t;\n}\n\nfunction multiplyScalar(vec: Vector3, scalar: number): void {\n  vec.x *= scalar;\n  vec.y *= scalar;\n  vec.z *= scalar;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport Logger from \"@foxglove/log\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CameraCalibration } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { RenderableLineList } from \"./markers/RenderableLineList\";\nimport { cameraInfosEqual, normalizeCameraInfo, projectPixel } from \"./projections\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaToCssString, stringToRgba } from \"../color\";\nimport { CAMERA_CALIBRATION_DATATYPES } from \"../foxglove\";\nimport {\n  CameraInfo,\n  CAMERA_INFO_DATATYPES as ROS_CAMERA_INFO_DATATYPES,\n  IncomingCameraInfo,\n  Marker,\n  MarkerAction,\n  MarkerType,\n  TIME_ZERO,\n  Vector3,\n} from \"../ros\";\nimport { BaseSettings, fieldLineWidth, PRECISION_DISTANCE } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nconst log = Logger.getLogger(__filename);\nvoid log;\n\nexport type LayerSettingsCameraInfo = BaseSettings & {\n  distance: number;\n  planarProjectionFactor: number;\n  width: number;\n  color: string;\n};\n\nconst DEFAULT_DISTANCE = 1;\nconst DEFAULT_PLANAR_PROJECTION_FACTOR = 0;\nconst DEFAULT_WIDTH = 0.01;\n\nconst DEFAULT_COLOR = { r: 124 / 255, g: 107 / 255, b: 1, a: 1 };\n\nconst DEFAULT_COLOR_STR = rgbaToCssString(DEFAULT_COLOR);\n\nconst CAMERA_MODEL = \"CameraModel\";\n\nconst DEFAULT_SETTINGS: LayerSettingsCameraInfo = {\n  visible: false,\n  frameLocked: true,\n  distance: DEFAULT_DISTANCE,\n  planarProjectionFactor: DEFAULT_PLANAR_PROJECTION_FACTOR,\n  width: DEFAULT_WIDTH,\n  color: DEFAULT_COLOR_STR,\n};\n\nexport type CameraInfoUserData = BaseUserData & {\n  settings: LayerSettingsCameraInfo;\n  topic: string;\n  cameraInfo: CameraInfo | undefined;\n  originalMessage: Record<string, RosValue> | undefined;\n  cameraModel: PinholeCameraModel | undefined;\n  lines: RenderableLineList | undefined;\n};\n\nexport class CameraInfoRenderable extends Renderable<CameraInfoUserData> {\n  public override dispose(): void {\n    this.userData.lines?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage ?? {};\n  }\n}\n\nexport class Cameras extends SceneExtension<CameraInfoRenderable> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Cameras\", renderer);\n\n    renderer.addSchemaSubscriptions(ROS_CAMERA_INFO_DATATYPES, this.handleCameraInfo);\n    renderer.addSchemaSubscriptions(CAMERA_CALIBRATION_DATATYPES, this.handleCameraInfo);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, ROS_CAMERA_INFO_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, CAMERA_CALIBRATION_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsCameraInfo>;\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        distance: { label: \"Distance\", input: \"number\", placeholder: String(DEFAULT_DISTANCE), step: 0.1, precision: PRECISION_DISTANCE, value: config.distance },\n        planarProjectionFactor: { label: \"Planar Projection Factor\", input: \"number\", placeholder: String(DEFAULT_PLANAR_PROJECTION_FACTOR), min: 0, max: 1, step: 0.1, precision: 2, value: config.planarProjectionFactor },\n        width: fieldLineWidth(\"Line Width\", config.width, DEFAULT_WIDTH),\n        color: { label: \"Color\", input: \"rgba\", value: config.color ?? DEFAULT_COLOR_STR },\n      };\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          icon: \"Camera\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler,\n          order: topic.name.toLocaleLowerCase(),\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const { cameraInfo, receiveTime, originalMessage } = renderable.userData;\n      if (cameraInfo) {\n        const settings = this.renderer.config.topics[topicName] as\n          | Partial<LayerSettingsCameraInfo>\n          | undefined;\n        this._updateCameraInfoRenderable(\n          renderable,\n          cameraInfo,\n          originalMessage,\n          receiveTime,\n          settings,\n        );\n      }\n    }\n  };\n\n  private handleCameraInfo = (\n    messageEvent: PartialMessageEvent<IncomingCameraInfo | CameraCalibration>,\n  ): void => {\n    const topic = messageEvent.topic;\n    const cameraInfo = normalizeCameraInfo(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      const messageTime = toNanoSec(cameraInfo.header.stamp);\n      const frameId = this.renderer.normalizeFrameId(cameraInfo.header.frame_id);\n\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsCameraInfo>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      renderable = new CameraInfoRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId,\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        cameraInfo: undefined,\n        originalMessage: undefined,\n        cameraModel: undefined,\n        lines: undefined,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this._updateCameraInfoRenderable(\n      renderable,\n      cameraInfo,\n      messageEvent.message,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  };\n\n  private _updateCameraInfoRenderable(\n    renderable: CameraInfoRenderable,\n    cameraInfo: CameraInfo,\n    originalMessage: Record<string, RosValue> | undefined,\n    receiveTime: bigint,\n    settings: Partial<LayerSettingsCameraInfo> | undefined,\n  ): void {\n    const prevSettings = renderable.userData.settings;\n    const newSettings = { ...DEFAULT_SETTINGS, ...settings };\n    const settingsEqual =\n      newSettings.color === prevSettings.color &&\n      newSettings.distance === prevSettings.distance &&\n      newSettings.planarProjectionFactor === prevSettings.planarProjectionFactor &&\n      newSettings.width === prevSettings.width;\n    const topic = renderable.userData.topic;\n\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(cameraInfo.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(cameraInfo.header.frame_id);\n    renderable.userData.settings = newSettings;\n\n    // If the CameraInfo message contents changed, rebuild cameraModel\n    const dataEqual = cameraInfosEqual(renderable.userData.cameraInfo, cameraInfo);\n    if (!dataEqual) {\n      // log.warn(`CameraInfo changed on topic \"${topic}\", updating rectification model`);\n      renderable.userData.cameraInfo = cameraInfo;\n      renderable.userData.originalMessage = originalMessage;\n\n      if (cameraInfo.P.length === 12) {\n        try {\n          renderable.userData.cameraModel = new PinholeCameraModel(cameraInfo);\n        } catch (errUnk) {\n          const err = errUnk as Error;\n          this.renderer.settings.errors.addToTopic(topic, CAMERA_MODEL, err.message);\n          renderable.userData.cameraModel = undefined;\n          if (renderable.userData.lines) {\n            renderable.remove(renderable.userData.lines);\n            renderable.userData.lines.dispose();\n            renderable.userData.lines = undefined;\n          }\n        }\n      } else {\n        this.renderer.settings.errors.addToTopic(\n          topic,\n          CAMERA_MODEL,\n          `P has length ${cameraInfo.P.length}, not a 3x4 matrix`,\n        );\n      }\n    }\n\n    // If the CameraInfo message contents changed or the settings changed, redraw the wireframe\n    if (\n      renderable.userData.cameraModel?.P != undefined &&\n      (!dataEqual || !settingsEqual || !renderable.userData.lines)\n    ) {\n      this.renderer.settings.errors.removeFromTopic(topic, CAMERA_MODEL);\n\n      // Synthesize a LINE_LIST marker to instantiate or update a RenderableLineList\n      const marker = createLineListMarker(\n        cameraInfo,\n        renderable.userData.cameraModel,\n        renderable.userData.settings,\n      );\n      if (!renderable.userData.lines) {\n        renderable.userData.lines = new RenderableLineList(topic, marker, undefined, this.renderer);\n        renderable.add(renderable.userData.lines);\n      } else {\n        renderable.userData.lines.update(marker, undefined);\n      }\n    }\n  }\n}\n\nfunction vec3(): Vector3 {\n  return { x: 0, y: 0, z: 0 };\n}\n\nfunction createLineListMarker(\n  cameraInfo: CameraInfo,\n  cameraModel: PinholeCameraModel,\n  settings: LayerSettingsCameraInfo,\n  steps = 10,\n): Marker {\n  // Create the four lines from the camera origin to the four corners of the image\n  const uv = { x: 0, y: 0 };\n  const tl = projectPixel(vec3(), uv, cameraModel, settings);\n\n  uv.x = cameraInfo.width;\n  uv.y = 0;\n  const tr = projectPixel(vec3(), uv, cameraModel, settings);\n\n  uv.x = 0;\n  uv.y = cameraInfo.height;\n  const bl = projectPixel(vec3(), uv, cameraModel, settings);\n\n  uv.x = cameraInfo.width;\n  uv.y = cameraInfo.height;\n  const br = projectPixel(vec3(), uv, cameraModel, settings);\n\n  const origin = { x: 0, y: 0, z: 0 };\n  const points = [origin, tl, origin, tr, origin, br, origin, bl];\n\n  // Top-left -> top-right\n  points.push(tl);\n  horizontalLine(points, 0, cameraInfo, cameraModel, steps, settings);\n  points.push(tr);\n\n  // Bottom-left -> bottom-right\n  points.push(bl);\n  horizontalLine(points, cameraInfo.height, cameraInfo, cameraModel, steps, settings);\n  points.push(br);\n\n  // Top-left -> bottom-left\n  points.push(tl);\n  verticalLine(points, 0, cameraInfo, cameraModel, steps, settings);\n  points.push(bl);\n\n  // Top-right -> bottom-right\n  points.push(tr);\n  verticalLine(points, cameraInfo.width, cameraInfo, cameraModel, steps, settings);\n  points.push(br);\n\n  return {\n    header: cameraInfo.header,\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_LIST,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: settings.width, y: settings.width, z: settings.width },\n    color: stringToRgba(makeRgba(), settings.color),\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points,\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction horizontalLine(\n  output: Vector3[],\n  y: number,\n  cameraInfo: CameraInfo,\n  cameraModel: PinholeCameraModel,\n  steps: number,\n  settings: LayerSettingsCameraInfo,\n): void {\n  const uv = { x: 0, y: 0 };\n  for (let i = 1; i < steps; i++) {\n    uv.x = (i / steps) * cameraInfo.width;\n    uv.y = y;\n    const p = projectPixel(vec3(), uv, cameraModel, settings);\n    output.push(p, p);\n  }\n}\n\nfunction verticalLine(\n  output: Vector3[],\n  x: number,\n  cameraInfo: CameraInfo,\n  cameraModel: PinholeCameraModel,\n  steps: number,\n  settings: LayerSettingsCameraInfo,\n): void {\n  const uv = { x: 0, y: 0 };\n  for (let i = 1; i < steps; i++) {\n    uv.x = x;\n    uv.y = (i / steps) * cameraInfo.height;\n    const p = projectPixel(vec3(), uv, cameraModel, settings);\n    output.push(p, p);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { Renderer } from \"../Renderer\";\nimport { arrowHeadSubdivisions, arrowShaftSubdivisions, DetailLevel } from \"../lod\";\nimport { ColorRGBA } from \"../ros\";\n\nconst SHAFT_LENGTH = 0.154;\nconst SHAFT_DIAMETER = 0.02;\nconst HEAD_LENGTH = 0.046;\nconst HEAD_DIAMETER = 0.05;\n\nexport const AXIS_LENGTH = SHAFT_LENGTH + HEAD_LENGTH;\n\nconst RED_COLOR = new THREE.Color(0x9c3948).convertSRGBToLinear();\nconst GREEN_COLOR = new THREE.Color(0x88dd04).convertSRGBToLinear();\nconst BLUE_COLOR = new THREE.Color(0x2b90fb).convertSRGBToLinear();\n\nconst COLOR_WHITE = { r: 1, g: 1, b: 1, a: 1 };\n\nconst PI_2 = Math.PI / 2;\n\nconst tempMat4 = new THREE.Matrix4();\nconst tempVec = new THREE.Vector3();\n\nexport class Axis extends THREE.Object3D {\n  private readonly renderer: Renderer;\n  private shaftMesh: THREE.InstancedMesh<THREE.BufferGeometry, THREE.MeshStandardMaterial>;\n  private headMesh: THREE.InstancedMesh<THREE.BufferGeometry, THREE.MeshStandardMaterial>;\n\n  public constructor(name: string, renderer: Renderer) {\n    super();\n    this.name = name;\n    this.renderer = renderer;\n\n    // Create three arrow shafts\n    const shaftGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaft-${this.renderer.maxLod}`,\n      () => createShaftGeometry(this.renderer.maxLod),\n    );\n    this.shaftMesh = new THREE.InstancedMesh(shaftGeometry, standardMaterial(COLOR_WHITE), 3);\n    this.shaftMesh.castShadow = true;\n    this.shaftMesh.receiveShadow = true;\n\n    // Create three arrow heads\n    const headGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-head-${this.renderer.maxLod}`,\n      () => createHeadGeometry(this.renderer.maxLod),\n    );\n\n    this.headMesh = new THREE.InstancedMesh(headGeometry, standardMaterial(COLOR_WHITE), 3);\n    this.headMesh.castShadow = true;\n    this.headMesh.receiveShadow = true;\n\n    Axis.UpdateInstances(this.shaftMesh, this.headMesh, 0);\n\n    this.add(this.shaftMesh);\n    this.add(this.headMesh);\n  }\n\n  public dispose(): void {\n    this.shaftMesh.material.dispose();\n    this.shaftMesh.dispose();\n    this.headMesh.material.dispose();\n    this.headMesh.dispose();\n  }\n\n  private static UpdateInstances(\n    shaft: THREE.InstancedMesh,\n    head: THREE.InstancedMesh,\n    axisIndex: number,\n  ): void {\n    const indexX = axisIndex * 3 + 0;\n    const indexY = axisIndex * 3 + 1;\n    const indexZ = axisIndex * 3 + 2;\n\n    // Set x, y, and z axis arrow shaft directions\n    tempVec.set(SHAFT_LENGTH, SHAFT_DIAMETER, SHAFT_DIAMETER);\n    shaft.setMatrixAt(indexX, tempMat4.identity().scale(tempVec));\n    shaft.setMatrixAt(indexY, tempMat4.makeRotationZ(PI_2).scale(tempVec));\n    shaft.setMatrixAt(indexZ, tempMat4.makeRotationY(-PI_2).scale(tempVec));\n\n    // Set x, y, and z axis arrow head directions\n    tempVec.set(HEAD_LENGTH, HEAD_DIAMETER, HEAD_DIAMETER);\n    tempMat4.identity().scale(tempVec).setPosition(SHAFT_LENGTH, 0, 0);\n    head.setMatrixAt(indexX, tempMat4);\n    tempMat4.makeRotationZ(PI_2).scale(tempVec).setPosition(0, SHAFT_LENGTH, 0);\n    head.setMatrixAt(indexY, tempMat4);\n    tempMat4.makeRotationY(-PI_2).scale(tempVec).setPosition(0, 0, SHAFT_LENGTH);\n    head.setMatrixAt(indexZ, tempMat4);\n\n    // Set x, y, and z axis arrow shaft colors\n    shaft.setColorAt(indexX, RED_COLOR);\n    shaft.setColorAt(indexY, GREEN_COLOR);\n    shaft.setColorAt(indexZ, BLUE_COLOR);\n\n    // Set x, y, and z axis arrow head colors\n    head.setColorAt(indexX, RED_COLOR);\n    head.setColorAt(indexY, GREEN_COLOR);\n    head.setColorAt(indexZ, BLUE_COLOR);\n  }\n}\n\nfunction createShaftGeometry(lod: DetailLevel): THREE.CylinderGeometry {\n  const subdivs = arrowShaftSubdivisions(lod);\n  const shaftGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, subdivs, 1, false);\n  shaftGeometry.rotateZ(-PI_2);\n  shaftGeometry.translate(0.5, 0, 0);\n  shaftGeometry.computeBoundingSphere();\n  return shaftGeometry;\n}\n\nfunction createHeadGeometry(lod: DetailLevel): THREE.ConeGeometry {\n  const subdivs = arrowHeadSubdivisions(lod);\n  const headGeometry = new THREE.ConeGeometry(0.5, 1, subdivs, 1, false);\n  headGeometry.rotateZ(-PI_2);\n  headGeometry.translate(0.5, 0, 0);\n  headGeometry.computeBoundingSphere();\n  return headGeometry;\n}\nfunction standardMaterial(color: ColorRGBA): THREE.MeshStandardMaterial {\n  return new THREE.MeshStandardMaterial({\n    color: new THREE.Color(color.r, color.g, color.b).convertSRGBToLinear(),\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    opacity: color.a,\n    transparent: color.a < 1,\n    depthWrite: color.a === 1,\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport { set } from \"lodash\";\n\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { DEFAULT_MESH_UP_AXIS } from \"../ModelCache\";\nimport { Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\n\nexport const DEFAULT_LABEL_SCALE_FACTOR = 1;\n\nexport class SceneSettings extends SceneExtension {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.SceneSettings\", renderer);\n\n    renderer.labelPool.scaleFactor =\n      renderer.config.scene.labelScaleFactor ?? DEFAULT_LABEL_SCALE_FACTOR;\n  }\n\n  public override dispose(): void {\n    super.dispose();\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const handler = this.handleSettingsAction;\n\n    return [\n      {\n        path: [\"scene\"],\n        node: {\n          label: t(\"threeDee:scene\"),\n          actions: [{ type: \"action\", id: \"reset-scene\", label: t(\"threeDee:reset\") }],\n          fields: {\n            enableStats: {\n              label: t(\"threeDee:renderStats\"),\n              input: \"boolean\",\n              value: config.scene.enableStats,\n            },\n            backgroundColor: {\n              label: t(\"threeDee:background\"),\n              input: \"rgb\",\n              value: config.scene.backgroundColor,\n            },\n            labelScaleFactor: {\n              label: t(\"threeDee:labelScale\"),\n              help: t(\"threeDee:labelScaleHelp\"),\n              input: \"number\",\n              min: 0,\n              step: 0.1,\n              precision: 2,\n              value: config.scene.labelScaleFactor,\n              placeholder: String(DEFAULT_LABEL_SCALE_FACTOR),\n            },\n            ignoreColladaUpAxis: {\n              label: t(\"threeDee:ignoreColladaUpAxis\"),\n              help: t(\"threeDee:ignoreColladaUpAxisHelp\"),\n              input: \"boolean\",\n              value: config.scene.ignoreColladaUpAxis,\n              error:\n                (config.scene.ignoreColladaUpAxis ?? false) !==\n                this.renderer.modelCache.options.ignoreColladaUpAxis\n                  ? t(\"threeDee:takeEffectAfterReboot\")\n                  : undefined,\n            },\n            meshUpAxis: {\n              label: t(\"threeDee:meshUpAxis\"),\n              help: t(\"threeDee:meshUpAxisHelp\"),\n              input: \"select\",\n              value: config.scene.meshUpAxis ?? DEFAULT_MESH_UP_AXIS,\n              options: [\n                { label: t(\"threeDee:YUp\"), value: \"y_up\" },\n                { label: t(\"threeDee:ZUp\"), value: \"z_up\" },\n              ],\n              error:\n                (config.scene.meshUpAxis ?? DEFAULT_MESH_UP_AXIS) !==\n                this.renderer.modelCache.options.meshUpAxis\n                  ? t(\"threeDee:takeEffectAfterReboot\")\n                  : undefined,\n            },\n          },\n          defaultExpansionState: \"collapsed\",\n          handler,\n        },\n      },\n    ];\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action === \"perform-node-action\" && action.payload.id === \"reset-scene\") {\n      this.renderer.updateConfig((draft) => {\n        draft.scene = {};\n      });\n      this.updateSettingsTree();\n      return;\n    }\n\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const path = action.payload.path;\n    const category = path[0]!;\n    const value = action.payload.value;\n    if (category === \"scene\") {\n      // Update the configuration\n      this.renderer.updateConfig((draft) => set(draft, path, value));\n\n      if (path[1] === \"backgroundColor\") {\n        const backgroundColor = value as string | undefined;\n        this.renderer.setColorScheme(this.renderer.colorScheme, backgroundColor);\n      } else if (path[1] === \"labelScaleFactor\") {\n        const labelScaleFactor = value as number | undefined;\n        this.renderer.labelPool.setScaleFactor(labelScaleFactor ?? DEFAULT_LABEL_SCALE_FACTOR);\n      }\n    } else {\n      return;\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport { Immutable } from \"immer\";\nimport * as THREE from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\n\nimport { SettingsTreeAction, SettingsTreeChildren, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\nimport { Label } from \"@foxglove/three-text\";\n\nimport { Axis, AXIS_LENGTH } from \"./Axis\";\nimport { DEFAULT_LABEL_SCALE_FACTOR } from \"./SceneSettings\";\nimport { makeLinePickingMaterial } from \"./markers/materials\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer, RendererConfig } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { getLuminance, stringToRgb } from \"../color\";\nimport { BaseSettings, fieldSize, PRECISION_DEGREES, PRECISION_DISTANCE } from \"../settings\";\nimport { Duration, Transform, makePose, CoordinateFrame, MAX_DURATION } from \"../transforms\";\n\nexport type LayerSettingsTransform = BaseSettings & {\n  xyzOffset: Readonly<[number | undefined, number | undefined, number | undefined]>;\n  rpyOffset: Readonly<[number | undefined, number | undefined, number | undefined]>;\n};\n\nconst PICKING_LINE_SIZE = 6;\nconst PI_2 = Math.PI / 2;\n\nconst DEFAULT_EDITABLE = false;\n\nconst DEFAULT_AXIS_SCALE = 1;\nconst DEFAULT_LINE_WIDTH_PX = 2;\nconst DEFAULT_LINE_COLOR_STR = \"#ffff00\";\nconst DEFAULT_TF_LABEL_SIZE = 0.2;\n\nconst DEFAULT_SETTINGS: LayerSettingsTransform = {\n  visible: true,\n  frameLocked: true,\n  xyzOffset: [0, 0, 0],\n  rpyOffset: [0, 0, 0],\n};\n\nexport type FrameAxisUserData = BaseUserData & {\n  axis: Axis;\n  label: Label;\n  parentLine: Line2;\n};\n\nclass FrameAxisRenderable extends Renderable<FrameAxisUserData> {\n  public override dispose(): void {\n    this.renderer.labelPool.release(this.userData.label);\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    const frame = this.renderer.transformTree.frame(this.userData.frameId);\n    const parent = frame?.parent();\n    const fixed = frame?.root();\n\n    return {\n      child_frame_id: frame?.displayName() ?? \"<unknown>\",\n      parent_frame_id: parent?.displayName() ?? \"<unknown>\",\n      fixed_frame_id: fixed?.displayName() ?? \"<unknown>\",\n    };\n  }\n}\n\nconst tempVec = new THREE.Vector3();\nconst tempVecB = new THREE.Vector3();\nconst tempLower: [Duration, Transform] = [0n, Transform.Identity()];\nconst tempUpper: [Duration, Transform] = [0n, Transform.Identity()];\nconst tempQuaternion = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\nconst tempTfPath: [string, string] = [\"transforms\", \"\"];\n\nexport class FrameAxes extends SceneExtension<FrameAxisRenderable> {\n  private lineMaterial: LineMaterial;\n  private linePickingMaterial: THREE.ShaderMaterial;\n\n  private labelForegroundColor = 1;\n  private labelBackgroundColor = new THREE.Color();\n  private lineGeometry: LineGeometry;\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.FrameAxes\", renderer);\n\n    const linewidth = this.renderer.config.scene.transforms?.lineWidth ?? DEFAULT_LINE_WIDTH_PX;\n    const color = stringToRgb(\n      new THREE.Color(),\n      this.renderer.config.scene.transforms?.lineColor ?? DEFAULT_LINE_COLOR_STR,\n    );\n    this.lineMaterial = new LineMaterial({ linewidth });\n    this.lineMaterial.color = color;\n\n    const options = { resolution: renderer.input.canvasSize, worldUnits: false };\n\n    this.lineGeometry = this.renderer.sharedGeometry.getGeometry(\n      this.constructor.name,\n      createLineGeometry,\n    );\n\n    this.linePickingMaterial = makeLinePickingMaterial(PICKING_LINE_SIZE, options);\n\n    renderer.on(\"transformTreeUpdated\", this.handleTransformTreeUpdated);\n  }\n\n  public override dispose(): void {\n    this.renderer.off(\"transformTreeUpdated\", this.handleTransformTreeUpdated);\n    this.lineMaterial.dispose();\n    this.linePickingMaterial.dispose();\n    super.dispose();\n  }\n\n  public override removeAllRenderables(): void {\n    // Don't destroy frame axis renderables on clear() since `renderer.transformTree`\n    // is left untouched\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const configTransforms = config.transforms;\n    const handler = this.handleSettingsAction;\n    const frameCount = this.renderer.coordinateFrameList.length;\n    const children: SettingsTreeChildren = {\n      settings: {\n        label: t(\"threeDee:settings\"),\n        defaultExpansionState: \"collapsed\",\n        order: 0,\n        fields: {\n          editable: {\n            label: t(\"threeDee:editable\"),\n            input: \"boolean\",\n            value: config.scene.transforms?.editable ?? DEFAULT_EDITABLE,\n          },\n          showLabel: {\n            label: t(\"threeDee:labels\"),\n            input: \"boolean\",\n            value: config.scene.transforms?.showLabel ?? true,\n          },\n          ...((config.scene.transforms?.showLabel ?? true) && {\n            labelSize: {\n              label: t(\"threeDee:labelSize\"),\n              input: \"number\",\n              min: 0,\n              step: 0.01,\n              precision: 2,\n              placeholder: String(DEFAULT_TF_LABEL_SIZE),\n              value: config.scene.transforms?.labelSize,\n            },\n          }),\n          axisScale: fieldSize(\n            t(\"threeDee:axisScale\"),\n            config.scene.transforms?.axisScale,\n            DEFAULT_AXIS_SCALE,\n          ),\n          lineWidth: {\n            label: t(\"threeDee:lineWidth\"),\n            input: \"number\",\n            min: 0,\n            step: 0.5,\n            precision: 1,\n            value: config.scene.transforms?.lineWidth,\n            placeholder: String(DEFAULT_LINE_WIDTH_PX),\n          },\n          lineColor: {\n            label: t(\"threeDee:lineColor\"),\n            input: \"rgb\",\n            value: config.scene.transforms?.lineColor ?? DEFAULT_LINE_COLOR_STR,\n          },\n          enablePreloading: {\n            label: t(\"threeDee:enablePreloading\"),\n            input: \"boolean\",\n            value: config.scene.transforms?.enablePreloading ?? true,\n          },\n        },\n      },\n    };\n\n    let order = 1;\n    for (const { label, value: frameId } of this.renderer.coordinateFrameList) {\n      const frameKey = `frame:${frameId}`;\n      const tfConfig = (configTransforms[frameKey] ?? {}) as Partial<LayerSettingsTransform>;\n      const frame = this.renderer.transformTree.frame(frameId);\n      const fields = buildSettingsFields(frame, this.renderer.currentTime, config);\n      tempTfPath[1] = frameKey;\n      children[frameKey] = {\n        label,\n        fields,\n        visible: tfConfig.visible ?? true,\n        order: order++,\n        defaultExpansionState: \"collapsed\",\n        error: this.renderer.settings.errors.errors.errorAtPath(tempTfPath),\n      };\n    }\n\n    return [\n      {\n        path: [\"transforms\"],\n        node: {\n          label: `${t(\"threeDee:transforms\")}${frameCount > 0 ? ` (${frameCount})` : \"\"}`,\n          actions: [\n            { id: \"show-all\", type: \"action\", label: t(\"threeDee:showAll\") },\n            { id: \"hide-all\", type: \"action\", label: t(\"threeDee:hideAll\") },\n          ],\n          handler,\n          children,\n        },\n      },\n    ];\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Keep the material's `resolution` uniform in sync with the actual canvas size\n    this.lineMaterial.resolution = this.renderer.input.canvasSize;\n\n    // Update all the transforms settings nodes each frame since they contain\n    // fields that change when currentTime changes\n    this.updateSettingsTree();\n\n    super.startFrame(currentTime, renderFrameId, fixedFrameId);\n\n    // Compute the label offset based on the axis length and label size. We want the label\n    // to float a little above the up axis arrow, proportional to the height of the label\n    const axisScale = this.renderer.config.scene.transforms?.axisScale ?? DEFAULT_AXIS_SCALE;\n    const axisLength = AXIS_LENGTH * axisScale;\n    const labelSize = this.renderer.config.scene.transforms?.labelSize ?? DEFAULT_TF_LABEL_SIZE;\n    const labelScale = this.renderer.config.scene.labelScaleFactor ?? DEFAULT_LABEL_SCALE_FACTOR;\n    const labelOffsetZ = axisLength + labelSize * labelScale * 1.5;\n\n    // Update the lines and labels between coordinate frames\n    for (const renderable of this.renderables.values()) {\n      const label = renderable.userData.label;\n      const line = renderable.userData.parentLine;\n      const childFrame = this.renderer.transformTree.frame(renderable.userData.frameId);\n      const parentFrame = childFrame?.parent();\n      // NOTE: tempVecB should not be used until the label uses it below\n      const worldPosition = tempVecB;\n      renderable.getWorldPosition(worldPosition);\n      // Lines require a parent renderable because they draw a line from the parent\n      // frame origin to the child frame origin\n      line.visible = false;\n      if (parentFrame) {\n        const parentRenderable = this.renderables.get(parentFrame.id);\n        if (parentRenderable?.visible === true) {\n          const parentWorldPosition = tempVec;\n          parentRenderable.getWorldPosition(parentWorldPosition);\n          const dist = parentWorldPosition.distanceTo(worldPosition);\n          line.lookAt(parentWorldPosition);\n          line.rotateY(-PI_2);\n          line.scale.set(dist, 1, 1);\n          line.visible = true;\n        }\n      }\n\n      // Add the label offset in \"world\" coordinates (in the render frame)\n      worldPosition.z += labelOffsetZ;\n      // Transform worldPosition back to the local coordinate frame of the\n      // renderable, which the label is a child of\n      renderable.worldToLocal(worldPosition);\n      label.position.set(worldPosition.x, worldPosition.y, worldPosition.z);\n    }\n  }\n\n  public override setColorScheme(\n    colorScheme: \"dark\" | \"light\",\n    backgroundColor: THREE.Color | undefined,\n  ): void {\n    const foreground = colorScheme === \"dark\" ? 1 : 0;\n    this.labelForegroundColor = foreground;\n    this.labelBackgroundColor.setRGB(1 - foreground, 1 - foreground, 1 - foreground);\n    if (backgroundColor) {\n      this.labelForegroundColor =\n        getLuminance(backgroundColor.r, backgroundColor.g, backgroundColor.b) > 0.5 ? 0 : 1;\n      this.labelBackgroundColor.copy(backgroundColor);\n    }\n\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.label.setColor(\n        this.labelForegroundColor,\n        this.labelForegroundColor,\n        this.labelForegroundColor,\n      );\n      renderable.userData.label.setBackgroundColor(\n        this.labelBackgroundColor.r,\n        this.labelBackgroundColor.g,\n        this.labelBackgroundColor.b,\n      );\n    }\n  }\n\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  private setLabelVisible(visible: boolean): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.label.visible = visible;\n    }\n  }\n\n  private setLabelSize(size: number): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.label.setLineHeight(size);\n    }\n  }\n\n  private setAxisScale(scale: number): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.axis.scale.set(scale, scale, scale);\n    }\n  }\n\n  private setLineWidth(width: number): void {\n    this.lineMaterial.linewidth = width;\n  }\n\n  private setLineColor(color: string): void {\n    stringToRgb(this.lineMaterial.color, color);\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    const toggleFrameVisibility = (value: boolean) => {\n      for (const renderable of this.renderables.values()) {\n        renderable.userData.settings.visible = value;\n      }\n\n      this.renderer.updateConfig((draft) => {\n        for (const frameId of this.renderables.keys()) {\n          const frameKeySanitized = frameId === \"settings\" ? \"$settings\" : `frame:${frameId}`;\n          draft.transforms[frameKeySanitized] ??= {};\n          draft.transforms[frameKeySanitized]!.visible = value;\n        }\n      });\n\n      this.updateSettingsTree();\n    };\n\n    if (action.action === \"perform-node-action\") {\n      if (action.payload.id === \"show-all\") {\n        // Show all frames\n        toggleFrameVisibility(true);\n      } else if (action.payload.id === \"hide-all\") {\n        // Hide all frames\n        toggleFrameVisibility(false);\n      }\n      return;\n    }\n\n    if (path.length !== 3) {\n      return; // Doesn't match the pattern of [\"transforms\", \"settings\" | `frame:${frameId}`, field]\n    }\n\n    if (path[1] === \"settings\") {\n      const setting = path[2]!;\n      const value = action.payload.value;\n\n      this.saveSetting([\"scene\", \"transforms\", setting], value);\n\n      if (setting === \"editable\") {\n        this._updateFrameAxes();\n      } else if (setting === \"showLabel\") {\n        const showLabel = value as boolean | undefined;\n        this.setLabelVisible(showLabel ?? true);\n      } else if (setting === \"labelSize\") {\n        const labelSize = value as number | undefined;\n        this.setLabelSize(labelSize ?? DEFAULT_TF_LABEL_SIZE);\n      } else if (setting === \"axisScale\") {\n        const axisScale = value as number | undefined;\n        this.setAxisScale(axisScale ?? DEFAULT_AXIS_SCALE);\n      } else if (setting === \"lineWidth\") {\n        const lineWidth = value as number | undefined;\n        this.setLineWidth(lineWidth ?? DEFAULT_LINE_WIDTH_PX);\n      } else if (setting === \"lineColor\") {\n        const lineColor = value as string | undefined;\n        this.setLineColor(lineColor ?? DEFAULT_LINE_COLOR_STR);\n      }\n    } else {\n      this.saveSetting(path, action.payload.value);\n\n      // Update the renderable\n      const frameKey = path[1]!;\n      const frameId = frameKey.replace(/^frame:/, \"\");\n      const renderable = this.renderables.get(frameId);\n      if (renderable) {\n        const settings = this.renderer.config.transforms[frameKey] as\n          | Partial<LayerSettingsTransform>\n          | undefined;\n        renderable.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n\n        this._updateFrameAxis(renderable);\n      }\n    }\n  };\n\n  private handleTransformTreeUpdated = (): void => {\n    for (const frameId of this.renderer.transformTree.frames().keys()) {\n      this._addFrameAxis(frameId);\n    }\n    this.updateSettingsTree();\n  };\n\n  private _addFrameAxis(frameId: string): void {\n    if (this.renderables.has(frameId)) {\n      return;\n    }\n\n    const config = this.renderer.config;\n    const frame = this.renderer.transformTree.frame(frameId);\n    if (!frame) {\n      throw new Error(`CoordinateFrame \"${frameId}\" was not created`);\n    }\n\n    // Text label\n    const text = frame.displayName();\n    const label = this.renderer.labelPool.acquire();\n    label.setBillboard(true);\n    label.setText(text);\n    label.setLineHeight(config.scene.transforms?.labelSize ?? DEFAULT_TF_LABEL_SIZE);\n    label.visible = config.scene.transforms?.showLabel ?? true;\n    label.setColor(this.labelForegroundColor, this.labelForegroundColor, this.labelForegroundColor);\n    label.setBackgroundColor(\n      this.labelBackgroundColor.r,\n      this.labelBackgroundColor.g,\n      this.labelBackgroundColor.b,\n    );\n\n    // Set the initial settings from default values merged with any user settings\n    const frameKey = `frame:${frameId}`;\n    const userSettings = config.transforms[frameKey] as Partial<LayerSettingsTransform> | undefined;\n    const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n    // Parent line\n    const parentLine = new Line2(this.lineGeometry, this.lineMaterial);\n    parentLine.castShadow = true;\n    parentLine.receiveShadow = false;\n    parentLine.userData.pickingMaterial = this.linePickingMaterial;\n    parentLine.visible = false;\n\n    // Three arrow axis\n    const axis = new Axis(frameId, this.renderer);\n    const axisScale = config.scene.transforms?.axisScale ?? DEFAULT_AXIS_SCALE;\n    axis.scale.set(axisScale, axisScale, axisScale);\n\n    // Create a scene graph object to hold the axis, a text label, and a line to\n    // the parent frame\n    const renderable = new FrameAxisRenderable(frameId, this.renderer, {\n      receiveTime: 0n,\n      messageTime: 0n,\n      frameId,\n      pose: makePose(),\n      settingsPath: [\"transforms\", frameKey],\n      settings,\n      axis,\n      label,\n      parentLine,\n    });\n    renderable.add(axis);\n    renderable.add(label);\n    renderable.add(parentLine);\n\n    this.add(renderable);\n    this.renderables.set(frameId, renderable);\n\n    this._updateFrameAxis(renderable);\n  }\n\n  private _updateFrameAxes(): void {\n    for (const renderable of this.renderables.values()) {\n      this._updateFrameAxis(renderable);\n    }\n  }\n\n  private _updateFrameAxis(renderable: FrameAxisRenderable): void {\n    const frame = this.renderer.transformTree.getOrCreateFrame(renderable.userData.frameId);\n\n    // Check if TF editing is disabled\n    const editable = this.renderer.config.scene.transforms?.editable ?? DEFAULT_EDITABLE;\n    if (!editable) {\n      frame.offsetPosition = undefined;\n      frame.offsetEulerDegrees = undefined;\n      return;\n    }\n\n    const frameKey = `frame:${renderable.userData.frameId}`;\n    frame.offsetPosition = getOffset(this.renderer.config.transforms[frameKey]?.xyzOffset);\n    frame.offsetEulerDegrees = getOffset(this.renderer.config.transforms[frameKey]?.rpyOffset);\n  }\n}\nfunction createLineGeometry(): LineGeometry {\n  const lineGeometry = new LineGeometry();\n  lineGeometry.setPositions([0, 0, 0, 1, 0, 0]);\n  return lineGeometry;\n}\n\nfunction buildSettingsFields(\n  frame: CoordinateFrame | undefined,\n  currentTime: bigint | undefined,\n  config: Immutable<RendererConfig>,\n): SettingsTreeFields {\n  const frameKey = frame ? `frame:${frame.id}` : \"\";\n  const parentFrameId = frame?.parent()?.id;\n\n  if (parentFrameId == undefined) {\n    return { parent: { label: \"Parent\", input: \"string\", readonly: true, value: \"<root>\" } };\n  }\n\n  const historySizeValue = String(frame?.transformsSize() ?? 0);\n  let ageValue: string | undefined;\n  let xyzValue: THREE.Vector3Tuple | undefined;\n  let rpyValue: THREE.Vector3Tuple | undefined;\n\n  if (currentTime != undefined && frame) {\n    if (frame.findClosestTransforms(tempLower, tempUpper, currentTime, MAX_DURATION)) {\n      const [transformTime, transform] = tempUpper;\n      ageValue =\n        transformTime < currentTime ? formatShortDuration(currentTime - transformTime) : \"0 ns\";\n      const p = transform.position() as THREE.Vector3Tuple;\n      const q = transform.rotation() as THREE.Vector4Tuple;\n      xyzValue = [round(p[0], 3), round(p[1], 3), round(p[2], 3)];\n      tempQuaternion.set(q[0], q[1], q[2], q[3]);\n      tempEuler.setFromQuaternion(tempQuaternion, \"XYZ\");\n      rpyValue = [\n        round(THREE.MathUtils.radToDeg(tempEuler.x), 3),\n        round(THREE.MathUtils.radToDeg(tempEuler.y), 3),\n        round(THREE.MathUtils.radToDeg(tempEuler.z), 3),\n      ];\n    }\n  }\n\n  const fields: SettingsTreeFields = {\n    parent: {\n      label: \"Parent\",\n      input: \"string\",\n      readonly: true,\n      value: parentFrameId,\n    },\n    age: {\n      label: \"Age\",\n      input: \"string\",\n      readonly: true,\n      value: ageValue,\n    },\n    historySize: {\n      label: \"History Size\",\n      input: \"string\",\n      readonly: true,\n      value: historySizeValue,\n    },\n    xyz: {\n      label: \"Translation\",\n      input: \"vec3\",\n      precision: PRECISION_DISTANCE,\n      labels: [\"X\", \"Y\", \"Z\"],\n      readonly: true,\n      value: xyzValue,\n    },\n    rpy: {\n      label: \"Rotation\",\n      input: \"vec3\",\n      precision: PRECISION_DEGREES,\n      labels: [\"R\", \"P\", \"Y\"],\n      readonly: true,\n      value: rpyValue,\n    },\n  };\n\n  if (config.scene.transforms?.editable ?? DEFAULT_EDITABLE) {\n    let xyzOffsetValue = config.transforms[frameKey]?.xyzOffset as THREE.Vector3Tuple | undefined;\n    let rpyOffsetValue = config.transforms[frameKey]?.rpyOffset as THREE.Vector3Tuple | undefined;\n\n    if (xyzOffsetValue && vec3IsZero(xyzOffsetValue)) {\n      xyzOffsetValue = undefined;\n    }\n    if (rpyOffsetValue && vec3IsZero(rpyOffsetValue)) {\n      rpyOffsetValue = undefined;\n    }\n\n    fields.xyzOffset = {\n      label: \"Translation Offset\",\n      input: \"vec3\",\n      precision: PRECISION_DISTANCE,\n      step: 0.1,\n      labels: [\"X\", \"Y\", \"Z\"],\n      value: xyzOffsetValue,\n    };\n    fields.rpyOffset = {\n      label: \"Rotation Offset\",\n      input: \"vec3\",\n      precision: PRECISION_DEGREES,\n      step: 1,\n      min: -180,\n      max: 180,\n      labels: [\"R\", \"P\", \"Y\"],\n      value: rpyOffsetValue,\n    };\n  }\n\n  return fields;\n}\n\nconst MS_TENTH_NS = BigInt(1e5);\nconst MS_NS = BigInt(1e6);\nconst SEC_NS = BigInt(1e9);\nconst MIN_NS = BigInt(6e10);\nconst HOUR_NS = BigInt(3.6e12);\n\nfunction formatShortDuration(duration: Duration): string {\n  const absDuration = abs(duration);\n  if (absDuration < MS_TENTH_NS) {\n    return `${duration} ns`;\n  } else if (absDuration < SEC_NS) {\n    return `${Number(duration / MS_NS).toFixed(1)} ms`;\n  } else if (absDuration < MIN_NS) {\n    return `${Number(duration / SEC_NS).toFixed(1)} s`;\n  } else if (absDuration < HOUR_NS) {\n    return `${Number(duration / MIN_NS).toFixed(1)} min`;\n  } else {\n    return `${Number(duration / HOUR_NS).toFixed(1)} hr`;\n  }\n}\n\nfunction abs(x: bigint): bigint {\n  return x < 0n ? -x : x;\n}\n\nfunction round(x: number, precision: number): number {\n  return Number(x.toFixed(precision));\n}\n\nfunction vec3IsZero(v: THREE.Vector3Tuple, eps = 1e-6): boolean {\n  return Math.abs(v[0]) < eps && Math.abs(v[1]) < eps && Math.abs(v[2]) < eps;\n}\n\nfunction getOffset(\n  maybeOffset: Readonly<[number | undefined, number | undefined, number | undefined]> | undefined,\n): THREE.Vector3Tuple | undefined {\n  if (!maybeOffset) {\n    return undefined;\n  }\n  const [x = 0, y = 0, z = 0] = maybeOffset;\n  if (x === 0 && y === 0 && z === 0) {\n    return undefined;\n  }\n  return [x, y, z];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\n\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { FollowMode, Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { DEFAULT_CAMERA_STATE } from \"../camera\";\nimport { SelectEntry } from \"../settings\";\nimport { CoordinateFrame } from \"../transforms\";\n\nconst FOLLOW_TF_PATH = [\"general\", \"followTf\"];\n\nexport class FrameSettings extends SceneExtension {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.FrameSettings\", renderer);\n\n    renderer.on(\"transformTreeUpdated\", this.handleTransformTreeUpdated);\n    renderer.settings.errors.on(\"update\", this.handleErrorChange);\n    renderer.settings.errors.on(\"clear\", this.handleErrorChange);\n    renderer.settings.errors.on(\"remove\", this.handleErrorChange);\n  }\n\n  public override dispose(): void {\n    this.renderer.off(\"transformTreeUpdated\", this.handleTransformTreeUpdated);\n    this.renderer.settings.errors.off(\"update\", this.handleErrorChange);\n    this.renderer.settings.errors.off(\"clear\", this.handleErrorChange);\n    this.renderer.settings.errors.off(\"remove\", this.handleErrorChange);\n    super.dispose();\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const handler = this.handleSettingsAction;\n\n    // If the user-selected frame does not exist, show it in the dropdown\n    // anyways. A settings node error will be displayed\n    let followTfOptions = this.renderer.coordinateFrameList;\n    const followFrameId = this.renderer.followFrameId;\n    if (followFrameId != undefined && !this.renderer.transformTree.hasFrame(followFrameId)) {\n      followTfOptions = [\n        { label: CoordinateFrame.DisplayName(followFrameId), value: followFrameId },\n        ...followTfOptions,\n      ];\n    }\n\n    const followTfValue = selectBest(\n      [this.renderer.followFrameId, config.followTf, this.renderer.renderFrameId],\n      followTfOptions,\n    );\n    const followTfError = this.renderer.settings.errors.errors.errorAtPath(FOLLOW_TF_PATH);\n\n    const followModeOptions = [\n      { label: t(\"threeDee:pose\"), value: \"follow-pose\" },\n      { label: t(\"threeDee:position\"), value: \"follow-position\" },\n      { label: t(\"threeDee:fixed\"), value: \"follow-none\" },\n    ];\n    const followModeValue = this.renderer.followMode;\n\n    return [\n      {\n        path: [\"general\"],\n        node: {\n          label: t(\"threeDee:frame\"),\n          fields: {\n            followTf: {\n              label: t(\"threeDee:displayFrame\"),\n              help: t(\"threeDee:displayFrameHelp\"),\n              input: \"select\",\n              options: followTfOptions,\n              value: followTfValue,\n              error: followTfError,\n            },\n            followMode: {\n              label: t(\"threeDee:followMode\"),\n              help: t(\"threeDee:followModeHelp\"),\n              input: \"select\",\n              options: followModeOptions,\n              value: followModeValue,\n            },\n          },\n          defaultExpansionState: \"expanded\",\n          handler,\n        },\n      },\n    ];\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const path = action.payload.path;\n    const category = path[0]!;\n    const value = action.payload.value;\n    if (category === \"general\") {\n      if (path[1] === \"followTf\") {\n        const followTf = value as string | undefined;\n        // Update the configuration. This is done manually since followTf is at the top level of\n        // config, not under `general`\n        this.renderer.updateConfig((draft) => {\n          draft.followTf = followTf;\n        });\n\n        this.renderer.followFrameId = followTf;\n        this.renderer.settings.errors.clearPath([\"general\", \"followTf\"]);\n      } else if (path[1] === \"followMode\") {\n        const followMode = value as FollowMode;\n        // Update the configuration. This is done manually since followMode is at the top level of\n        // config, not under `general`\n        this.renderer.updateConfig((draft) => {\n          // any follow -> stationary no clear\n          // stationary -> any follow clear offset (center on frame)\n          if (draft.followMode === \"follow-none\") {\n            draft.cameraState.targetOffset = [...DEFAULT_CAMERA_STATE.targetOffset];\n            draft.cameraState.thetaOffset = DEFAULT_CAMERA_STATE.thetaOffset;\n          } else if (followMode === \"follow-pose\") {\n            draft.cameraState.thetaOffset = DEFAULT_CAMERA_STATE.thetaOffset;\n          }\n          draft.followMode = followMode;\n        });\n\n        this.renderer.updateFollowMode(followMode);\n      }\n    } else {\n      return;\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  private handleTransformTreeUpdated = (): void => {\n    this.updateSettingsTree();\n  };\n\n  private handleErrorChange = (): void => {\n    this.updateSettingsTree();\n  };\n}\n\nfunction selectBest(\n  choices: ReadonlyArray<string | undefined>,\n  validEntries: ReadonlyArray<SelectEntry>,\n): string | undefined {\n  const validChoices = choices.filter((choice) =>\n    validEntries.some((entry) => entry.value === choice),\n  );\n  return validChoices[0];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport { maxBy } from \"lodash\";\n\nimport Logger from \"@foxglove/log\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\n\nimport { RenderableLineList } from \"./markers/RenderableLineList\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { stringToRgba } from \"../color\";\nimport { vec3TupleApproxEquals } from \"../math\";\nimport { Marker, MarkerAction, MarkerType, TIME_ZERO, Vector3 } from \"../ros\";\nimport { CustomLayerSettings, PRECISION_DEGREES, PRECISION_DISTANCE } from \"../settings\";\nimport { makePose, xyzrpyToPose } from \"../transforms\";\n\nconst log = Logger.getLogger(__filename);\n\nexport type LayerSettingsGrid = CustomLayerSettings & {\n  layerId: \"foxglove.Grid\";\n  frameId: string | undefined;\n  size: number;\n  divisions: number;\n  lineWidth: number;\n  color: string;\n  position: [number, number, number];\n  rotation: [number, number, number];\n};\n\nconst LAYER_ID = \"foxglove.Grid\";\nconst DEFAULT_SIZE = 10;\nconst DEFAULT_DIVISIONS = 10;\nconst DEFAULT_LINE_WIDTH = 1;\nconst DEFAULT_COLOR = \"#248eff\";\nconst MAX_DIVISIONS = 4096; // The JS heap size is a limiting factor\nconst LINE_OPTIONS = { worldUnits: false };\n\nconst DEFAULT_SETTINGS: LayerSettingsGrid = {\n  visible: true,\n  frameLocked: true,\n  label: \"Grid\",\n  instanceId: \"invalid\",\n  layerId: LAYER_ID,\n  frameId: undefined,\n  size: DEFAULT_SIZE,\n  divisions: DEFAULT_DIVISIONS,\n  lineWidth: DEFAULT_LINE_WIDTH,\n  color: DEFAULT_COLOR,\n  position: [0, 0, 0],\n  rotation: [0, 0, 0],\n};\n\nexport type GridUserData = BaseUserData & {\n  settings: LayerSettingsGrid;\n  lineList: RenderableLineList;\n};\n\nexport class GridRenderable extends Renderable<GridUserData> {\n  public override dispose(): void {\n    this.userData.lineList.dispose();\n    super.dispose();\n  }\n}\n\nexport class Grids extends SceneExtension<GridRenderable> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Grids\", renderer);\n\n    renderer.addCustomLayerAction({\n      layerId: LAYER_ID,\n      label: t(\"threeDee:addGrid\"),\n      icon: \"Grid\",\n      handler: this.handleAddGrid,\n    });\n\n    renderer.on(\"transformTreeUpdated\", this.handleTransformTreeUpdated);\n\n    // Load existing grid layers from the config\n    for (const [instanceId, entry] of Object.entries(renderer.config.layers)) {\n      if (entry?.layerId === LAYER_ID) {\n        this._updateGrid(instanceId, entry as Partial<LayerSettingsGrid>);\n      }\n    }\n  }\n\n  public override dispose(): void {\n    this.renderer.off(\"transformTreeUpdated\", this.handleTransformTreeUpdated);\n    super.dispose();\n  }\n\n  public override removeAllRenderables(): void {\n    // no-op\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const [instanceId, layerConfig] of Object.entries(this.renderer.config.layers)) {\n      if (layerConfig?.layerId !== LAYER_ID) {\n        continue;\n      }\n\n      const config = layerConfig as Partial<LayerSettingsGrid>;\n      const frameIdOptions = [\n        { label: \"<Display frame>\", value: undefined },\n        ...this.renderer.coordinateFrameList,\n      ];\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        frameId: { label: t(\"threeDee:frame\"), input: \"select\", options: frameIdOptions, value: config.frameId }, // options is extended in `settings.ts:buildTopicNode()`\n        size: { label: t(\"threeDee:size\"), input: \"number\", min: 0, step: 0.5, precision: PRECISION_DISTANCE, value: config.size, placeholder: String(DEFAULT_SIZE) },\n        divisions: { label: t(\"threeDee:divisions\"), input: \"number\", min: 1, max: MAX_DIVISIONS, step: 1, precision: 0, value: config.divisions, placeholder: String(DEFAULT_DIVISIONS) },\n        lineWidth: { label: t(\"threeDee:lineWidth\"), input: \"number\", min: 0, step: 0.5, precision: 1, value: config.lineWidth, placeholder: String(DEFAULT_LINE_WIDTH) },\n        color: { label: t(\"threeDee:color\"), input: \"rgba\", value: config.color ?? DEFAULT_COLOR },\n        position: { label: t(\"threeDee:position\"), input: \"vec3\", labels: [\"X\", \"Y\", \"Z\"], precision: PRECISION_DISTANCE, value: config.position ?? [0, 0, 0] },\n        rotation: { label: t(\"threeDee:rotation\"), input: \"vec3\", labels: [\"R\", \"P\", \"Y\"], precision: PRECISION_DEGREES, value: config.rotation ?? [0, 0, 0] },\n      };\n\n      entries.push({\n        path: [\"layers\", instanceId],\n        node: {\n          label: config.label ?? t(\"threeDee:grid\"),\n          icon: \"Grid\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          actions: [{ type: \"action\", id: \"delete\", label: t(\"threeDee:delete\") }],\n          order: layerConfig.order,\n          handler,\n        },\n      });\n\n      // Create renderables for new grid layers\n      if (!this.renderables.has(instanceId)) {\n        this._updateGrid(instanceId, config);\n      }\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Set the `frameId` to use for `updatePose()`\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.frameId = renderable.userData.settings.frameId ?? renderFrameId;\n    }\n    super.startFrame(currentTime, renderFrameId, fixedFrameId);\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // Handle menu actions (delete)\n    if (action.action === \"perform-node-action\") {\n      if (path.length === 2 && action.payload.id === \"delete\") {\n        const instanceId = path[1]!;\n\n        // Remove this instance from the config\n        this.renderer.updateConfig((draft) => {\n          delete draft.layers[instanceId];\n        });\n\n        // Remove the renderable\n        this._updateGrid(instanceId, undefined);\n\n        // Update the settings tree\n        this.updateSettingsTree();\n        this.renderer.updateCustomLayersCount();\n      }\n      return;\n    }\n\n    if (path.length !== 3) {\n      return; // Doesn't match the pattern of [\"layers\", instanceId, field]\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    const instanceId = path[1]!;\n    const settings = this.renderer.config.layers[instanceId] as\n      | Partial<LayerSettingsGrid>\n      | undefined;\n    this._updateGrid(instanceId, settings);\n  };\n\n  private handleAddGrid = (instanceId: string): void => {\n    log.info(`Creating ${LAYER_ID} layer ${instanceId}`);\n\n    const config: LayerSettingsGrid = { ...DEFAULT_SETTINGS, instanceId };\n\n    // Add this instance to the config\n    this.renderer.updateConfig((draft) => {\n      const maxOrderLayer = maxBy(Object.values(draft.layers), (layer) => layer?.order);\n      const order = 1 + (maxOrderLayer?.order ?? 0);\n      draft.layers[instanceId] = { ...config, order };\n    });\n\n    // Add a renderable\n    this._updateGrid(instanceId, config);\n\n    // Update the settings tree\n    this.updateSettingsTree();\n  };\n\n  private handleTransformTreeUpdated = (): void => {\n    this.updateSettingsTree();\n  };\n\n  private _updateGrid(instanceId: string, settings: Partial<LayerSettingsGrid> | undefined): void {\n    let renderable = this.renderables.get(instanceId);\n\n    // Handle deletes\n    if (settings == undefined) {\n      if (renderable != undefined) {\n        renderable.userData.lineList.dispose();\n        this.remove(renderable);\n        this.renderables.delete(instanceId);\n      }\n      return;\n    }\n\n    const newSettings = { ...DEFAULT_SETTINGS, ...settings };\n    if (!renderable) {\n      renderable = this._createRenderable(instanceId, newSettings);\n      renderable.userData.pose = xyzrpyToPose(newSettings.position, newSettings.rotation);\n    }\n\n    const prevSettings = renderable.userData.settings;\n    const markersEqual =\n      newSettings.size === prevSettings.size &&\n      newSettings.divisions === prevSettings.divisions &&\n      newSettings.frameId === prevSettings.frameId &&\n      newSettings.lineWidth === prevSettings.lineWidth &&\n      newSettings.color === prevSettings.color;\n\n    renderable.userData.settings = newSettings;\n\n    // If the marker settings changed, generate a new marker and update the renderable\n    if (!markersEqual) {\n      const marker = createMarker(newSettings);\n      renderable.userData.lineList.update(marker, undefined);\n    }\n\n    // Update the pose if it changed\n    if (\n      !vec3TupleApproxEquals(newSettings.position, prevSettings.position) ||\n      !vec3TupleApproxEquals(newSettings.rotation, prevSettings.rotation)\n    ) {\n      renderable.userData.pose = xyzrpyToPose(newSettings.position, newSettings.rotation);\n    }\n  }\n\n  private _createRenderable(instanceId: string, settings: LayerSettingsGrid): GridRenderable {\n    const marker = createMarker(settings);\n    const lineListId = `${instanceId}:LINE_LIST`;\n    const lineList = new RenderableLineList(\n      lineListId,\n      marker,\n      undefined,\n      this.renderer,\n      LINE_OPTIONS,\n    );\n    const renderable = new GridRenderable(instanceId, this.renderer, {\n      receiveTime: 0n,\n      messageTime: 0n,\n      frameId: \"\", // This will be updated in `startFrame()`\n      pose: makePose(),\n      settingsPath: [\"layers\", instanceId],\n      settings,\n      lineList,\n    });\n    renderable.add(lineList);\n\n    this.add(renderable);\n    this.renderables.set(instanceId, renderable);\n    return renderable;\n  }\n}\n\nfunction createMarker(settings: LayerSettingsGrid): Marker {\n  const { size, divisions, color: colorStr } = settings;\n  const step = size / divisions;\n  const halfSize = size / 2;\n  const points: Vector3[] = [];\n  // Create a grid of line segments centered around <0, 0>\n  for (let i = 0; i <= divisions; i++) {\n    const x = -halfSize + i * step;\n    points.push({ x, y: -halfSize, z: 0 });\n    points.push({ x, y: halfSize, z: 0 });\n    points.push({ x: -halfSize, y: x, z: 0 });\n    points.push({ x: halfSize, y: x, z: 0 });\n  }\n\n  const color = { r: 1, g: 1, b: 1, a: 1 };\n  stringToRgba(color, colorStr);\n\n  return {\n    header: {\n      frame_id: \"\", // unused, settings.frameId is used instead\n      stamp: TIME_ZERO,\n    },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_LIST,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: settings.lineWidth, y: 1, z: 1 },\n    color,\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points,\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { set } from \"lodash\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport {\n  CAMERA_CALIBRATION_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES,\n  RAW_IMAGE_DATATYPES,\n} from \"../foxglove\";\nimport {\n  IMAGE_DATATYPES as ROS_IMAGE_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES as ROS_COMPRESSED_IMAGE_DATATYPES,\n  CAMERA_INFO_DATATYPES,\n} from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\n\nconst IMAGE_TOPIC_PATH = [\"imageMode\", \"imageTopic\"];\nconst CALIBRATION_TOPIC_PATH = [\"imageMode\", \"calibrationTopic\"];\n\nconst IMAGE_TOPIC_UNAVAILABLE = \"IMAGE_TOPIC_UNAVAILABLE\";\nconst CALIBRATION_TOPIC_UNAVAILABLE = \"CALIBRATION_TOPIC_UNAVAILABLE\";\n\nexport class ImageMode extends SceneExtension {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.ImageMode\", renderer);\n\n    renderer.settings.errors.on(\"update\", this.handleErrorChange);\n    renderer.settings.errors.on(\"clear\", this.handleErrorChange);\n    renderer.settings.errors.on(\"remove\", this.handleErrorChange);\n  }\n\n  public override dispose(): void {\n    this.renderer.settings.errors.off(\"update\", this.handleErrorChange);\n    this.renderer.settings.errors.off(\"clear\", this.handleErrorChange);\n    this.renderer.settings.errors.off(\"remove\", this.handleErrorChange);\n    super.dispose();\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const handler = this.handleSettingsAction;\n\n    const { imageTopic, calibrationTopic } = config.imageMode;\n\n    const imageTopics = filterMap(this.renderer.topics ?? [], (topic) => {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, ROS_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, ROS_COMPRESSED_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, RAW_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, COMPRESSED_IMAGE_DATATYPES)\n        )\n      ) {\n        return;\n      }\n      return { label: topic.name, value: topic.name };\n    });\n\n    const calibrationTopics = filterMap(this.renderer.topics ?? [], (topic) => {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, CAMERA_INFO_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, CAMERA_CALIBRATION_DATATYPES)\n        )\n      ) {\n        return;\n      }\n      return { label: topic.name, value: topic.name };\n    });\n\n    if (imageTopic && !imageTopics.some((topic) => topic.value === imageTopic)) {\n      this.renderer.settings.errors.add(\n        IMAGE_TOPIC_PATH,\n        IMAGE_TOPIC_UNAVAILABLE,\n        `${imageTopic} is not available`,\n      );\n    } else {\n      this.renderer.settings.errors.remove(IMAGE_TOPIC_PATH, IMAGE_TOPIC_UNAVAILABLE);\n    }\n\n    if (calibrationTopic && !calibrationTopics.some((topic) => topic.value === calibrationTopic)) {\n      this.renderer.settings.errors.add(\n        CALIBRATION_TOPIC_PATH,\n        CALIBRATION_TOPIC_UNAVAILABLE,\n        `${calibrationTopic} is not available`,\n      );\n    } else {\n      this.renderer.settings.errors.remove(CALIBRATION_TOPIC_PATH, CALIBRATION_TOPIC_UNAVAILABLE);\n    }\n\n    const imageTopicError = this.renderer.settings.errors.errors.errorAtPath(IMAGE_TOPIC_PATH);\n    const calibrationTopicError =\n      this.renderer.settings.errors.errors.errorAtPath(CALIBRATION_TOPIC_PATH);\n\n    // Not yet implemented\n    const transformMarkers: boolean = false;\n    const synchronize: boolean = false;\n    const smooth: boolean = false;\n    const flipHorizontal: boolean = false;\n    const flipVertical: boolean = false;\n    const rotation = 0;\n    const minValue: number | undefined = undefined;\n    const maxValue: number | undefined = undefined;\n\n    return [\n      {\n        path: [\"imageMode\"],\n        node: {\n          label: \"General\",\n          defaultExpansionState: \"expanded\",\n          handler,\n          fields: {\n            imageTopic: {\n              label: \"Topic\",\n              input: \"select\",\n              value: imageTopic,\n              options: imageTopics,\n              error: imageTopicError,\n            },\n            calibrationTopic: {\n              label: \"Calibration\",\n              input: \"select\",\n              value: config.imageMode.calibrationTopic,\n              options: calibrationTopics,\n              error: calibrationTopicError,\n            },\n            TODO_transformMarkers: {\n              readonly: true, // not yet implemented\n              input: \"boolean\",\n              label: \"🚧 Transform markers\",\n              value: transformMarkers,\n              help: (transformMarkers as boolean)\n                ? \"Markers are being transformed by Foxglove Studio based on the camera model. Click to turn it off.\"\n                : `Markers can be transformed by Foxglove Studio based on the camera model. Click to turn it on.`,\n            },\n            TODO_synchronize: {\n              readonly: true, // not yet implemented\n              input: \"boolean\",\n              label: \"🚧 Synchronize timestamps\",\n              value: synchronize,\n            },\n            TODO_smooth: {\n              readonly: true, // not yet implemented\n              input: \"boolean\",\n              label: \"🚧 Bilinear smoothing\",\n              value: smooth,\n            },\n            TODO_flipHorizontal: {\n              readonly: true, // not yet implemented\n              input: \"boolean\",\n              label: \"🚧 Flip horizontal\",\n              value: flipHorizontal,\n            },\n            TODO_flipVertical: {\n              readonly: true, // not yet implemented\n              input: \"boolean\",\n              label: \"🚧 Flip vertical\",\n              value: flipVertical,\n            },\n            TODO_rotation: {\n              readonly: true, // not yet implemented\n              input: \"select\",\n              label: \"🚧 Rotation\",\n              value: rotation,\n              options: [\n                { label: \"0°\", value: 0 },\n                { label: \"90°\", value: 90 },\n                { label: \"180°\", value: 180 },\n                { label: \"270°\", value: 270 },\n              ],\n            },\n            TODO_minValue: {\n              readonly: true, // not yet implemented\n              input: \"number\",\n              label: \"🚧 Min (depth images)\",\n              placeholder: \"0\",\n              value: minValue,\n            },\n            TODO_maxValue: {\n              readonly: true, // not yet implemented\n              input: \"number\",\n              label: \"🚧 Max (depth images)\",\n              placeholder: \"10000\",\n              value: maxValue,\n            },\n          },\n        },\n      },\n    ];\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const path = action.payload.path;\n    const category = path[0]!;\n    const value = action.payload.value;\n    if (category === \"imageMode\") {\n      this.renderer.updateConfig((draft) => set(draft, path, value));\n    } else {\n      return;\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  private handleErrorChange = (): void => {\n    this.updateSettingsTree();\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { MultiMap } from \"@foxglove/den/collection\";\nimport {\n  PinholeCameraModel,\n  decodeYUV,\n  decodeRGB8,\n  decodeRGBA8,\n  decodeBGRA8,\n  decodeBGR8,\n  decodeFloat1c,\n  decodeBayerRGGB8,\n  decodeBayerBGGR8,\n  decodeBayerGBRG8,\n  decodeBayerGRBG8,\n  decodeMono8,\n  decodeMono16,\n  decodeYUYV,\n} from \"@foxglove/den/image\";\nimport Logger from \"@foxglove/log\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CameraCalibration, CompressedImage, RawImage } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields, Topic } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { cameraInfosEqual, normalizeCameraInfo, projectPixel } from \"./projections\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport type { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { stringToRgba } from \"../color\";\nimport {\n  CAMERA_CALIBRATION_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES,\n  RAW_IMAGE_DATATYPES,\n} from \"../foxglove\";\nimport { normalizeByteArray, normalizeHeader, normalizeTime } from \"../normalizeMessages\";\nimport {\n  CameraInfo,\n  Image as RosImage,\n  CompressedImage as RosCompressedImage,\n  IMAGE_DATATYPES as ROS_IMAGE_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES as ROS_COMPRESSED_IMAGE_DATATYPES,\n  CAMERA_INFO_DATATYPES,\n} from \"../ros\";\nimport { BaseSettings, PRECISION_DISTANCE, SelectEntry } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nconst log = Logger.getLogger(__filename);\nvoid log;\n\ntype AnyImage = RosImage | RosCompressedImage | RawImage | CompressedImage;\n\nexport type LayerSettingsImage = BaseSettings & {\n  cameraInfoTopic: string | undefined;\n  distance: number;\n  planarProjectionFactor: number;\n  color: string;\n};\n\nconst NO_CAMERA_INFO_ERR = \"NoCameraInfo\";\nconst CREATE_BITMAP_ERR = \"CreateBitmap\";\nconst CAMERA_MODEL = \"CameraModel\";\n\nconst DEFAULT_IMAGE_WIDTH = 512;\nconst DEFAULT_DISTANCE = 1;\nconst DEFAULT_PLANAR_PROJECTION_FACTOR = 0;\n\nconst DEFAULT_SETTINGS: LayerSettingsImage = {\n  visible: false,\n  frameLocked: true,\n  cameraInfoTopic: undefined,\n  distance: DEFAULT_DISTANCE,\n  planarProjectionFactor: DEFAULT_PLANAR_PROJECTION_FACTOR,\n  color: \"#ffffff\",\n};\n\nexport type ImageUserData = BaseUserData & {\n  topic: string;\n  settings: LayerSettingsImage;\n  cameraInfo: CameraInfo | undefined;\n  cameraModel: PinholeCameraModel | undefined;\n  image: AnyImage | undefined;\n  texture: THREE.Texture | undefined;\n  material: THREE.MeshBasicMaterial | undefined;\n  geometry: THREE.PlaneGeometry | undefined;\n  mesh: THREE.Mesh | undefined;\n};\n\nexport class ImageRenderable extends Renderable<ImageUserData> {\n  public override dispose(): void {\n    this.userData.texture?.dispose();\n    this.userData.material?.dispose();\n    this.userData.geometry?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return { image: this.userData.image, camera_info: this.userData.cameraInfo };\n  }\n}\n\nexport class Images extends SceneExtension<ImageRenderable> {\n  /* All known camera info topics */\n  private cameraInfoTopics = new Set<string>();\n\n  /**\n   * A bi-directional mapping between cameraInfo topics and image topics. This\n   * is used for retrieving an image renderable, which is indexed by image\n   * topic, when receiving a camera info message.\n   */\n  private cameraInfoToImageTopics = new MultiMap<string, string>();\n\n  /**\n   * Map of camera info topic name -> normalized CameraInfo message\n   *\n   * This stores the last camera info message on each topic so it can be applied when rendering the image\n   */\n  private cameraInfoByTopic = new Map<string, CameraInfo>();\n\n  private lastTopics: readonly Topic[] | undefined = undefined;\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Images\", renderer);\n\n    renderer.addSchemaSubscriptions(ROS_IMAGE_DATATYPES, this.handleRosRawImage);\n    renderer.addSchemaSubscriptions(ROS_COMPRESSED_IMAGE_DATATYPES, this.handleRosCompressedImage);\n    renderer.addSchemaSubscriptions(CAMERA_INFO_DATATYPES, {\n      handler: this.handleCameraInfo,\n      shouldSubscribe: this.cameraInfoShouldSubscribe,\n    });\n\n    renderer.addSchemaSubscriptions(RAW_IMAGE_DATATYPES, this.handleRawImage);\n    renderer.addSchemaSubscriptions(COMPRESSED_IMAGE_DATATYPES, this.handleCompressedImage);\n    renderer.addSchemaSubscriptions(CAMERA_CALIBRATION_DATATYPES, {\n      handler: this.handleCameraInfo,\n      shouldSubscribe: this.cameraInfoShouldSubscribe,\n    });\n\n    this._updateCameraInfoTopics();\n  }\n\n  /**\n   * Update cameraInfoTopics cache with latest set of camera info messages\n   */\n  private _updateCameraInfoTopics() {\n    if (this.renderer.topics === this.lastTopics) {\n      return;\n    }\n\n    this.lastTopics = this.renderer.topics;\n\n    this.cameraInfoTopics = new Set();\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        topicIsConvertibleToSchema(topic, CAMERA_INFO_DATATYPES) ||\n        topicIsConvertibleToSchema(topic, CAMERA_CALIBRATION_DATATYPES)\n      ) {\n        this.cameraInfoTopics.add(topic.name);\n      }\n    }\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    this._updateCameraInfoTopics();\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, ROS_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, ROS_COMPRESSED_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, RAW_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, COMPRESSED_IMAGE_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const imageTopic = topic.name;\n      const config = (configTopics[imageTopic] ?? {}) as Partial<LayerSettingsImage>;\n\n      // Build a list of all matching CameraInfo topics\n      const bestCameraInfoOptions: SelectEntry[] = [];\n      const otherCameraInfoOptions: SelectEntry[] = [];\n      for (const cameraInfoTopic of this.cameraInfoTopics) {\n        if (cameraInfoTopicMatches(imageTopic, cameraInfoTopic)) {\n          bestCameraInfoOptions.push({ label: cameraInfoTopic, value: cameraInfoTopic });\n        } else {\n          otherCameraInfoOptions.push({ label: cameraInfoTopic, value: cameraInfoTopic });\n        }\n      }\n      const cameraInfoOptions = [...bestCameraInfoOptions, ...otherCameraInfoOptions];\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        cameraInfoTopic: { label: \"Camera Info\", input: \"select\", options: cameraInfoOptions, value: config.cameraInfoTopic },\n        distance: { label: \"Distance\", input: \"number\", placeholder: String(DEFAULT_DISTANCE), step: 0.1, precision: PRECISION_DISTANCE, value: config.distance },\n        planarProjectionFactor: { label: \"Planar Projection Factor\", input: \"number\", placeholder: String(DEFAULT_PLANAR_PROJECTION_FACTOR), min: 0, max: 1, step: 0.1, precision: 2, value: config.planarProjectionFactor },\n        color: { label: \"Color\", input: \"rgba\", value: config.color },\n      };\n\n      entries.push({\n        path: [\"topics\", imageTopic],\n        node: {\n          icon: \"ImageProjection\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          order: imageTopic.toLocaleLowerCase(),\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    const imageTopic = path[1]!;\n    const prevSettings = this.renderer.config.topics[imageTopic] as\n      | Partial<LayerSettingsImage>\n      | undefined;\n    const prevCameraInfoTopic = prevSettings?.cameraInfoTopic;\n\n    this.saveSetting(path, action.payload.value);\n\n    const settings = this.renderer.config.topics[imageTopic] as\n      | Partial<LayerSettingsImage>\n      | undefined;\n    const cameraInfoTopic = settings?.cameraInfoTopic;\n\n    // Add this camera_info_topic -> image_topic mapping\n    if (cameraInfoTopic !== prevCameraInfoTopic && cameraInfoTopic != undefined) {\n      this.cameraInfoToImageTopics.set(cameraInfoTopic, imageTopic);\n    }\n\n    const cameraInfoTopicChanged =\n      prevCameraInfoTopic != undefined && cameraInfoTopic !== prevCameraInfoTopic;\n\n    // The topic did not change, some other setting changed\n    // We re-update the renderable with the new settings and are done\n    if (!cameraInfoTopicChanged) {\n      const renderable = this.renderables.get(imageTopic);\n      if (!renderable) {\n        return;\n      }\n\n      const { image, cameraModel, receiveTime } = renderable.userData;\n      if (!image || !cameraModel) {\n        return;\n      }\n\n      this._updateImageRenderable(renderable, image, cameraModel, receiveTime, settings);\n      return;\n    }\n\n    // The camera info topic changed for our renderable\n    // Remove the previous camera_info_topic -> image_topic mapping\n    this.cameraInfoToImageTopics.delete(prevCameraInfoTopic, imageTopic);\n\n    const renderable = this.renderables.get(imageTopic);\n    if (!renderable) {\n      return;\n    }\n\n    // Create a new renderable preserving the image from the previous one\n    const { image, receiveTime, frameId } = renderable.userData;\n\n    // We dispose the old renderable and setup a new one. It is easier to dispose the old\n    // renderable than clear only the specific camera topic fields.\n    renderable.dispose();\n    this.renderables.delete(imageTopic);\n\n    const newRenderable = this._getImageRenderable(imageTopic, receiveTime, image, frameId);\n\n    // apply camera info to new renderable\n    if (!cameraInfoTopic) {\n      return;\n    }\n\n    // Look up the camera info for our image topic\n    const cameraInfo = this.cameraInfoByTopic.get(cameraInfoTopic);\n    if (!cameraInfo) {\n      this.renderer.settings.errors.addToTopic(\n        imageTopic,\n        NO_CAMERA_INFO_ERR,\n        `No CameraInfo received on ${cameraInfoTopic}`,\n      );\n      return;\n    }\n\n    const cameraModel = this._recomputeCameraModel(newRenderable, cameraInfo);\n    if (image && cameraModel) {\n      this._updateImageRenderable(newRenderable, image, cameraModel, receiveTime, settings);\n    }\n  };\n\n  private cameraInfoShouldSubscribe = (cameraInfoTopic: string): boolean => {\n    // Iterate over each topic config and check if it has a cameraInfoTopic setting that matches\n    // the cameraInfoTopic we might want to turn on. If it does and the topic is visible, return\n    // true so we know to subscribe.\n    for (const topicConfig of Object.values(this.renderer.config.topics)) {\n      const maybeImageConfig = topicConfig as Partial<LayerSettingsImage>;\n      if (\n        maybeImageConfig.cameraInfoTopic === cameraInfoTopic &&\n        maybeImageConfig.visible === true\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  private handleRosRawImage = (messageEvent: PartialMessageEvent<RosImage>): void => {\n    this.handleImage(messageEvent, normalizeRosImage(messageEvent.message));\n  };\n\n  private handleRosCompressedImage = (\n    messageEvent: PartialMessageEvent<RosCompressedImage>,\n  ): void => {\n    this.handleImage(messageEvent, normalizeRosCompressedImage(messageEvent.message));\n  };\n\n  private handleRawImage = (messageEvent: PartialMessageEvent<RawImage>): void => {\n    this.handleImage(messageEvent, normalizeRawImage(messageEvent.message));\n  };\n\n  private handleCompressedImage = (messageEvent: PartialMessageEvent<CompressedImage>): void => {\n    this.handleImage(messageEvent, normalizeCompressedImage(messageEvent.message));\n  };\n\n  private handleImage = (messageEvent: PartialMessageEvent<AnyImage>, image: AnyImage): void => {\n    // Ensure the latest list of camera info topics is up to date for autoSelectCameraInfoTopic call below\n    this._updateCameraInfoTopics();\n\n    const imageTopic = messageEvent.topic;\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const frameId = \"header\" in image ? image.header.frame_id : image.frame_id;\n\n    const renderable = this._getImageRenderable(imageTopic, receiveTime, image, frameId);\n\n    // Auto-select settings.cameraInfoTopic if it's not already set\n    const settings = renderable.userData.settings;\n    if (settings.cameraInfoTopic == undefined) {\n      const newCameraInfoTopic = (settings.cameraInfoTopic = autoSelectCameraInfoTopic(\n        imageTopic,\n        this.cameraInfoTopics,\n      ));\n\n      // With no selected camera info topic, we show a topic error and bail\n      // There's no way to render without camera info\n      if (newCameraInfoTopic == undefined) {\n        this.renderer.settings.errors.addToTopic(\n          imageTopic,\n          NO_CAMERA_INFO_ERR,\n          \"No CameraInfo topic found\",\n        );\n        return;\n      }\n\n      // We auto-selected a camera info topic for this image topic so we need to add the lookup.\n      // Without this lookup, the handleCameraInfo won't know what image topics to update when\n      // camera info messages arrive after image messages.\n      this.cameraInfoToImageTopics.set(newCameraInfoTopic, imageTopic);\n\n      // Update user settings with the newly selected CameraInfo topic\n      this.renderer.updateConfig((draft) => {\n        const updatedUserSettings = { ...settings };\n        updatedUserSettings.cameraInfoTopic = newCameraInfoTopic;\n        draft.topics[imageTopic] = updatedUserSettings;\n      });\n      this.updateSettingsTree();\n    }\n\n    // There's no camera info topic so we can't look up camera info messages to make a model\n    if (!settings.cameraInfoTopic) {\n      return;\n    }\n\n    // Look up the camera info for our renderable\n    const cameraInfo = this.cameraInfoByTopic.get(settings.cameraInfoTopic);\n    if (!cameraInfo) {\n      this.renderer.settings.errors.addToTopic(\n        imageTopic,\n        NO_CAMERA_INFO_ERR,\n        `No CameraInfo received on ${settings.cameraInfoTopic}`,\n      );\n      return;\n    }\n\n    const cameraModel = this._recomputeCameraModel(renderable, cameraInfo);\n    if (cameraModel) {\n      this._updateImageRenderable(renderable, image, cameraModel, receiveTime, settings);\n    }\n  };\n\n  private handleCameraInfo = (\n    messageEvent: PartialMessageEvent<CameraInfo> & PartialMessageEvent<CameraCalibration>,\n  ): void => {\n    // Store the last camera info on each topic, when processing an image message we'll look up\n    // the camera info by the info topic configured for the image\n    const cameraInfo = normalizeCameraInfo(messageEvent.message);\n    this.cameraInfoByTopic.set(messageEvent.topic, cameraInfo);\n\n    // Look up any image topics assigned to our camera info topic and determine if we need to update\n    // those renderables since we now have a camera info whereas we may not have previously\n    const imageTopics = this.cameraInfoToImageTopics.get(messageEvent.topic) ?? [];\n    for (const imageTopic of imageTopics) {\n      const renderable = this.renderables.get(imageTopic);\n      if (!renderable) {\n        continue;\n      }\n\n      // If there's no camera info topic assigned then we don't need to do update this renderable\n      const settings = renderable.userData.settings;\n      if (!settings.cameraInfoTopic || settings.cameraInfoTopic !== messageEvent.topic) {\n        continue;\n      }\n\n      // If there's no active image then we don't need to update the renderable\n      //\n      // When an image is received, the handleImage call will look up the cameraInfoByTopic and\n      // create the model.\n      const { image, receiveTime } = renderable.userData;\n      if (!image) {\n        continue;\n      }\n\n      const cameraModel = this._recomputeCameraModel(renderable, cameraInfo);\n      if (cameraModel) {\n        this._updateImageRenderable(renderable, image, cameraModel, receiveTime, settings);\n      }\n    }\n  };\n\n  /**\n   * Recompute a new camera model if the newCameraInfo differs from the current renderable info\n   *\n   * Return a new camera model if the info differs, return undefined if the info is unchanged or\n   * if a camera model could not be created.\n   *\n   * This function will set a topic error on the image topic if the camera model creation fails.\n   */\n  private _recomputeCameraModel(\n    renderable: ImageRenderable,\n    newCameraInfo: CameraInfo,\n  ): PinholeCameraModel | undefined {\n    // If the camera info has not changed, we don't need to make a new model\n    const dataEqual = cameraInfosEqual(renderable.userData.cameraInfo, newCameraInfo);\n    if (dataEqual && renderable.userData.cameraModel != undefined) {\n      return;\n    }\n\n    const imageTopic = renderable.userData.topic;\n\n    // clear the old model since that is no longer valid if the camera info changed\n    renderable.userData.cameraModel = undefined;\n    renderable.userData.geometry?.dispose();\n    renderable.userData.geometry = undefined;\n\n    try {\n      renderable.userData.cameraModel = new PinholeCameraModel(newCameraInfo);\n      this.renderer.settings.errors.removeFromTopic(imageTopic, CAMERA_MODEL);\n    } catch (errUnk) {\n      const err = errUnk as Error;\n      this.renderer.settings.errors.addToTopic(imageTopic, CAMERA_MODEL, err.message);\n\n      // if there's no model, there's no way to update the renderable\n      return;\n    }\n\n    // Save the latest camera info if we were able to make a model\n    renderable.userData.cameraInfo = newCameraInfo;\n\n    return renderable.userData.cameraModel;\n  }\n\n  private _updateImageRenderable(\n    renderable: ImageRenderable,\n    image: AnyImage,\n    cameraModel: PinholeCameraModel,\n    receiveTime: bigint,\n    settings: Partial<LayerSettingsImage> | undefined,\n  ): void {\n    const prevSettings = renderable.userData.settings;\n    const newSettings = { ...DEFAULT_SETTINGS, ...settings };\n    const geometrySettingsEqual =\n      newSettings.cameraInfoTopic === prevSettings.cameraInfoTopic &&\n      newSettings.distance === prevSettings.distance &&\n      newSettings.planarProjectionFactor === prevSettings.planarProjectionFactor;\n    const materialSettingsEqual = newSettings.color === prevSettings.color;\n    const topic = renderable.userData.topic;\n\n    renderable.userData.image = image;\n    renderable.userData.cameraModel = cameraModel;\n\n    // If there is camera info, the frameId comes from the camera info since the user may have\n    // selected camera info with a different frame than our image frame.\n    //\n    // If there is no camera info, we fall back to the image's frame\n    const rawFrameId =\n      renderable.userData.cameraInfo?.header.frame_id ??\n      (\"header\" in image ? image.header.frame_id : image.frame_id);\n\n    renderable.userData.frameId = this.renderer.normalizeFrameId(rawFrameId);\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(\n      \"header\" in image ? image.header.stamp : image.timestamp,\n    );\n    renderable.userData.settings = newSettings;\n\n    // Dispose of the current geometry if the settings have changed\n    if (!geometrySettingsEqual) {\n      renderable.userData.geometry?.dispose();\n      renderable.userData.geometry = undefined;\n      if (renderable.userData.mesh) {\n        renderable.remove(renderable.userData.mesh);\n        renderable.userData.mesh = undefined;\n      }\n    }\n\n    const hasCameraInfo = settings?.cameraInfoTopic != undefined;\n    if (hasCameraInfo) {\n      this.renderer.settings.errors.removeFromTopic(topic, NO_CAMERA_INFO_ERR);\n    }\n\n    // Create the plane geometry if needed\n    if (renderable.userData.geometry == undefined) {\n      const geometry = createGeometry(cameraModel, renderable.userData.settings);\n      renderable.userData.geometry = geometry;\n      if (renderable.userData.mesh) {\n        renderable.remove(renderable.userData.mesh);\n        renderable.userData.mesh = undefined;\n      }\n    }\n\n    // Create or update the bitmap texture\n    if (\"format\" in image) {\n      const bitmapData = new Blob([image.data], { type: `image/${image.format}` });\n      self\n        .createImageBitmap(bitmapData, { resizeWidth: DEFAULT_IMAGE_WIDTH })\n        .then((bitmap) => {\n          if (renderable.userData.texture == undefined) {\n            renderable.userData.texture = createCanvasTexture(bitmap);\n            rebuildMaterial(renderable);\n            tryCreateMesh(renderable, this.renderer);\n          } else {\n            renderable.userData.texture.image.close();\n            renderable.userData.texture.image = bitmap;\n            renderable.userData.texture.needsUpdate = true;\n          }\n\n          this.renderer.settings.errors.removeFromTopic(topic, CREATE_BITMAP_ERR);\n        })\n        .catch((err) => {\n          this.renderer.settings.errors.addToTopic(\n            topic,\n            CREATE_BITMAP_ERR,\n            `createBitmap failed: ${err.message}`,\n          );\n        });\n    } else {\n      const { width, height } = image;\n      const prevTexture = renderable.userData.texture as THREE.DataTexture | undefined;\n      if (\n        prevTexture == undefined ||\n        prevTexture.image.width !== width ||\n        prevTexture.image.height !== height\n      ) {\n        prevTexture?.dispose();\n        renderable.userData.texture = createDataTexture(width, height);\n        rebuildMaterial(renderable);\n        tryCreateMesh(renderable, this.renderer);\n      }\n\n      const texture = renderable.userData.texture as THREE.DataTexture;\n      rawImageToDataTexture(image, {}, texture);\n      texture.needsUpdate = true;\n    }\n\n    // Create or update the material if needed\n    if (!renderable.userData.material || !materialSettingsEqual) {\n      rebuildMaterial(renderable);\n    }\n\n    // Create/recreate the mesh if needed\n    tryCreateMesh(renderable, this.renderer);\n  }\n\n  // Get or create an image renderable for the imageTopic\n  private _getImageRenderable(\n    imageTopic: string,\n    receiveTime: bigint,\n    image: AnyImage | undefined,\n    frameId: string,\n  ): ImageRenderable {\n    let renderable = this.renderables.get(imageTopic);\n    if (renderable) {\n      return renderable;\n    }\n\n    // Look up any existing settings for the image topic to save as user data with the renderable\n    const userSettings = this.renderer.config.topics[imageTopic] as\n      | Partial<LayerSettingsImage>\n      | undefined;\n\n    renderable = new ImageRenderable(imageTopic, this.renderer, {\n      receiveTime,\n      messageTime: image ? toNanoSec(\"header\" in image ? image.header.stamp : image.timestamp) : 0n,\n      frameId: this.renderer.normalizeFrameId(frameId),\n      pose: makePose(),\n      settingsPath: [\"topics\", imageTopic],\n      topic: imageTopic,\n      settings: { ...DEFAULT_SETTINGS, ...userSettings },\n      cameraInfo: undefined,\n      cameraModel: undefined,\n      image,\n      texture: undefined,\n      material: undefined,\n      geometry: undefined,\n      mesh: undefined,\n    });\n\n    this.add(renderable);\n    this.renderables.set(imageTopic, renderable);\n    return renderable;\n  }\n}\n\ntype RawImageOptions = {\n  minValue?: number;\n  maxValue?: number;\n};\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\n\nfunction tryCreateMesh(renderable: ImageRenderable, renderer: Renderer): void {\n  const { mesh, geometry, material } = renderable.userData;\n  if (!mesh && geometry && material) {\n    renderable.userData.mesh = new THREE.Mesh(geometry, renderable.userData.material);\n    renderable.add(renderable.userData.mesh);\n    renderer.queueAnimationFrame();\n  }\n}\n\nfunction rebuildMaterial(renderable: ImageRenderable): void {\n  const texture = renderable.userData.texture;\n\n  renderable.userData.material?.dispose();\n  renderable.userData.material = texture ? createMaterial(texture, renderable) : undefined;\n\n  // Destroy the mesh, it needs to be rebuilt\n  if (renderable.userData.mesh) {\n    renderable.remove(renderable.userData.mesh);\n    renderable.userData.mesh = undefined;\n  }\n}\n\nfunction createCanvasTexture(bitmap: ImageBitmap): THREE.CanvasTexture {\n  const texture = new THREE.CanvasTexture(\n    bitmap,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    THREE.RGBAFormat,\n    THREE.UnsignedByteType,\n  );\n  texture.generateMipmaps = false;\n  texture.encoding = THREE.sRGBEncoding;\n  return texture;\n}\n\nfunction createDataTexture(width: number, height: number): THREE.DataTexture {\n  const size = width * height;\n  const rgba = new Uint8ClampedArray(size * 4);\n  return new THREE.DataTexture(\n    rgba,\n    width,\n    height,\n    THREE.RGBAFormat,\n    THREE.UnsignedByteType,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    1,\n    THREE.sRGBEncoding,\n  );\n}\n\nfunction createMaterial(\n  texture: THREE.Texture,\n  renderable: ImageRenderable,\n): THREE.MeshBasicMaterial {\n  stringToRgba(tempColor, renderable.userData.settings.color);\n  const transparent = tempColor.a < 1;\n  const color = new THREE.Color(tempColor.r, tempColor.g, tempColor.b);\n  return new THREE.MeshBasicMaterial({\n    name: `${renderable.userData.topic}:Material`,\n    color,\n    map: texture,\n    side: THREE.DoubleSide,\n    opacity: tempColor.a,\n    transparent,\n    depthWrite: !transparent,\n  });\n}\n\nfunction createGeometry(\n  cameraModel: PinholeCameraModel,\n  settings: LayerSettingsImage,\n): THREE.PlaneGeometry {\n  const WIDTH_SEGMENTS = 10;\n  const HEIGHT_SEGMENTS = 10;\n\n  const width = cameraModel.width;\n  const height = cameraModel.height;\n  const geometry = new THREE.PlaneGeometry(1, 1, WIDTH_SEGMENTS, HEIGHT_SEGMENTS);\n\n  const gridX1 = WIDTH_SEGMENTS + 1;\n  const gridY1 = HEIGHT_SEGMENTS + 1;\n  const size = gridX1 * gridY1;\n\n  const segmentWidth = width / WIDTH_SEGMENTS;\n  const segmentHeight = height / HEIGHT_SEGMENTS;\n\n  // Use a slight offset to avoid z-fighting with the CameraInfo wireframe\n  const EPS = 1e-3;\n\n  // Rebuild the position buffer for the plane by iterating through the grid and\n  // proejcting each pixel space x/y coordinate into a 3D ray and casting out by\n  // the user-configured distance setting. UV coordinates are rebuilt so the\n  // image is not vertically flipped\n  const pixel = { x: 0, y: 0 };\n  const p = { x: 0, y: 0, z: 0 };\n  const vertices = new Float32Array(size * 3);\n  const uvs = new Float32Array(size * 2);\n  for (let iy = 0; iy < gridY1; iy++) {\n    for (let ix = 0; ix < gridX1; ix++) {\n      const vOffset = (iy * gridX1 + ix) * 3;\n      const uvOffset = (iy * gridX1 + ix) * 2;\n\n      pixel.x = ix * segmentWidth;\n      pixel.y = iy * segmentHeight;\n      projectPixel(p, pixel, cameraModel, settings);\n\n      vertices[vOffset + 0] = p.x;\n      vertices[vOffset + 1] = p.y;\n      vertices[vOffset + 2] = p.z - EPS;\n\n      uvs[uvOffset + 0] = ix / WIDTH_SEGMENTS;\n      uvs[uvOffset + 1] = iy / HEIGHT_SEGMENTS;\n    }\n  }\n\n  geometry.setAttribute(\"position\", new THREE.BufferAttribute(vertices, 3));\n  geometry.setAttribute(\"uv\", new THREE.BufferAttribute(uvs, 2));\n  geometry.attributes.position!.needsUpdate = true;\n  geometry.attributes.uv!.needsUpdate = true;\n\n  return geometry;\n}\n\nexport function cameraInfoTopicMatches(imageTopic: string, cameraInfoTopic: string): boolean {\n  const imageParts = imageTopic.split(\"/\");\n  const infoParts = cameraInfoTopic.split(\"/\");\n\n  for (let i = 0; i < imageParts.length - 1 && i < infoParts.length - 1; i++) {\n    if (imageParts[i] !== infoParts[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Look up a matching camera info topic for the image topic.\n *\n * Return a candidate camera info topic.\n */\nfunction autoSelectCameraInfoTopic(\n  imageTopic: string,\n  cameraInfoTopics: Set<string>,\n): string | undefined {\n  const candidates: string[] = [];\n  for (const cameraInfoTopic of cameraInfoTopics) {\n    if (cameraInfoTopicMatches(imageTopic, cameraInfoTopic)) {\n      candidates.push(cameraInfoTopic);\n    }\n  }\n  candidates.sort();\n  return candidates[0];\n}\n\nfunction rawImageToDataTexture(\n  image: RosImage | RawImage,\n  options: RawImageOptions,\n  output: THREE.DataTexture,\n): void {\n  const { encoding, width, height } = image;\n  const is_bigendian = \"is_bigendian\" in image ? image.is_bigendian : false;\n  const rawData = image.data as Uint8Array;\n  switch (encoding) {\n    case \"yuv422\":\n      decodeYUV(image.data as Int8Array, width, height, output.image.data);\n      break;\n    // same thing as yuv422, but a distinct decoding from yuv422 and yuyv\n    case \"uyuv\":\n      decodeYUV(image.data as Int8Array, width, height, output.image.data);\n      break;\n    // change name in the future\n    case \"yuyv\":\n      decodeYUYV(image.data as Int8Array, width, height, output.image.data);\n      break;\n    case \"rgb8\":\n      decodeRGB8(rawData, width, height, output.image.data);\n      break;\n    case \"rgba8\":\n      decodeRGBA8(rawData, width, height, output.image.data);\n      break;\n    case \"bgra8\":\n      decodeBGRA8(rawData, width, height, output.image.data);\n      break;\n    case \"bgr8\":\n    case \"8UC3\":\n      decodeBGR8(rawData, width, height, output.image.data);\n      break;\n    case \"32FC1\":\n      decodeFloat1c(rawData, width, height, is_bigendian, output.image.data);\n      break;\n    case \"bayer_rggb8\":\n      decodeBayerRGGB8(rawData, width, height, output.image.data);\n      break;\n    case \"bayer_bggr8\":\n      decodeBayerBGGR8(rawData, width, height, output.image.data);\n      break;\n    case \"bayer_gbrg8\":\n      decodeBayerGBRG8(rawData, width, height, output.image.data);\n      break;\n    case \"bayer_grbg8\":\n      decodeBayerGRBG8(rawData, width, height, output.image.data);\n      break;\n    case \"mono8\":\n    case \"8UC1\":\n      decodeMono8(rawData, width, height, output.image.data);\n      break;\n    case \"mono16\":\n    case \"16UC1\":\n      decodeMono16(rawData, width, height, is_bigendian, output.image.data, options);\n      break;\n    default:\n      throw new Error(`Unsupported encoding ${encoding}`);\n  }\n}\n\nfunction normalizeImageData(data: Int8Array): Int8Array;\nfunction normalizeImageData(data: PartialMessage<Uint8Array> | undefined): Uint8Array;\nfunction normalizeImageData(data: unknown): Int8Array | Uint8Array;\nfunction normalizeImageData(data: unknown): Int8Array | Uint8Array {\n  if (data == undefined) {\n    return new Uint8Array(0);\n  } else if (data instanceof Int8Array || data instanceof Uint8Array) {\n    return data;\n  } else {\n    return new Uint8Array(0);\n  }\n}\n\nfunction normalizeRosImage(message: PartialMessage<RosImage>): RosImage {\n  return {\n    header: normalizeHeader(message.header),\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    encoding: message.encoding ?? \"\",\n    is_bigendian: message.is_bigendian ?? false,\n    step: message.step ?? 0,\n    data: normalizeImageData(message.data),\n  };\n}\n\nfunction normalizeRosCompressedImage(\n  message: PartialMessage<RosCompressedImage>,\n): RosCompressedImage {\n  return {\n    header: normalizeHeader(message.header),\n    format: message.format ?? \"\",\n    data: normalizeByteArray(message.data),\n  };\n}\n\nfunction normalizeRawImage(message: PartialMessage<RawImage>): RawImage {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    encoding: message.encoding ?? \"\",\n    step: message.step ?? 0,\n    data: normalizeImageData(message.data),\n  };\n}\n\nfunction normalizeCompressedImage(message: PartialMessage<CompressedImage>): CompressedImage {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    format: message.format ?? \"\",\n    data: normalizeByteArray(message.data),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\ninterface TypedArray {\n  readonly length: number;\n  readonly [n: number]: number;\n  BYTES_PER_ELEMENT: number;\n  set(n: ArrayLike<number>, offset: number): void;\n}\n\ninterface TypedArrayConstructor<T extends TypedArray> {\n  new (length: number): T;\n}\n\ninterface ArrayConstructor {\n  new (length: number): ArrayLike<number>;\n}\n\nexport class DynamicBufferGeometry extends THREE.BufferGeometry {\n  public override attributes: { [name: string]: THREE.BufferAttribute } = {};\n\n  private _attributeConstructors = new Map<string, ArrayConstructor>();\n  private _usage: THREE.Usage;\n  private _itemCapacity = 0;\n\n  public constructor(usage: THREE.Usage = THREE.DynamicDrawUsage) {\n    super();\n    this._usage = usage;\n  }\n\n  public setUsage(usage: THREE.Usage): void {\n    this._usage = usage;\n    for (const attribute of Object.values(this.attributes)) {\n      attribute.setUsage(usage);\n    }\n  }\n\n  public createAttribute<T extends TypedArray, C extends TypedArrayConstructor<T>>(\n    name: THREE.BuiltinShaderAttributeName | string,\n    arrayConstructor: C,\n    itemSize: number,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    normalized?: boolean,\n  ): THREE.BufferGeometry {\n    const data = new arrayConstructor(this._itemCapacity * itemSize);\n    const attribute = new THREE.BufferAttribute(data, itemSize, normalized);\n    attribute.setUsage(this._usage);\n    this._attributeConstructors.set(name, arrayConstructor);\n    return this.setAttribute(name, attribute);\n  }\n\n  public resize(itemCount: number): void {\n    this.setDrawRange(0, itemCount);\n\n    if (itemCount <= this._itemCapacity) {\n      for (const attribute of Object.values(this.attributes)) {\n        attribute.count = itemCount;\n      }\n      return;\n    }\n\n    for (const [attributeName, attribute] of Object.entries(this.attributes)) {\n      const dataConstructor = this._attributeConstructors.get(attributeName);\n      if (!dataConstructor) {\n        throw new Error(\n          `DynamicBufferGeometry resize(${itemCount}) failed, missing data constructor for attribute \"${attributeName}\". Attributes must be created using createAttribute().`,\n        );\n      }\n      const data = new dataConstructor(itemCount * attribute.itemSize);\n      const newAttrib = new THREE.BufferAttribute(data, attribute.itemSize, attribute.normalized);\n      newAttrib.setUsage(this._usage);\n      this.setAttribute(attributeName, newAttrib);\n    }\n\n    this._itemCapacity = itemCount;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { PackedElementField, PointCloud } from \"@foxglove/schemas\";\nimport { SettingsTreeNode, Topic } from \"@foxglove/studio\";\nimport { DynamicBufferGeometry } from \"@foxglove/studio-base/panels/ThreeDeeRender/DynamicBufferGeometry\";\nimport { BaseUserData, Renderable } from \"@foxglove/studio-base/panels/ThreeDeeRender/Renderable\";\nimport { Renderer } from \"@foxglove/studio-base/panels/ThreeDeeRender/Renderer\";\nimport { rgbaToCssString } from \"@foxglove/studio-base/panels/ThreeDeeRender/color\";\nimport { isSupportedField } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/pointClouds/fieldReaders\";\nimport {\n  missingTransformMessage,\n  MISSING_TRANSFORM,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/transforms\";\nimport { BaseSettings } from \"@foxglove/studio-base/panels/ThreeDeeRender/settings\";\nimport { MAX_DURATION, Pose } from \"@foxglove/studio-base/panels/ThreeDeeRender/transforms\";\nimport { updatePose } from \"@foxglove/studio-base/panels/ThreeDeeRender/updatePose\";\n\nimport { LaserScanMaterial } from \"./LaserScans\";\nimport {\n  baseColorModeSettingsNode,\n  colorHasTransparency,\n  ColorModeSettings,\n  FS_SRGB_TO_LINEAR,\n  INTENSITY_FIELDS,\n  RGBA_PACKED_FIELDS,\n} from \"./pointClouds/colors\";\nimport { POINTCLOUD_DATATYPES as FOXGLOVE_POINTCLOUD_DATATYPES } from \"../foxglove\";\nimport { PointCloud2, POINTCLOUD_DATATYPES as ROS_POINTCLOUD_DATATYPES, PointField } from \"../ros\";\n\nexport type LayerSettingsPointExtension = BaseSettings &\n  ColorModeSettings & {\n    pointSize: number;\n    pointShape: \"circle\" | \"square\";\n    decayTime: number;\n  };\n\nconst DEFAULT_POINT_SIZE = 1.5;\nconst DEFAULT_POINT_SHAPE = \"circle\";\nconst DEFAULT_COLOR_MAP = \"turbo\";\nconst DEFAULT_FLAT_COLOR = { r: 1, g: 1, b: 1, a: 1 };\nconst DEFAULT_MIN_COLOR = { r: 100 / 255, g: 47 / 255, b: 105 / 255, a: 1 };\nconst DEFAULT_MAX_COLOR = { r: 227 / 255, g: 177 / 255, b: 135 / 255, a: 1 };\n\n// used by LaserScans, VelodyneScans, and PointClouds\nexport const DEFAULT_POINT_SETTINGS: LayerSettingsPointExtension = {\n  visible: false,\n  frameLocked: false,\n  pointSize: DEFAULT_POINT_SIZE,\n  pointShape: DEFAULT_POINT_SHAPE,\n  decayTime: 0,\n  colorMode: \"flat\",\n  flatColor: rgbaToCssString(DEFAULT_FLAT_COLOR),\n  colorField: undefined,\n  gradient: [rgbaToCssString(DEFAULT_MIN_COLOR), rgbaToCssString(DEFAULT_MAX_COLOR)],\n  colorMap: DEFAULT_COLOR_MAP,\n  explicitAlpha: 1,\n  minValue: undefined,\n  maxValue: undefined,\n};\n\nexport const POINT_CLOUD_REQUIRED_FIELDS = [\"x\", \"y\", \"z\"];\nexport const POINT_SHAPE_OPTIONS = [\n  { label: \"Circle\", value: \"circle\" },\n  { label: \"Square\", value: \"square\" },\n];\n\n/**\n * Creates settings node for Point cloud and scan topics\n * @param topic - topic to get settings node for\n * @param messageFields - message fields or required fields for the topic\n * @param config - current topic settings\n * @param defaultSettings - (optional) default settings to use\n * @returns  - settings node for the topic\n */\nexport function pointSettingsNode(\n  topic: Topic,\n  messageFields: string[],\n  config: Partial<LayerSettingsPointExtension>,\n  defaultSettings: LayerSettingsPointExtension = DEFAULT_POINT_SETTINGS,\n): SettingsTreeNode {\n  const pointSize = config.pointSize;\n  const pointShape = config.pointShape ?? \"circle\";\n  const decayTime = config.decayTime;\n\n  const node = baseColorModeSettingsNode(messageFields, config, topic, defaultSettings, {\n    supportsPackedRgbModes: ROS_POINTCLOUD_DATATYPES.has(topic.schemaName),\n    supportsRgbaFieldsMode: FOXGLOVE_POINTCLOUD_DATATYPES.has(topic.schemaName),\n  });\n  node.fields = {\n    pointSize: {\n      label: \"Point size\",\n      input: \"number\",\n      step: 1,\n      placeholder: \"2\",\n      precision: 2,\n      value: pointSize,\n    },\n    pointShape: {\n      label: \"Point shape\",\n      input: \"select\",\n      options: POINT_SHAPE_OPTIONS,\n      value: pointShape,\n    },\n    decayTime: {\n      label: \"Decay time\",\n      input: \"number\",\n      step: 0.5,\n      placeholder: \"0 seconds\",\n      min: 0,\n      precision: 3,\n      value: decayTime,\n    },\n    ...node.fields,\n  };\n\n  return node;\n}\n\n/**\n * Selects optimal color field for settings given point cloud message\n * @param output - settings object to apply auto selection of colorfield to\n * @param pointCloud - point cloud message\n * @param { supportsPackedRgbModes } - whether or not the point cloud message supports packed rgb modes\n * @returns - changes output object to have desired color field selected\n */\nexport function autoSelectColorField(\n  output: LayerSettingsPointExtension,\n  pointCloud: PointCloud | PointCloud2,\n  { supportsPackedRgbModes }: { supportsPackedRgbModes: boolean },\n): void {\n  // Prefer color fields first\n  if (supportsPackedRgbModes) {\n    for (const field of pointCloud.fields) {\n      if (!isSupportedField(field)) {\n        continue;\n      }\n      const fieldNameLower = field.name.toLowerCase();\n      if (RGBA_PACKED_FIELDS.has(fieldNameLower)) {\n        output.colorField = field.name;\n        switch (fieldNameLower) {\n          case \"rgb\":\n            output.colorMode = \"rgb\";\n            break;\n          default:\n          case \"rgba\":\n            output.colorMode = \"rgba\";\n            break;\n        }\n        return;\n      }\n    }\n  }\n\n  // Intensity fields are second priority\n  for (const field of pointCloud.fields) {\n    if (!isSupportedField(field)) {\n      continue;\n    }\n    if (INTENSITY_FIELDS.has(field.name)) {\n      output.colorField = field.name;\n      output.colorMode = \"colormap\";\n      output.colorMap = \"turbo\";\n      return;\n    }\n  }\n\n  // Fall back to using the first point cloud field\n  const firstField = (pointCloud.fields as readonly (PackedElementField | PointField)[]).find(\n    (field) => isSupportedField(field),\n  );\n  if (firstField != undefined) {\n    output.colorField = firstField.name;\n    output.colorMode = \"colormap\";\n    output.colorMap = \"turbo\";\n    return;\n  }\n}\n/**\n * Creates a THREE.Points object for a point cloud and scan messages\n * @param topic - topic name string for naming geometry\n * @param usage - THREE draw usage (ex: THREE.StaticDrawUsage)\n * @returns\n */\nexport function createGeometry(topic: string, usage: THREE.Usage): DynamicBufferGeometry {\n  const geometry = new DynamicBufferGeometry(usage);\n  geometry.name = `${topic}:PointScans:geometry`;\n  geometry.createAttribute(\"position\", Float32Array, 3);\n  geometry.createAttribute(\"color\", Uint8Array, 4, true);\n  return geometry;\n}\n\ntype Material = THREE.PointsMaterial | LaserScanMaterial;\ntype Points = THREE.Points<DynamicBufferGeometry, Material>;\n\nexport function pointCloudColorEncoding<T extends LayerSettingsPointExtension>(\n  settings: T,\n): \"srgb\" | \"linear\" {\n  switch (settings.colorMode) {\n    case \"flat\":\n    case \"colormap\":\n    case \"gradient\":\n      // converted to linear by getColorConverter\n      return \"linear\";\n    case \"rgb\":\n    case \"rgba\":\n    case \"rgba-fields\":\n      return \"srgb\";\n  }\n}\n\nexport function createPoints(\n  topic: string,\n  pose: Pose,\n  geometry: DynamicBufferGeometry,\n  material: Material,\n  pickingMaterial: THREE.Material,\n  instancePickingMaterial: THREE.Material | undefined,\n): Points {\n  const points = new THREE.Points<DynamicBufferGeometry, Material>(geometry, material);\n  // We don't calculate the bounding sphere for points, so frustum culling is disabled\n  points.frustumCulled = false;\n  points.name = `${topic}:PointCloud:points`;\n  points.userData = {\n    pickingMaterial,\n    instancePickingMaterial,\n    pose,\n  };\n  return points;\n}\n\n// Fragment shader chunk to convert sRGB to linear RGB\nconst FS_POINTCLOUD_SRGB_TO_LINEAR = /* glsl */ `\noutgoingLight = sRGBToLinear(outgoingLight);\n`;\n\n// Fragment shader chunk to render a GL_POINT as a circle\nconst FS_POINTCLOUD_CIRCLE = /* glsl */ `\nvec2 cxy = 2.0 * gl_PointCoord - 1.0;\nif (dot(cxy, cxy) > 1.0) { discard; }\n`;\n\nexport function pointCloudMaterial<T extends LayerSettingsPointExtension>(\n  settings: T,\n): THREE.PointsMaterial {\n  const transparent = colorHasTransparency(settings);\n  const encoding = pointCloudColorEncoding(settings);\n  const scale = settings.pointSize;\n  const shape = settings.pointShape;\n\n  const material = new THREE.PointsMaterial({\n    vertexColors: true,\n    size: scale,\n    sizeAttenuation: false,\n    transparent,\n    // The sorting issues caused by writing semi-transparent pixels to the depth buffer are less\n    // distracting for point clouds than the self-sorting artifacts when depth writing is disabled\n    depthWrite: true,\n  });\n\n  // Tell three.js to recompile the shader when `shape` or `encoding` change\n  material.customProgramCacheKey = () => `${shape}-${encoding}`;\n  material.onBeforeCompile = (shader) => {\n    const SEARCH = \"#include <output_fragment>\";\n    if (shape === \"circle\") {\n      // Patch the fragment shader to render points as circles\n      shader.fragmentShader = shader.fragmentShader.replace(SEARCH, FS_POINTCLOUD_CIRCLE + SEARCH);\n    }\n    if (encoding === \"srgb\") {\n      // Patch the fragment shader to add sRGB->linear color conversion\n      shader.fragmentShader =\n        FS_SRGB_TO_LINEAR +\n        shader.fragmentShader.replace(SEARCH, FS_POINTCLOUD_SRGB_TO_LINEAR + SEARCH);\n    }\n  };\n\n  return material;\n}\n\nexport function createPickingMaterial<T extends LayerSettingsPointExtension>(\n  settings: T,\n): THREE.ShaderMaterial {\n  const MIN_PICKING_POINT_SIZE = 8;\n\n  // Use a custom shader for picking that sets a minimum point size to make\n  // individual points easier to click on\n  const pointSize = Math.max(settings.pointSize, MIN_PICKING_POINT_SIZE);\n  return new THREE.ShaderMaterial({\n    vertexShader: /* glsl */ `\n      uniform float pointSize;\n      void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = pointSize;\n      }\n    `,\n    fragmentShader: /* glsl */ `\n      uniform vec4 objectId;\n      void main() {\n        gl_FragColor = objectId;\n      }\n    `,\n    side: THREE.DoubleSide,\n    uniforms: { pointSize: { value: pointSize }, objectId: { value: [NaN, NaN, NaN, NaN] } },\n  });\n}\n\nexport function createInstancePickingMaterial<T extends LayerSettingsPointExtension>(\n  settings: T,\n): THREE.ShaderMaterial {\n  const MIN_PICKING_POINT_SIZE = 8;\n\n  // Use a custom shader for picking that sets a minimum point size to make\n  // individual points easier to click on\n  const pointSize = Math.max(settings.pointSize, MIN_PICKING_POINT_SIZE);\n  return new THREE.ShaderMaterial({\n    vertexShader: /* glsl */ `\n        uniform float pointSize;\n        varying vec4 objectId;\n        void main() {\n          objectId = vec4(\n            float((gl_VertexID >> 24) & 255) / 255.0,\n            float((gl_VertexID >> 16) & 255) / 255.0,\n            float((gl_VertexID >> 8) & 255) / 255.0,\n            float(gl_VertexID & 255) / 255.0);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = pointSize;\n        }\n      `,\n    fragmentShader: /* glsl */ `\n        varying vec4 objectId;\n        void main() {\n          gl_FragColor = objectId;\n        }\n      `,\n    side: THREE.DoubleSide,\n    uniforms: { pointSize: { value: pointSize } },\n  });\n}\n\n/**\n * Class that handles lifecycle of 3d object history over the decay time\n * This class encapsulates the functionality of showing the history of an object within a specified decay time.\n * Meant to be extensible for all kinds of renderables that need to show old points over decay time.\n * See LaserScansRenderable and PointCloudsRenderable for examples.\n */\n\ntype RenderObjectHistoryUserData = BaseUserData & {\n  topic: string;\n  settings: LayerSettingsPointExtension;\n  material: THREE.Material;\n  pickingMaterial: THREE.Material;\n};\n\ntype ThreeObject = THREE.Points<DynamicBufferGeometry> | THREE.LineSegments<DynamicBufferGeometry>;\ntype HistoryEntry = { receiveTime: bigint; messageTime: bigint; object3d: ThreeObject };\nexport class RenderObjectHistory<ParentRenderable extends Renderable<RenderObjectHistoryUserData>> {\n  public history: HistoryEntry[];\n  private renderable: ParentRenderable;\n  private renderer: Renderer;\n\n  public constructor({\n    initial,\n    renderer,\n    parentRenderable,\n  }: {\n    initial: HistoryEntry;\n    renderer: Renderer;\n    parentRenderable: ParentRenderable;\n  }) {\n    this.history = [initial];\n    this.renderer = renderer;\n    this.renderable = parentRenderable;\n  }\n\n  public addHistoryEntry(entry: HistoryEntry): void {\n    this.history.push(entry);\n  }\n\n  public updateMaterial(material: THREE.Material): void {\n    for (const entry of this.history) {\n      entry.object3d.material = material;\n    }\n  }\n\n  public updateHistoryFromCurrentTime(currentTime: bigint): void {\n    // Remove expired entries from the history of points when decayTime is enabled\n    const pointsHistory = this.history;\n    const decayTime = this.renderable.userData.settings.decayTime;\n    const expireTime =\n      decayTime > 0 ? currentTime - BigInt(Math.round(decayTime * 1e9)) : MAX_DURATION;\n    while (pointsHistory.length > 1 && pointsHistory[0]!.receiveTime < expireTime) {\n      const entry = this.history.shift()!;\n      this.renderable.remove(entry.object3d);\n      entry.object3d.geometry.dispose();\n    }\n  }\n\n  public updatePoses(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    // Update the pose on each entry\n    let hadTfError = false;\n    for (const entry of this.history) {\n      const srcTime = entry.messageTime;\n      const frameId = this.renderable.userData.frameId;\n      const updated = updatePose(\n        entry.object3d,\n        this.renderer.transformTree,\n        renderFrameId,\n        fixedFrameId,\n        frameId,\n        currentTime,\n        srcTime,\n      );\n      if (!updated && !hadTfError) {\n        const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n        this.renderer.settings.errors.add(\n          this.renderable.userData.settingsPath,\n          MISSING_TRANSFORM,\n          message,\n        );\n        hadTfError = true;\n      }\n    }\n  }\n\n  public latest(): { receiveTime: bigint; messageTime: bigint; object3d: ThreeObject } | undefined {\n    return this.history[this.history.length - 1];\n  }\n\n  public clearHistory(): void {\n    // removes all but the last element of the array, which would be the current object used in rendering\n    for (const entry of this.history.splice(0, this.history.length - 1)) {\n      entry.object3d.geometry.dispose();\n      this.renderable.remove(entry.object3d);\n    }\n  }\n\n  public dispose(): void {\n    for (const entry of this.history) {\n      entry.object3d.geometry.dispose();\n    }\n    this.history.length = 0;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { MutablePose } from \"@foxglove/studio-base/types/Messages\";\n\n// Create a new empty pose object\nexport function emptyPose(): MutablePose {\n  return { position: { x: 0, y: 0, z: 0 }, orientation: { x: 0, y: 0, z: 0, w: 1 } };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { Time, toNanoSec } from \"@foxglove/rostime\";\nimport { LaserScan as FoxgloveLaserScan } from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\nimport {\n  createPoints,\n  DEFAULT_POINT_SETTINGS,\n  LayerSettingsPointExtension,\n  pointSettingsNode,\n  RenderObjectHistory,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/pointExtensionUtils\";\nimport type { RosObject, RosValue } from \"@foxglove/studio-base/players/types\";\nimport { emptyPose } from \"@foxglove/studio-base/util/Pose\";\n\nimport { colorHasTransparency, getColorConverter } from \"./pointClouds/colors\";\nimport { DynamicBufferGeometry } from \"../DynamicBufferGeometry\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { LASERSCAN_DATATYPES as FOXGLOVE_LASERSCAN_DATATYPES } from \"../foxglove\";\nimport { normalizeFloat32Array, normalizeTime, normalizePose } from \"../normalizeMessages\";\nimport { LASERSCAN_DATATYPES as ROS_LASERSCAN_DATATYPES, LaserScan as RosLaserScan } from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { Pose } from \"../transforms\";\n\ntype LayerSettingsLaserScan = LayerSettingsPointExtension;\nconst DEFAULT_SETTINGS = DEFAULT_POINT_SETTINGS;\n\ntype NormalizedLaserScan = {\n  timestamp: Time;\n  frame_id: string;\n  pose: Pose;\n  start_angle: number;\n  end_angle: number;\n  range_min: number;\n  range_max: number;\n  ranges: Float32Array;\n  intensities: Float32Array;\n};\n\ntype LaserScanUserData = BaseUserData & {\n  settings: LayerSettingsLaserScan;\n  topic: string;\n  laserScan: NormalizedLaserScan;\n  originalMessage: Record<string, RosValue> | undefined;\n  material: LaserScanMaterial;\n  pickingMaterial: LaserScanMaterial;\n  instancePickingMaterial: LaserScanInstancePickingMaterial;\n};\n\nconst LASERSCAN_FIELDS = [\"range\", \"intensity\"];\n\nconst ALL_LASERSCAN_DATATYPES = new Set<string>([\n  ...FOXGLOVE_LASERSCAN_DATATYPES,\n  ...ROS_LASERSCAN_DATATYPES,\n]);\n\nconst INVALID_LASERSCAN = \"INVALID_LASERSCAN\";\n\nconst VEC3_ZERO = new THREE.Vector3();\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\n\nfunction createLaserScanGeometry(topic: string, usage: THREE.Usage): DynamicBufferGeometry {\n  const geometry = new DynamicBufferGeometry(usage);\n  geometry.name = `${topic}:LaserScan:geometry`;\n  // Three.JS doesn't render anything if there is no attribute named position, so we use the name position for the \"range\" parameter.\n  geometry.createAttribute(\"position\", Float32Array, 1);\n  geometry.createAttribute(\"color\", Uint8Array, 4, true);\n  return geometry;\n}\n\nclass LaserScanRenderable extends Renderable<LaserScanUserData> {\n  public override pickableInstances = true;\n  private pointsHistory: RenderObjectHistory<LaserScanRenderable>;\n\n  public constructor(topic: string, renderer: Renderer, userData: LaserScanUserData) {\n    super(topic, renderer, userData);\n\n    const isDecay = userData.settings.decayTime > 0;\n\n    const geometry = createLaserScanGeometry(\n      topic,\n      isDecay ? THREE.DynamicDrawUsage : THREE.StaticDrawUsage,\n    );\n    const points = createPoints(\n      topic,\n      userData.laserScan.pose,\n      geometry,\n      userData.material,\n      userData.pickingMaterial,\n      userData.instancePickingMaterial,\n    );\n\n    this.pointsHistory = new RenderObjectHistory({\n      initial: {\n        messageTime: userData.receiveTime,\n        receiveTime: userData.receiveTime,\n        object3d: points,\n      },\n      parentRenderable: this,\n      renderer,\n    });\n    this.add(points);\n  }\n  public override dispose(): void {\n    this.userData.originalMessage = undefined;\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n    this.userData.instancePickingMaterial.dispose();\n    this.pointsHistory.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage ?? {};\n  }\n\n  public override instanceDetails(instanceId: number): Record<string, RosValue> | undefined {\n    const range =\n      instanceId >= 0 && instanceId < this.userData.laserScan.ranges.length\n        ? this.userData.laserScan.ranges[instanceId]\n        : undefined;\n    const intensity =\n      instanceId >= 0 && instanceId < this.userData.laserScan.intensities.length\n        ? this.userData.laserScan.intensities[instanceId]\n        : undefined;\n    return { range, intensity };\n  }\n\n  public updateLaserScan(\n    laserScan: NormalizedLaserScan,\n    originalMessage: RosObject | undefined,\n    settings: LayerSettingsLaserScan,\n    receiveTime: bigint,\n  ): void {\n    const messageTime = toNanoSec(laserScan.timestamp);\n    this.userData.receiveTime = receiveTime;\n    this.userData.messageTime = messageTime;\n    this.userData.frameId = this.renderer.normalizeFrameId(laserScan.frame_id);\n    this.userData.laserScan = laserScan;\n    this.userData.originalMessage = originalMessage;\n\n    this.userData.settings = settings;\n    const { colorField } = settings;\n    const { intensities, ranges } = laserScan;\n\n    // Invalid laser scan checks\n    if (intensities.length !== 0 && intensities.length !== ranges.length) {\n      const message = `LaserScan intensities length (${intensities.length}) does not match ranges length (${ranges.length})`;\n      invalidLaserScanError(this.renderer, this, message);\n      return;\n    }\n    if (colorField !== \"intensity\" && colorField !== \"range\") {\n      const message = `LaserScan color field must be either 'intensity' or 'range', found '${colorField}'`;\n      invalidLaserScanError(this.renderer, this, message);\n      return;\n    }\n\n    const laserScanMaterial = this.userData.material;\n    const pickingMaterial = this.userData.pickingMaterial;\n\n    const topic = this.userData.topic;\n    const pointsHistory = this.pointsHistory;\n    const isDecay = settings.decayTime > 0;\n    if (isDecay) {\n      // Push a new (empty) entry to the history of points\n      const geometry = createLaserScanGeometry(topic, THREE.StaticDrawUsage);\n      const points = createPoints(\n        topic,\n        laserScan.pose,\n        geometry,\n        laserScanMaterial,\n        pickingMaterial,\n        undefined,\n      );\n      pointsHistory.addHistoryEntry({ receiveTime, messageTime, object3d: points });\n      this.add(points);\n    }\n\n    const latestEntry = pointsHistory.latest();\n    if (!latestEntry) {\n      throw new Error(`pointsHistory is empty for ${topic}`);\n    }\n\n    latestEntry.receiveTime = receiveTime;\n    latestEntry.messageTime = messageTime;\n    latestEntry.object3d.userData.pose = laserScan.pose;\n\n    const geometry = latestEntry.object3d.geometry;\n    geometry.resize(ranges.length);\n    const rangeAttribute = geometry.attributes.position!;\n    const colorAttribute = geometry.attributes.color!;\n    rangeAttribute.set(ranges);\n\n    // Update material uniforms\n    laserScanMaterial.update(settings, laserScan);\n    pickingMaterial.update(settings, laserScan);\n\n    // Determine min/max color values (if needed) and max range\n    let minColorValue = settings.minValue ?? Number.POSITIVE_INFINITY;\n    let maxColorValue = settings.maxValue ?? Number.NEGATIVE_INFINITY;\n    if (settings.minValue == undefined || settings.maxValue == undefined) {\n      let maxRange = 0;\n\n      for (let i = 0; i < ranges.length; i++) {\n        const range = ranges[i]!;\n        if (Number.isFinite(range)) {\n          maxRange = Math.max(maxRange, range);\n        }\n\n        const colorValue = colorField === \"range\" ? range : intensities[i];\n        if (Number.isFinite(colorValue)) {\n          minColorValue = Math.min(minColorValue, colorValue!);\n          maxColorValue = Math.max(maxColorValue, colorValue!);\n        }\n      }\n      minColorValue = settings.minValue ?? minColorValue;\n      maxColorValue = settings.maxValue ?? maxColorValue;\n\n      // Update the LaserScan bounding sphere\n      latestEntry.object3d.geometry.boundingSphere ??= new THREE.Sphere();\n      latestEntry.object3d.geometry.boundingSphere.set(VEC3_ZERO, maxRange);\n      latestEntry.object3d.frustumCulled = true;\n    } else {\n      latestEntry.object3d.geometry.boundingSphere = ReactNull;\n      latestEntry.object3d.frustumCulled = false;\n    }\n\n    // Build a method to convert raw color field values to RGBA\n    const colorConverter =\n      settings.colorMode === \"rgba-fields\"\n        ? () => NaN // should never happen: rgba-fields is not supported for LaserScans\n        : getColorConverter(\n            settings as typeof settings & { colorMode: typeof settings.colorMode },\n            minColorValue,\n            maxColorValue,\n          );\n\n    // Iterate the point cloud data to update color attribute\n    for (let i = 0; i < ranges.length; i++) {\n      const colorValue = colorField === \"range\" ? ranges[i]! : intensities[i] ?? 0;\n      colorConverter(tempColor, colorValue);\n      colorAttribute.setXYZW(i, tempColor.r, tempColor.g, tempColor.b, tempColor.a);\n    }\n\n    rangeAttribute.needsUpdate = true;\n    colorAttribute.needsUpdate = true;\n  }\n\n  public updateUniforms(): void {\n    const material = this.userData.material as Partial<LaserScanMaterial>;\n    const pixelRatio = material.uniforms?.pixelRatio;\n    if (pixelRatio) {\n      pixelRatio.value = this.renderer.getPixelRatio();\n    }\n  }\n\n  public invalidateLastEntry() {\n    const lastEntry = this.pointsHistory.latest();\n    lastEntry?.object3d.geometry.resize(0);\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    if (!this.userData.settings.visible) {\n      this.renderer.settings.errors.clearPath(this.userData.settingsPath);\n      this.pointsHistory.clearHistory();\n      return;\n    }\n    this.pointsHistory.updateHistoryFromCurrentTime(currentTime);\n    this.pointsHistory.updatePoses(currentTime, renderFrameId, fixedFrameId);\n    this.updateUniforms();\n  }\n}\n\nexport class LaserScans extends SceneExtension<LaserScanRenderable> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.LaserScans\", renderer);\n\n    renderer.addSchemaSubscriptions(ROS_LASERSCAN_DATATYPES, this.handleLaserScan);\n    renderer.addSchemaSubscriptions(FOXGLOVE_LASERSCAN_DATATYPES, this.handleLaserScan);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      const isLaserScan = topicIsConvertibleToSchema(topic, ALL_LASERSCAN_DATATYPES);\n      if (!isLaserScan) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsLaserScan>;\n      const messageFields = LASERSCAN_FIELDS;\n      const node: SettingsTreeNodeWithActionHandler = pointSettingsNode(\n        topic,\n        messageFields,\n        config,\n      );\n      node.handler = handler;\n      node.icon = \"Radar\";\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Do not call super.startFrame() since we handle updatePose() manually.\n    // Instead of updating the pose for each Renderable in this.renderables, we\n    // update the pose of each THREE.Points object in the pointsHistory of each\n    // renderable\n\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n      renderable.updateUniforms();\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevSettings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsLaserScan>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...prevSettings };\n\n      renderable.updateLaserScan(\n        renderable.userData.laserScan,\n        renderable.userData.originalMessage,\n        settings,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  private handleLaserScan = (\n    messageEvent: PartialMessageEvent<RosLaserScan | FoxgloveLaserScan>,\n  ): void => {\n    const topic = messageEvent.topic;\n    const laserScan =\n      \"header\" in messageEvent.message\n        ? normalizeRosLaserScan(messageEvent.message)\n        : normalizeFoxgloveLaserScan(messageEvent.message as PartialMessage<FoxgloveLaserScan>);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsLaserScan>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      if (settings.colorField == undefined) {\n        settings.colorField = \"intensity\";\n        settings.colorMode = \"colormap\";\n        settings.colorMap = \"turbo\";\n\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      const material = new LaserScanMaterial();\n      const pickingMaterial = new LaserScanMaterial({ picking: true });\n      const instancePickingMaterial = new LaserScanInstancePickingMaterial();\n\n      material.update(settings, laserScan);\n      pickingMaterial.update(settings, laserScan);\n\n      const messageTime = toNanoSec(laserScan.timestamp);\n      renderable = new LaserScanRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId: this.renderer.normalizeFrameId(laserScan.frame_id),\n        pose: laserScan.pose,\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        laserScan,\n        originalMessage: messageEvent.message as RosObject,\n        material,\n        pickingMaterial,\n        instancePickingMaterial,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    renderable.updateLaserScan(\n      laserScan,\n      messageEvent.message as RosObject,\n      renderable.userData.settings,\n      receiveTime,\n    );\n  };\n}\n\nexport class LaserScanMaterial extends THREE.RawShaderMaterial {\n  private static MIN_PICKING_POINT_SIZE = 8;\n\n  public constructor({ picking = false }: { picking?: boolean } = {}) {\n    super({\n      vertexShader: /*glsl*/ `\\\n        #version 300 es\n        precision highp float;\n        precision highp int;\n        uniform mat4 projectionMatrix, modelViewMatrix;\n\n        uniform float pointSize;\n        uniform float pixelRatio;\n        uniform float angleMin, angleIncrement;\n        uniform float rangeMin, rangeMax;\n        in float position; // range, but must be named position in order for three.js to render anything\n        in mediump vec4 color;\n        out mediump vec4 vColor;\n        void main() {\n          if (position < rangeMin || position > rangeMax) {\n            gl_PointSize = 0.0;\n            return;\n          }\n          vColor = color;\n          float angle = angleMin + angleIncrement * float(gl_VertexID);\n          vec4 pos = vec4(position * cos(angle), position * sin(angle), 0, 1.0);\n          gl_Position = projectionMatrix * modelViewMatrix * pos;\n          ${\n            picking\n              ? /* glsl */ `gl_PointSize = pixelRatio * max(pointSize, ${LaserScanMaterial.MIN_PICKING_POINT_SIZE.toFixed(\n                  1,\n                )});`\n              : \"gl_PointSize = pixelRatio * pointSize;\"\n          }\n\n        }\n      `,\n      fragmentShader: `\\\n        #version 300 es\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n          precision highp float;\n        #else\n          precision mediump float;\n        #endif\n        uniform bool isCircle;\n        ${picking ? \"uniform vec4 objectId;\" : \"in mediump vec4 vColor;\"}\n        out vec4 outColor;\n\n        ${THREE.ShaderChunk.encodings_pars_fragment /* for LinearTosRGB() */}\n\n        void main() {\n          if (isCircle) {\n            vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n            if (dot(cxy, cxy) > 1.0) { discard; }\n          }\n          ${picking ? \"outColor = objectId;\" : \"outColor = LinearTosRGB(vColor);\"}\n        }\n      `,\n    });\n    this.uniforms = {\n      isCircle: { value: false },\n      pointSize: { value: 1 },\n      pixelRatio: { value: 1 },\n      angleMin: { value: NaN },\n      angleIncrement: { value: NaN },\n      rangeMin: { value: NaN },\n      rangeMax: { value: NaN },\n    };\n    if (picking) {\n      this.uniforms.objectId = { value: [NaN, NaN, NaN, NaN] };\n    }\n  }\n\n  public update(settings: LayerSettingsLaserScan, laserScan: NormalizedLaserScan): void {\n    this.uniforms.isCircle!.value = settings.pointShape === \"circle\";\n    this.uniforms.pointSize!.value = settings.pointSize;\n    this.uniforms.angleMin!.value = laserScan.start_angle;\n    this.uniforms.angleIncrement!.value =\n      (laserScan.end_angle - laserScan.start_angle) / (laserScan.ranges.length - 1);\n    this.uniforms.rangeMin!.value = laserScan.range_min;\n    this.uniforms.rangeMax!.value = laserScan.range_max;\n    this.uniformsNeedUpdate = true;\n\n    const transparent = colorHasTransparency(settings);\n    if (transparent !== this.transparent) {\n      this.transparent = transparent;\n      this.depthWrite = !this.transparent;\n      this.needsUpdate = true;\n    }\n  }\n}\n\nclass LaserScanInstancePickingMaterial extends THREE.RawShaderMaterial {\n  private static MIN_PICKING_POINT_SIZE = 8;\n\n  public constructor() {\n    const minPointSize = LaserScanInstancePickingMaterial.MIN_PICKING_POINT_SIZE.toFixed(1);\n    super({\n      vertexShader: /* glsl */ `\\\n        #version 300 es\n        precision highp float;\n        precision highp int;\n        uniform mat4 projectionMatrix, modelViewMatrix;\n\n        uniform float pointSize;\n        uniform float pixelRatio;\n        uniform float angleMin, angleIncrement;\n        uniform float rangeMin, rangeMax;\n        in float position; // range, but must be named position in order for three.js to render anything\n        varying vec4 objectId;\n        void main() {\n          if (position < rangeMin || position > rangeMax) {\n            gl_PointSize = 0.0;\n            return;\n          }\n          objectId = vec4(\n            float((gl_VertexID >> 24) & 255) / 255.0,\n            float((gl_VertexID >> 16) & 255) / 255.0,\n            float((gl_VertexID >> 8) & 255) / 255.0,\n            float(gl_VertexID & 255) / 255.0);\n          float angle = angleMin + angleIncrement * float(gl_VertexID);\n          vec4 pos = vec4(position * cos(angle), position * sin(angle), 0, 1.0);\n          gl_Position = projectionMatrix * modelViewMatrix * pos;\n          gl_PointSize = pixelRatio * max(pointSize, ${minPointSize});\n        }\n      `,\n      fragmentShader: /* glsl */ `\\\n        #version 300 es\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n          precision highp float;\n        #else\n          precision mediump float;\n        #endif\n        uniform bool isCircle;\n        varying vec4 objectId;\n        out vec4 outColor;\n\n        void main() {\n          if (isCircle) {\n            vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n            if (dot(cxy, cxy) > 1.0) { discard; }\n          }\n          outColor = objectId;\n        }\n      `,\n    });\n    this.uniforms = {\n      isCircle: { value: false },\n      pointSize: { value: 1 },\n      pixelRatio: { value: 1 },\n      angleMin: { value: NaN },\n      angleIncrement: { value: NaN },\n      rangeMin: { value: NaN },\n      rangeMax: { value: NaN },\n    };\n  }\n\n  public update(settings: LayerSettingsLaserScan, laserScan: RosLaserScan): void {\n    this.uniforms.isCircle!.value = settings.pointShape === \"circle\";\n    this.uniforms.pointSize!.value = settings.pointSize;\n    this.uniforms.angleMin!.value = laserScan.angle_min;\n    this.uniforms.angleIncrement!.value = laserScan.angle_increment;\n    this.uniforms.rangeMin!.value = laserScan.range_min;\n    this.uniforms.rangeMax!.value = laserScan.range_max;\n    this.uniformsNeedUpdate = true;\n  }\n}\n\nfunction invalidLaserScanError(\n  renderer: Renderer,\n  renderable: LaserScanRenderable,\n  message: string,\n): void {\n  renderer.settings.errors.addToTopic(renderable.userData.topic, INVALID_LASERSCAN, message);\n  renderable.invalidateLastEntry();\n}\n\nfunction normalizeFoxgloveLaserScan(\n  message: PartialMessage<FoxgloveLaserScan>,\n): NormalizedLaserScan {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    pose: normalizePose(message.pose),\n    start_angle: message.start_angle ?? 0,\n    end_angle: message.end_angle ?? 0,\n    range_min: -Infinity,\n    range_max: Infinity,\n    ranges: normalizeFloat32Array(message.ranges),\n    intensities: normalizeFloat32Array(message.intensities),\n  };\n}\n\nfunction normalizeRosLaserScan(message: PartialMessage<RosLaserScan>): NormalizedLaserScan {\n  return {\n    timestamp: normalizeTime(message.header?.stamp),\n    frame_id: message.header?.frame_id ?? \"\",\n    pose: emptyPose(),\n    start_angle: message.angle_min ?? 0,\n    end_angle: message.angle_max ?? 0,\n    range_min: message.range_min ?? -Infinity,\n    range_max: message.range_max ?? Infinity,\n    ranges: normalizeFloat32Array(message.ranges),\n    intensities: normalizeFloat32Array(message.intensities),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { LayerSettingsMarker } from \"./Markers\";\nimport { RenderableMarker, getMarkerId } from \"./markers/RenderableMarker\";\nimport { RenderableMeshResource } from \"./markers/RenderableMeshResource\";\nimport { missingTransformMessage, MISSING_TRANSFORM } from \"./transforms\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { Marker, MarkerAction, MarkerType } from \"../ros\";\nimport { BaseSettings } from \"../settings\";\nimport { updatePose } from \"../updatePose\";\n\nexport type LayerSettingsMarkerNamespace = BaseSettings;\n\nconst INVALID_CUBE_LIST = \"INVALID_CUBE_LIST\";\nconst INVALID_LINE_LIST = \"INVALID_LINE_LIST\";\nconst INVALID_LINE_STRIP = \"INVALID_LINE_STRIP\";\nconst INVALID_MARKER_ACTION = \"INVALID_MARKER_ACTION\";\nconst INVALID_MARKER_TYPE = \"INVALID_MARKER_TYPE\";\nconst INVALID_POINTS_LIST = \"INVALID_POINTS_LIST\";\nconst INVALID_SPHERE_LIST = \"INVALID_SPHERE_LIST\";\n\nconst DEFAULT_NAMESPACE_SETTINGS: LayerSettingsMarkerNamespace = {\n  visible: true,\n};\n\nexport type MarkerTopicUserData = BaseUserData & {\n  topic: string;\n  settings: LayerSettingsMarker;\n};\n\ntype PartialMarkerSettings = Partial<LayerSettingsMarker> | undefined;\n\nexport class MarkersNamespace {\n  public namespace: string;\n  public markersById = new Map<number, RenderableMarker>();\n  public settings: LayerSettingsMarkerNamespace;\n\n  public constructor(topic: string, namespace: string, renderer: Renderer) {\n    this.namespace = namespace;\n\n    // Set the initial settings from default values merged with any user settings\n    const topicSettings = renderer.config.topics[topic] as PartialMarkerSettings;\n    const userSettings = topicSettings?.namespaces?.[namespace];\n    this.settings = { ...DEFAULT_NAMESPACE_SETTINGS, ...userSettings };\n  }\n}\n\nexport class TopicMarkers extends Renderable<MarkerTopicUserData> {\n  public override pickable = false;\n  public namespaces = new Map<string, MarkersNamespace>();\n\n  public override dispose(): void {\n    for (const ns of this.namespaces.values()) {\n      for (const marker of ns.markersById.values()) {\n        this.renderer.markerPool.release(marker);\n      }\n    }\n    this.children.length = 0;\n    this.namespaces.clear();\n  }\n\n  public addMarkerMessage(marker: Marker, receiveTime: bigint): void {\n    switch (marker.action) {\n      case MarkerAction.ADD:\n      case MarkerAction.MODIFY:\n        this._addOrUpdateMarker(marker, receiveTime);\n        break;\n      case MarkerAction.DELETE:\n        this._deleteMarker(marker.ns, marker.id);\n        break;\n      case MarkerAction.DELETEALL: {\n        this._deleteAllMarkers(marker.ns);\n        break;\n      }\n      default:\n        // Unknown action\n        this.renderer.settings.errors.addToTopic(\n          this.topic,\n          INVALID_MARKER_ACTION,\n          `Invalid marker action ${marker.action}`,\n        );\n    }\n  }\n\n  public update(): void {\n    // Updates each individual marker renderable using `originalMarker` and the\n    // current topic settings\n    for (const ns of this.namespaces.values()) {\n      for (const renderable of ns.markersById.values()) {\n        renderable.update(renderable.userData.originalMarker, renderable.userData.receiveTime);\n      }\n    }\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    this.visible = this.userData.settings.visible;\n    if (!this.visible) {\n      this.renderer.settings.errors.clearTopic(this.topic);\n      return;\n    }\n\n    for (const ns of this.namespaces.values()) {\n      for (const renderable of ns.markersById.values()) {\n        renderable.visible = ns.settings.visible;\n        if (!renderable.visible) {\n          continue;\n        }\n\n        const marker = renderable.userData.marker;\n        const receiveTime = renderable.userData.receiveTime;\n        const expiresIn = renderable.userData.expiresIn;\n\n        // Check if this marker has expired\n        if (expiresIn != undefined) {\n          if (currentTime > receiveTime + expiresIn) {\n            this._deleteMarker(ns.namespace, marker.id);\n            continue;\n          }\n        }\n\n        const frameId = this.renderer.normalizeFrameId(marker.header.frame_id);\n        const srcTime = marker.frame_locked ? currentTime : renderable.userData.messageTime;\n        const updated = updatePose(\n          renderable,\n          this.renderer.transformTree,\n          renderFrameId,\n          fixedFrameId,\n          frameId,\n          currentTime,\n          srcTime,\n        );\n        renderable.visible = updated;\n        const topic = renderable.userData.topic;\n        if (!updated) {\n          const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n          this.renderer.settings.errors.addToTopic(topic, MISSING_TRANSFORM, message);\n        } else {\n          this.renderer.settings.errors.removeFromTopic(topic, MISSING_TRANSFORM);\n        }\n      }\n    }\n  }\n\n  private _addOrUpdateMarker(marker: Marker, receiveTime: bigint): void {\n    let ns = this.namespaces.get(marker.ns);\n    if (!ns) {\n      ns = new MarkersNamespace(this.topic, marker.ns, this.renderer);\n      this.namespaces.set(marker.ns, ns);\n    }\n\n    let renderable = ns.markersById.get(marker.id);\n\n    // Check if the marker with this id changed type\n    if (renderable && renderable.userData.marker.type !== marker.type) {\n      this._deleteMarker(marker.ns, marker.id);\n      renderable = undefined;\n    }\n\n    if (!renderable) {\n      renderable = this._createMarkerRenderable(marker, receiveTime);\n      if (!renderable) {\n        return;\n      }\n      this.add(renderable);\n      ns.markersById.set(marker.id, renderable);\n    }\n\n    renderable.update(marker, receiveTime);\n  }\n\n  private _deleteMarker(ns: string, id: number): boolean {\n    const namespace = this.namespaces.get(ns);\n    if (namespace) {\n      const renderable = namespace.markersById.get(id);\n      if (renderable) {\n        this.remove(renderable);\n        this.renderer.markerPool.release(renderable);\n        namespace.markersById.delete(id);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _deleteAllMarkers(ns: string): void {\n    const clearNamespace = (namespace: MarkersNamespace): void => {\n      for (const renderable of namespace.markersById.values()) {\n        this.remove(renderable);\n        this.renderer.markerPool.release(renderable);\n      }\n      namespace.markersById.clear();\n    };\n\n    if (ns.length === 0) {\n      // Delete all markers on this topic\n      for (const namespace of this.namespaces.values()) {\n        clearNamespace(namespace);\n      }\n    } else {\n      // Delete all markers on the given namespace\n      const namespace = this.namespaces.get(ns);\n      if (namespace) {\n        clearNamespace(namespace);\n      }\n    }\n  }\n\n  private _createMarkerRenderable(\n    marker: Marker,\n    receiveTime: bigint,\n  ): RenderableMarker | undefined {\n    const pool = this.renderer.markerPool;\n    switch (marker.type) {\n      case MarkerType.ARROW:\n        return pool.acquire(MarkerType.ARROW, this.topic, marker, receiveTime);\n      case MarkerType.CUBE:\n        return pool.acquire(MarkerType.CUBE, this.topic, marker, receiveTime);\n      case MarkerType.SPHERE:\n        return pool.acquire(MarkerType.SPHERE, this.topic, marker, receiveTime);\n      case MarkerType.CYLINDER:\n        return pool.acquire(MarkerType.CYLINDER, this.topic, marker, receiveTime);\n      case MarkerType.LINE_STRIP:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_STRIP,\n            `LINE_STRIP marker ${markerId} has no points`,\n          );\n          return undefined;\n        } else if (marker.points.length === 1) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_STRIP,\n            `LINE_STRIP marker ${markerId} only has one point`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.LINE_STRIP, this.topic, marker, receiveTime);\n      case MarkerType.LINE_LIST:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_LIST,\n            `LINE_LIST marker ${markerId} has no points`,\n          );\n          return undefined;\n        } else if (marker.points.length === 1) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_LIST,\n            `LINE_LIST marker ${markerId} only has one point`,\n          );\n          return undefined;\n        } else if (marker.points.length % 2 !== 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_LIST,\n            `LINE_LIST marker ${markerId} has an odd number of points (${marker.points.length})`,\n          );\n          if (marker.points.length === 1) {\n            return undefined;\n          }\n        }\n        return pool.acquire(MarkerType.LINE_LIST, this.topic, marker, receiveTime);\n      case MarkerType.CUBE_LIST:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_CUBE_LIST,\n            `CUBE_LIST marker ${markerId} has no points`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.CUBE_LIST, this.topic, marker, receiveTime);\n      case MarkerType.SPHERE_LIST:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_SPHERE_LIST,\n            `SPHERE_LIST marker ${markerId} has no points`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.SPHERE_LIST, this.topic, marker, receiveTime);\n      case MarkerType.POINTS:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_POINTS_LIST,\n            `POINTS marker ${markerId} has no points`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.POINTS, this.topic, marker, receiveTime);\n      case MarkerType.TEXT_VIEW_FACING:\n        return pool.acquire(MarkerType.TEXT_VIEW_FACING, this.topic, marker, receiveTime);\n      case MarkerType.MESH_RESOURCE: {\n        const renderable = pool.acquire(MarkerType.MESH_RESOURCE, this.topic, marker, receiveTime);\n        // Force reload the mesh\n        (renderable as RenderableMeshResource).update(marker, receiveTime, true);\n        return renderable;\n      }\n      case MarkerType.TRIANGLE_LIST:\n        return pool.acquire(MarkerType.TRIANGLE_LIST, this.topic, marker, receiveTime);\n      default: {\n        const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n        this.renderer.settings.errors.addToTopic(\n          this.topic,\n          INVALID_MARKER_TYPE,\n          `Marker ${markerId} has invalid type ${marker.type}`,\n        );\n        return undefined;\n      }\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { set } from \"lodash\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { LayerSettingsMarkerNamespace, TopicMarkers } from \"./TopicMarkers\";\nimport { SELECTED_ID_VARIABLE } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport {\n  normalizeColorRGBA,\n  normalizeColorRGBAs,\n  normalizeHeader,\n  normalizePose,\n  normalizeTime,\n  normalizeVector3,\n  normalizeVector3s,\n} from \"../normalizeMessages\";\nimport { Marker, MarkerArray, MARKER_ARRAY_DATATYPES, MARKER_DATATYPES } from \"../ros\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nexport type LayerSettingsMarker = BaseSettings & {\n  color: string | undefined;\n  showOutlines: boolean | undefined;\n  selectedIdVariable: string | undefined;\n  namespaces: Record<string, LayerSettingsMarkerNamespace>;\n};\n\nconst DEFAULT_SETTINGS: LayerSettingsMarker = {\n  visible: false,\n  showOutlines: true,\n  color: undefined,\n  selectedIdVariable: undefined,\n  namespaces: {},\n};\n\nexport class Markers extends SceneExtension<TopicMarkers> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Markers\", renderer);\n\n    renderer.addSchemaSubscriptions(MARKER_ARRAY_DATATYPES, this.handleMarkerArray);\n    renderer.addSchemaSubscriptions(MARKER_DATATYPES, this.handleMarker);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, MARKER_ARRAY_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, MARKER_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsMarker>;\n\n      const node: SettingsTreeNodeWithActionHandler = {\n        label: topic.name,\n        icon: \"Shapes\",\n        order: topic.name.toLocaleLowerCase(),\n        fields: {\n          color: { label: \"Color\", input: \"rgba\", value: config.color },\n          showOutlines: { label: \"Show outline\", input: \"boolean\", value: config.showOutlines },\n          selectedIdVariable: {\n            label: \"Selection Variable\",\n            input: \"string\",\n            help: \"When selecting a marker, this global variable will be set to the marker ID\",\n            value: config.selectedIdVariable,\n            placeholder: SELECTED_ID_VARIABLE,\n          },\n        },\n        visible: config.visible ?? DEFAULT_SETTINGS.visible,\n        handler: this.handleSettingsAction,\n      };\n\n      // Create a list of all the namespaces for this topic\n      const topicMarkers = this.renderables.get(topic.name);\n      const namespaces = Array.from(topicMarkers?.namespaces.values() ?? []).sort((a, b) =>\n        a.namespace.localeCompare(b.namespace),\n      );\n      if (namespaces.length > 1 || (namespaces.length === 1 && namespaces[0]!.namespace !== \"\")) {\n        node.children = {};\n        for (const ns of namespaces) {\n          const child: SettingsTreeNodeWithActionHandler = {\n            label: ns.namespace !== \"\" ? ns.namespace : `\"\"`,\n            icon: \"Shapes\",\n            visible: ns.settings.visible,\n            defaultExpansionState: namespaces.length > 1 ? \"collapsed\" : \"expanded\",\n            handler: this.handleSettingsActionNamespace,\n          };\n          node.children[`ns:${ns.namespace}`] = child;\n        }\n      }\n\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Don't use SceneExtension#startFrame() because our renderables represent one topic each with\n    // many markers. Instead, call startFrame on each renderable\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the TopicMarkers settings\n    const topicName = path[1]!;\n    const topicMarkers = this.renderables.get(topicName);\n    if (topicMarkers) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsMarker>\n        | undefined;\n      topicMarkers.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n      topicMarkers.update();\n    }\n  };\n\n  private handleSettingsActionNamespace = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 4) {\n      return;\n    }\n\n    const topicName = path[1]!;\n    const namespaceKey = path[2]!;\n    const fieldName = path[3]!;\n    const namespace = namespaceKey.slice(3); // remove `ns:` prefix\n\n    this.renderer.updateConfig((draft) => {\n      // We build the settings tree with paths of the form\n      //   [\"topics\", <topic>, \"ns:\"<namespace>, \"visible\"]\n      // but the config is stored with paths of the form\n      //   [\"topics\", <topic>, \"namespaces\", <namespace>, \"visible\"]\n      const actualPath = [\"topics\", topicName, \"namespaces\", namespace, fieldName];\n      set(draft, actualPath, action.payload.value);\n    });\n\n    // Update the MarkersNamespace settings\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsMarker>\n        | undefined;\n      const ns = renderable.namespaces.get(namespace);\n      if (ns) {\n        const nsSettings = settings?.namespaces?.[namespace] as\n          | Partial<LayerSettingsMarkerNamespace>\n          | undefined;\n        ns.settings = { ...ns.settings, ...nsSettings };\n      }\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  private handleMarkerArray = (messageEvent: PartialMessageEvent<MarkerArray>): void => {\n    const topic = messageEvent.topic;\n    const markerArray = messageEvent.message;\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    for (const markerMsg of markerArray.markers ?? []) {\n      if (markerMsg) {\n        const marker = normalizeMarker(markerMsg);\n        this.addMarker(topic, marker, receiveTime);\n      }\n    }\n  };\n\n  private handleMarker = (messageEvent: PartialMessageEvent<Marker>): void => {\n    const topic = messageEvent.topic;\n    const marker = normalizeMarker(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    this.addMarker(topic, marker, receiveTime);\n  };\n\n  private addMarker(topic: string, marker: Marker, receiveTime: bigint): void {\n    const topicMarkers = this._getTopicMarkers(topic, marker, receiveTime);\n    const prevNsCount = topicMarkers.namespaces.size;\n    topicMarkers.addMarkerMessage(marker, receiveTime);\n\n    // If the topic has a new namespace, rebuild the settings node for this topic\n    if (prevNsCount !== topicMarkers.namespaces.size) {\n      this.updateSettingsTree();\n    }\n  }\n\n  public addMarkerArray(topic: string, markerArray: Marker[], receiveTime: bigint): void {\n    const firstMarker = markerArray[0];\n    if (!firstMarker) {\n      return;\n    }\n\n    const topicMarkers = this._getTopicMarkers(topic, firstMarker, receiveTime);\n    const prevNsCount = topicMarkers.namespaces.size;\n    for (const marker of markerArray) {\n      topicMarkers.addMarkerMessage(marker, receiveTime);\n    }\n\n    // If the topic has a new namespace, rebuild the settings node for this topic\n    if (prevNsCount !== topicMarkers.namespaces.size) {\n      this.updateSettingsTree();\n    }\n  }\n\n  private _getTopicMarkers(topic: string, marker: Marker, receiveTime: bigint): TopicMarkers {\n    let topicMarkers = this.renderables.get(topic);\n    if (!topicMarkers) {\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsMarker>\n        | undefined;\n\n      topicMarkers = new TopicMarkers(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(marker.header.stamp),\n        frameId: this.renderer.normalizeFrameId(marker.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        topic,\n        settings: { ...DEFAULT_SETTINGS, ...userSettings },\n      });\n      this.renderables.set(topic, topicMarkers);\n      this.add(topicMarkers);\n    }\n    return topicMarkers;\n  }\n}\n\nfunction normalizeMarker(marker: PartialMessage<Marker>): Marker {\n  return {\n    header: normalizeHeader(marker.header),\n    ns: marker.ns ?? \"\",\n    id: marker.id ?? 0,\n    type: marker.type ?? 0,\n    action: marker.action ?? 0,\n    pose: normalizePose(marker.pose),\n    scale: normalizeVector3(marker.scale),\n    color: normalizeColorRGBA(marker.color),\n    lifetime: normalizeTime(marker.lifetime),\n    frame_locked: marker.frame_locked ?? false,\n    points: normalizeVector3s(marker.points),\n    colors: normalizeColorRGBAs(marker.colors),\n    text: marker.text ?? \"\",\n    mesh_resource: marker.mesh_resource ?? \"\",\n    mesh_use_embedded_materials: marker.mesh_use_embedded_materials ?? false,\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport * as THREE from \"three\";\n\nimport { Label } from \"@foxglove/three-text\";\n\nimport { Renderable, BaseUserData } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\n\ntype MeasurementState = \"idle\" | \"place-first-point\" | \"place-second-point\";\n\n/** A renderOrder value that should result in rendering after most/all other objects in the scene */\nconst LATE_RENDER_ORDER = 9999999;\n\n/**\n * A material that interprets the input mesh coordinates in pixel space, regardless of the camera\n * perspective/zoom level.\n */\nclass FixedSizeMeshMaterial extends THREE.ShaderMaterial {\n  public constructor({\n    color,\n    ...params\n  }: { color: THREE.ColorRepresentation } & THREE.MaterialParameters) {\n    super({\n      ...params,\n      vertexShader: /* glsl */ `\n        #include <common>\n        uniform vec2 canvasSize;\n        void main() {\n          vec4 mvPosition = modelViewMatrix * vec4(0., 0., 0., 1.);\n\n          // Adapted from THREE.ShaderLib.sprite\n          vec2 scale;\n          scale.x = length(vec3(modelMatrix[0].xyz));\n          scale.y = length(vec3(modelMatrix[1].xyz));\n\n          gl_Position = projectionMatrix * mvPosition;\n\n          // Add position after projection to maintain constant pixel size\n          gl_Position.xy += position.xy / canvasSize * scale * gl_Position.w;\n        }\n      `,\n      fragmentShader: /* glsl */ `\n        uniform vec3 color;\n        void main() {\n          gl_FragColor = vec4(color, 1.0);\n        }\n      `,\n      uniforms: {\n        canvasSize: { value: [0, 0] },\n        color: { value: new THREE.Color(color).convertSRGBToLinear() },\n      },\n    });\n  }\n}\n\ntype MeasurementEvent = { type: \"foxglove.measure-start\" } | { type: \"foxglove.measure-end\" };\n\nexport class MeasurementTool extends SceneExtension<Renderable<BaseUserData>, MeasurementEvent> {\n  private circleGeometry = new THREE.CircleGeometry(5, 16);\n  private circleMaterial = new FixedSizeMeshMaterial({\n    color: 0xff0000,\n    depthTest: false,\n    depthWrite: false,\n  });\n  private circle1 = new THREE.Mesh(this.circleGeometry, this.circleMaterial);\n  private circle2 = new THREE.Mesh(this.circleGeometry, this.circleMaterial);\n\n  private linePositionAttribute = new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 0], 3);\n  private line = new THREE.Line(\n    new THREE.BufferGeometry(),\n    new THREE.LineBasicMaterial({ color: 0xff0000 }),\n  );\n  /**\n   * A dashed copy of the line drawn with inverse depth test so the line can still be visible when\n   * it's occluded\n   */\n  private lineOccluded = new THREE.Line(\n    new THREE.BufferGeometry(),\n    new THREE.LineDashedMaterial({\n      color: 0xff0000,\n      dashSize: 1,\n      gapSize: 1,\n      depthWrite: false,\n      depthFunc: THREE.GreaterDepth, // opposite of default THREE.LessEqualDepth\n    }),\n  );\n\n  private label: Label;\n\n  private point1NeedsUpdate = false;\n  private point2NeedsUpdate = false;\n\n  private point1?: THREE.Vector3;\n  private point2?: THREE.Vector3;\n\n  public state: MeasurementState = \"idle\";\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.MeasurementTool\", renderer);\n\n    this.line.userData.picking = false;\n    this.lineOccluded.userData.picking = false;\n    this.circle1.userData.picking = false;\n    this.circle2.userData.picking = false;\n\n    this.label = renderer.labelPool.acquire();\n    this.label.visible = false;\n    this.label.setBillboard(true);\n    this.label.setSizeAttenuation(false);\n    this.label.setLineHeight(12);\n    this.label.setColor(1, 0, 0);\n\n    // Make the label appear on top of other objects in the scene so it doesn't get clipped/occluded\n    this.label.renderOrder = LATE_RENDER_ORDER;\n    this.label.material.depthTest = false;\n    this.label.material.depthWrite = false;\n    this.label.material.transparent = true;\n\n    this.lineOccluded.renderOrder = LATE_RENDER_ORDER;\n    this.circle1.renderOrder = LATE_RENDER_ORDER;\n    this.circle2.renderOrder = LATE_RENDER_ORDER;\n\n    this.line.frustumCulled = false;\n    this.lineOccluded.frustumCulled = false;\n    this.line.geometry.setAttribute(\"position\", this.linePositionAttribute);\n    this.lineOccluded.geometry.setAttribute(\"position\", this.linePositionAttribute);\n    this.circle1.visible = false;\n    this.circle2.visible = false;\n    this.add(this.circle1);\n    this.add(this.circle2);\n    this.add(this.line);\n    this.add(this.lineOccluded);\n    this.add(this.label);\n    this._setState(\"idle\");\n  }\n\n  public override dispose(): void {\n    super.dispose();\n    this.renderer.labelPool.release(this.label);\n    this.circleGeometry.dispose();\n    this.circleMaterial.dispose();\n    this.line.geometry.dispose();\n    this.line.material.dispose();\n    this.lineOccluded.geometry.dispose();\n    this.lineOccluded.material.dispose();\n    this.renderer.input.removeListener(\"click\", this._handleClick);\n    this.renderer.input.removeListener(\"mousemove\", this._handleMouseMove);\n  }\n\n  public startMeasuring(): void {\n    this._setState(\"place-first-point\");\n  }\n\n  public stopMeasuring(): void {\n    this.point1 = this.point2 = undefined;\n    this._setState(\"idle\");\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    super.startFrame(currentTime, renderFrameId, fixedFrameId);\n    this.circleMaterial.uniforms.canvasSize!.value[0] = this.renderer.input.canvasSize.x;\n    this.circleMaterial.uniforms.canvasSize!.value[1] = this.renderer.input.canvasSize.y;\n  }\n\n  private _setState(state: MeasurementState): void {\n    this.state = state;\n    switch (state) {\n      case \"idle\":\n        this.renderer.input.removeListener(\"click\", this._handleClick);\n        this.renderer.input.removeListener(\"mousemove\", this._handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.measure-end\" });\n        break;\n      case \"place-first-point\":\n        this.point1 = this.point2 = undefined;\n        this.renderer.input.addListener(\"click\", this._handleClick);\n        this.renderer.input.addListener(\"mousemove\", this._handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.measure-start\" });\n        break;\n      case \"place-second-point\":\n        break;\n    }\n    this._updateDistance();\n    this._render();\n  }\n\n  private _handleMouseMove = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        (this.point1 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        this.point1NeedsUpdate = true;\n        break;\n      case \"place-second-point\":\n        (this.point2 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        this.point2NeedsUpdate = true;\n        this._updateDistance();\n        break;\n    }\n    this._render();\n  };\n\n  private _updateDistance() {\n    if (this.point1 && this.point2) {\n      this.label.setText(this.point1.distanceTo(this.point2).toFixed(2));\n    }\n  }\n\n  private _handleClick = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        this.point1 = worldSpaceCursorCoords.clone();\n        this.point1NeedsUpdate = true;\n        this._setState(\"place-second-point\");\n        break;\n      case \"place-second-point\":\n        this.point2 = worldSpaceCursorCoords.clone();\n        this.point2NeedsUpdate = true;\n        this._setState(\"idle\");\n        break;\n    }\n    this._render();\n  };\n\n  private _render() {\n    if (this.point1) {\n      this.circle1.visible = true;\n      this.circle1.position.copy(this.point1);\n\n      if (this.point1NeedsUpdate) {\n        this.linePositionAttribute.setXYZ(0, this.point1.x, this.point1.y, this.point1.z);\n        this.linePositionAttribute.needsUpdate = true;\n        this.lineOccluded.computeLineDistances();\n        this.point1NeedsUpdate = false;\n      }\n    } else {\n      this.circle1.visible = false;\n    }\n\n    if (this.point2) {\n      this.circle2.visible = true;\n      this.circle2.position.copy(this.point2);\n\n      if (this.point2NeedsUpdate) {\n        this.linePositionAttribute.setXYZ(1, this.point2.x, this.point2.y, this.point2.z);\n        this.linePositionAttribute.needsUpdate = true;\n        this.lineOccluded.computeLineDistances();\n        this.point2NeedsUpdate = false;\n      }\n    } else {\n      this.circle2.visible = false;\n    }\n\n    if (this.point1 && this.point2) {\n      this.line.visible = true;\n      this.lineOccluded.visible = true;\n      this.label.visible = true;\n      this.label.position.copy(this.point1).lerp(this.point2, 0.5);\n    } else {\n      this.line.visible = false;\n      this.lineOccluded.visible = false;\n      this.label.visible = false;\n    }\n\n    this.renderer.queueAnimationFrame();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { rgbaToCssString, SRGBToLinear, stringToRgba } from \"../color\";\nimport {\n  normalizeHeader,\n  normalizePose,\n  normalizeInt8Array,\n  normalizeTime,\n} from \"../normalizeMessages\";\nimport { ColorRGBA, OccupancyGrid, OCCUPANCY_GRID_DATATYPES } from \"../ros\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\n\ntype ColorModes = \"custom\" | \"costmap\" | \"map\" | \"raw\";\n\nexport type LayerSettingsOccupancyGrid = BaseSettings & {\n  frameLocked: boolean;\n  minColor: string;\n  maxColor: string;\n  unknownColor: string;\n  invalidColor: string;\n  colorMode: ColorModes;\n  alpha: number;\n};\n\nconst INVALID_OCCUPANCY_GRID = \"INVALID_OCCUPANCY_GRID\";\n\nconst DEFAULT_MIN_COLOR = { r: 1, g: 1, b: 1, a: 1 }; // white\nconst DEFAULT_MAX_COLOR = { r: 0, g: 0, b: 0, a: 1 }; // black\nconst DEFAULT_UNKNOWN_COLOR = { r: 0.5, g: 0.5, b: 0.5, a: 1 }; // gray\nconst DEFAULT_INVALID_COLOR = { r: 1, g: 0, b: 1, a: 1 }; // magenta\nconst DEFAULT_ALPHA = 1.0;\n\nconst DEFAULT_MIN_COLOR_STR = rgbaToCssString(DEFAULT_MIN_COLOR);\nconst DEFAULT_MAX_COLOR_STR = rgbaToCssString(DEFAULT_MAX_COLOR);\nconst DEFAULT_UNKNOWN_COLOR_STR = rgbaToCssString(DEFAULT_UNKNOWN_COLOR);\nconst DEFAULT_INVALID_COLOR_STR = rgbaToCssString(DEFAULT_INVALID_COLOR);\n\nconst DEFAULT_SETTINGS: LayerSettingsOccupancyGrid = {\n  visible: false,\n  frameLocked: false,\n  colorMode: \"custom\",\n  minColor: DEFAULT_MIN_COLOR_STR,\n  maxColor: DEFAULT_MAX_COLOR_STR,\n  unknownColor: DEFAULT_UNKNOWN_COLOR_STR,\n  invalidColor: DEFAULT_INVALID_COLOR_STR,\n  alpha: DEFAULT_ALPHA,\n};\n\nexport type OccupancyGridUserData = BaseUserData & {\n  settings: LayerSettingsOccupancyGrid;\n  topic: string;\n  occupancyGrid: OccupancyGrid;\n  mesh: THREE.Mesh;\n  texture: THREE.DataTexture;\n  material: THREE.MeshBasicMaterial;\n  pickingMaterial: THREE.ShaderMaterial;\n};\n\nexport class OccupancyGridRenderable extends Renderable<OccupancyGridUserData> {\n  public override dispose(): void {\n    this.userData.texture.dispose();\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.occupancyGrid;\n  }\n}\n\nexport class OccupancyGrids extends SceneExtension<OccupancyGridRenderable> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.OccupancyGrids\", renderer);\n\n    renderer.addSchemaSubscriptions(OCCUPANCY_GRID_DATATYPES, this.handleOccupancyGrid);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, OCCUPANCY_GRID_DATATYPES)) {\n        continue;\n      }\n\n      const configWithDefaults = { ...DEFAULT_SETTINGS, ...configTopics[topic.name] };\n\n      let fields: SettingsTreeFields = {\n        colorMode: {\n          label: \"Color mode\",\n          input: \"select\",\n          value: configWithDefaults.colorMode,\n          options: [\n            { label: \"Custom\", value: \"custom\" },\n            { label: \"Map\", value: \"map\" },\n            { label: \"Costmap\", value: \"costmap\" },\n            { label: \"Raw\", value: \"raw\" },\n          ],\n        },\n      };\n\n      if (configWithDefaults.colorMode === \"custom\") {\n        // prettier-ignore\n        const customFields: SettingsTreeFields = {\n          minColor: { label: \"Min color\", input: \"rgba\", value: configWithDefaults.minColor },\n          maxColor: { label: \"Max color\", input: \"rgba\", value: configWithDefaults.maxColor },\n          unknownColor: { label: \"Unknown color\", input: \"rgba\", value: configWithDefaults.unknownColor },\n          invalidColor: { label: \"Invalid color\", input: \"rgba\", value: configWithDefaults.invalidColor }\n        };\n        fields = {\n          ...fields,\n          ...customFields,\n        };\n      } else {\n        const paletteFields: SettingsTreeFields = {\n          alpha: {\n            label: \"Alpha\",\n            input: \"number\",\n            value: configWithDefaults.alpha,\n            min: 0.0,\n            max: 1.0,\n            step: 0.1,\n            placeholder: \"auto\",\n          },\n        };\n        fields = {\n          ...fields,\n          ...paletteFields,\n        };\n      }\n\n      fields.frameLocked = {\n        label: \"Frame lock\",\n        input: \"boolean\",\n        value: configWithDefaults.frameLocked,\n      };\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: \"Cells\",\n          fields,\n          visible: configWithDefaults.visible,\n          order: topic.name.toLocaleLowerCase(),\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevTransparent = occupancyGridHasTransparency(renderable.userData.settings);\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsOccupancyGrid>\n        | undefined;\n      renderable.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n\n      // Check if the transparency changed and we need to create a new material\n      const newTransparent = occupancyGridHasTransparency(renderable.userData.settings);\n      if (prevTransparent !== newTransparent) {\n        renderable.userData.material.transparent = newTransparent;\n        renderable.userData.material.depthWrite = !newTransparent;\n        renderable.userData.material.needsUpdate = true;\n      }\n\n      this._updateOccupancyGridRenderable(\n        renderable,\n        renderable.userData.occupancyGrid,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  private handleOccupancyGrid = (messageEvent: PartialMessageEvent<OccupancyGrid>): void => {\n    const topic = messageEvent.topic;\n    const occupancyGrid = normalizeOccupancyGrid(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsOccupancyGrid>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      const texture = createTexture(occupancyGrid);\n      const geometry = this.renderer.sharedGeometry.getGeometry(\n        this.constructor.name,\n        createGeometry,\n      );\n      const mesh = createMesh(topic, geometry, texture, settings);\n      const material = mesh.material as THREE.MeshBasicMaterial;\n      const pickingMaterial = mesh.userData.pickingMaterial as THREE.ShaderMaterial;\n\n      // Create the renderable\n      renderable = new OccupancyGridRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(occupancyGrid.header.stamp),\n        frameId: this.renderer.normalizeFrameId(occupancyGrid.header.frame_id),\n        pose: occupancyGrid.info.origin,\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        occupancyGrid,\n        mesh,\n        texture,\n        material,\n        pickingMaterial,\n      });\n      renderable.add(mesh);\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this._updateOccupancyGridRenderable(renderable, occupancyGrid, receiveTime);\n  };\n\n  private _updateOccupancyGridRenderable(\n    renderable: OccupancyGridRenderable,\n    occupancyGrid: OccupancyGrid,\n    receiveTime: bigint,\n  ): void {\n    renderable.userData.occupancyGrid = occupancyGrid;\n    renderable.userData.pose = occupancyGrid.info.origin;\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(occupancyGrid.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(occupancyGrid.header.frame_id);\n\n    const size = occupancyGrid.info.width * occupancyGrid.info.height;\n    if (occupancyGrid.data.length !== size) {\n      const message = `OccupancyGrid data length (${occupancyGrid.data.length}) is not equal to width ${occupancyGrid.info.width} * height ${occupancyGrid.info.height}`;\n      invalidOccupancyGridError(this.renderer, renderable, message);\n      return;\n    }\n\n    let texture = renderable.userData.texture;\n    const width = occupancyGrid.info.width;\n    const height = occupancyGrid.info.height;\n    const resolution = occupancyGrid.info.resolution;\n\n    if (width !== texture.image.width || height !== texture.image.height) {\n      // The image dimensions changed, regenerate the texture\n      texture.dispose();\n      texture = createTexture(occupancyGrid);\n      renderable.userData.texture = texture;\n      renderable.userData.material.map = texture;\n    }\n\n    // Update the occupancy grid texture\n    updateTexture(texture, occupancyGrid, renderable.userData.settings);\n\n    renderable.scale.set(resolution * width, resolution * height, 1);\n  }\n}\nfunction createGeometry(): THREE.PlaneGeometry {\n  const geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n  geometry.translate(0.5, 0.5, 0);\n  geometry.computeBoundingSphere();\n  return geometry;\n}\nfunction invalidOccupancyGridError(\n  renderer: Renderer,\n  renderable: OccupancyGridRenderable,\n  message: string,\n): void {\n  renderer.settings.errors.addToTopic(renderable.userData.topic, INVALID_OCCUPANCY_GRID, message);\n}\n\nfunction createTexture(occupancyGrid: OccupancyGrid): THREE.DataTexture {\n  const width = occupancyGrid.info.width;\n  const height = occupancyGrid.info.height;\n  const size = width * height;\n  const rgba = new Uint8ClampedArray(size * 4);\n  const texture = new THREE.DataTexture(\n    rgba,\n    width,\n    height,\n    THREE.RGBAFormat,\n    THREE.UnsignedByteType,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    1,\n    THREE.LinearEncoding, // OccupancyGrid carries linear grayscale values, not sRGB\n  );\n  texture.generateMipmaps = false;\n  return texture;\n}\n\nfunction createMesh(\n  topic: string,\n  geometry: THREE.PlaneGeometry,\n  texture: THREE.DataTexture,\n  settings: LayerSettingsOccupancyGrid,\n): THREE.Mesh {\n  // Create the texture, material, and mesh\n  const pickingMaterial = createPickingMaterial(texture);\n  const material = createMaterial(texture, topic, settings);\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.castShadow = true;\n  mesh.receiveShadow = true;\n  // This overrides the picking material used for `mesh`. See Picker.ts\n  mesh.userData.pickingMaterial = pickingMaterial;\n  return mesh;\n}\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempUnknownColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempInvalidColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempMinColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempMaxColor = { r: 0, g: 0, b: 0, a: 0 };\n\nfunction updateTexture(\n  texture: THREE.DataTexture,\n  occupancyGrid: OccupancyGrid,\n  settings: LayerSettingsOccupancyGrid,\n): void {\n  const size = occupancyGrid.info.width * occupancyGrid.info.height;\n  const rgba = texture.image.data;\n  stringToRgba(tempMinColor, settings.minColor);\n  stringToRgba(tempMaxColor, settings.maxColor);\n  stringToRgba(tempUnknownColor, settings.unknownColor);\n  stringToRgba(tempInvalidColor, settings.invalidColor);\n\n  srgbToLinearUint8(tempMinColor);\n  srgbToLinearUint8(tempMaxColor);\n  srgbToLinearUint8(tempUnknownColor);\n  srgbToLinearUint8(tempInvalidColor);\n\n  const data = occupancyGrid.data;\n  for (let i = 0; i < size; i++) {\n    const value = data[i]! | 0;\n    const offset = i * 4;\n    if (settings.colorMode === \"custom\") {\n      if (value === -1) {\n        // Unknown (-1)\n        rgba[offset + 0] = tempUnknownColor.r;\n        rgba[offset + 1] = tempUnknownColor.g;\n        rgba[offset + 2] = tempUnknownColor.b;\n        rgba[offset + 3] = tempUnknownColor.a;\n      } else if (value >= 0 && value <= 100) {\n        // Valid [0-100]\n        const t = value / 100;\n\n        rgba[offset + 0] = tempMinColor.r + (tempMaxColor.r - tempMinColor.r) * t;\n        rgba[offset + 1] = tempMinColor.g + (tempMaxColor.g - tempMinColor.g) * t;\n        rgba[offset + 2] = tempMinColor.b + (tempMaxColor.b - tempMinColor.b) * t;\n        rgba[offset + 3] = tempMinColor.a + (tempMaxColor.a - tempMinColor.a) * t;\n      } else {\n        // Invalid (< -1 or > 100)\n        rgba[offset + 0] = tempInvalidColor.r;\n        rgba[offset + 1] = tempInvalidColor.g;\n        rgba[offset + 2] = tempInvalidColor.b;\n        rgba[offset + 3] = tempInvalidColor.a;\n      }\n    } else {\n      paletteColorCached(tempColor, value, settings.colorMode);\n      rgba[offset + 0] = tempColor.r;\n      rgba[offset + 1] = tempColor.g;\n      rgba[offset + 2] = tempColor.b;\n      rgba[offset + 3] = tempColor.a * settings.alpha;\n    }\n  }\n\n  texture.needsUpdate = true;\n}\n\nfunction createMaterial(\n  texture: THREE.DataTexture,\n  topic: string,\n  settings: LayerSettingsOccupancyGrid,\n): THREE.MeshBasicMaterial {\n  const transparent = occupancyGridHasTransparency(settings);\n  return new THREE.MeshBasicMaterial({\n    name: `${topic}:Material`,\n    // Enable alpha clipping. Fully transparent (alpha=0) pixels are skipped\n    // even when transparency is disabled\n    alphaTest: 1e-4,\n    depthWrite: !transparent,\n    map: texture,\n    side: THREE.DoubleSide,\n    transparent,\n  });\n}\n\nfunction createPickingMaterial(texture: THREE.DataTexture): THREE.ShaderMaterial {\n  return new THREE.ShaderMaterial({\n    vertexShader: /* glsl */ `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `,\n    fragmentShader: /* glsl */ `\n      uniform sampler2D map;\n      uniform vec4 objectId;\n      varying vec2 vUv;\n      void main() {\n        vec4 color = texture2D(map, vUv);\n        if (color.a == 0.0) {\n          discard;\n        }\n        gl_FragColor = objectId;\n      }\n    `,\n    side: THREE.DoubleSide,\n    uniforms: { map: { value: texture }, objectId: { value: [NaN, NaN, NaN, NaN] } },\n  });\n}\n\nfunction occupancyGridHasTransparency(settings: LayerSettingsOccupancyGrid): boolean {\n  if (settings.colorMode === \"custom\") {\n    stringToRgba(tempMinColor, settings.minColor);\n    stringToRgba(tempMaxColor, settings.maxColor);\n    stringToRgba(tempUnknownColor, settings.unknownColor);\n    stringToRgba(tempInvalidColor, settings.invalidColor);\n    return (\n      tempMinColor.a < 1 || tempMaxColor.a < 1 || tempInvalidColor.a < 1 || tempUnknownColor.a < 1\n    );\n  } else {\n    return true;\n  }\n}\n\nfunction srgbToLinearUint8(color: ColorRGBA): void {\n  color.r = Math.trunc(SRGBToLinear(color.r) * 255);\n  color.g = Math.trunc(SRGBToLinear(color.g) * 255);\n  color.b = Math.trunc(SRGBToLinear(color.b) * 255);\n  color.a = Math.trunc(color.a * 255);\n}\n\nfunction normalizeOccupancyGrid(message: PartialMessage<OccupancyGrid>): OccupancyGrid {\n  const info = message.info ?? {};\n\n  return {\n    header: normalizeHeader(message.header),\n    info: {\n      map_load_time: normalizeTime(info.map_load_time),\n      resolution: info.resolution ?? 0,\n      width: info.width ?? 0,\n      height: info.height ?? 0,\n      origin: normalizePose(info.origin),\n    },\n    data: normalizeInt8Array(message.data),\n  };\n}\n\nlet costmapPalette: [number, number, number, number][] | undefined;\nlet mapPalette: [number, number, number, number][] | undefined;\nlet rawPalette: [number, number, number, number][] | undefined;\n\nfunction paletteColorCached(output: ColorRGBA, value: number, color_mode: ColorModes) {\n  const unsignedValue = value >= 0 ? value : value + 256;\n  if (unsignedValue < 0 || unsignedValue > 255) {\n    output.r = 0;\n    output.g = 0;\n    output.b = 0;\n    output.a = 0;\n  }\n\n  let palette: [number, number, number, number][] | undefined;\n  if (color_mode === \"costmap\") {\n    if (!costmapPalette) {\n      costmapPalette = createCostmapPalette();\n    }\n    palette = costmapPalette;\n  } else if (color_mode === \"map\") {\n    if (!mapPalette) {\n      mapPalette = createMapPalette();\n    }\n    palette = mapPalette;\n  } else if (color_mode === \"raw\") {\n    if (!rawPalette) {\n      rawPalette = createRawPalette();\n    }\n    palette = rawPalette;\n  } else {\n    throw new Error(`Unsupported color mode ${color_mode}`);\n  }\n\n  const colorRaw = palette[Math.trunc(unsignedValue)]!;\n  output.r = colorRaw[0];\n  output.g = colorRaw[1];\n  output.b = colorRaw[2];\n  output.a = colorRaw[3];\n}\n\n// Based off of rviz map implementation\n// https://github.com/ros-visualization/rviz/blob/1f622b8c95b8e188841b5505db2f97394d3e9c6c/src/rviz/default_plugin/map_display.cpp#L284\nfunction createMapPalette() {\n  let index = 0;\n  const palette = new Array(256).fill([0, 0, 0, 0]);\n\n  // Standard gray map palette values\n  for (let i = 0; i <= 100; i++) {\n    const v = Math.trunc(255 - (255 * i) / 100);\n    palette[index++] = [v, v, v, 255];\n  }\n\n  // illegal positive values in green\n  for (let i = 101; i <= 127; i++) {\n    palette[index++] = [0, 255, 0, 255];\n  }\n\n  // illegal negative (char) values in shades of red/yellow\n  for (let i = 128; i <= 254; i++) {\n    palette[index++] = [255, Math.trunc((255 * (i - 128)) / (254 - 128)), 0, 255];\n  }\n\n  // legal -1 value is tasteful blueish greenish grayish color\n  palette[index++] = [112, 137, 134, 255];\n  return palette;\n}\n\n// Based off of rviz costmap implementation\n// https://github.com/ros-visualization/rviz/blob/1f622b8c95b8e188841b5505db2f97394d3e9c6c/src/rviz/default_plugin/map_display.cpp#L322\nfunction createCostmapPalette() {\n  let index = 0;\n  const palette = new Array(256).fill([0, 0, 0, 0]);\n  // zero values have alpha=0\n  palette[index++] = [0, 0, 0, 0];\n\n  // Blue to red spectrum for most normal cost values\n  for (let i = 1; i <= 98; i++) {\n    const v = Math.trunc((255 * i) / 100);\n    palette[index++] = [v, 0, 255 - v, 255];\n  }\n  // inscribed obstacle values (99) in cyan\n  palette[index++] = [0, 255, 255, 255];\n\n  // lethal obstacle values (100) in purple\n  palette[index++] = [255, 0, 255, 255];\n\n  // illegal positive values in green\n  for (let i = 101; i <= 127; i++) {\n    palette[index++] = [0, 255, 0, 255];\n  }\n\n  // illegal negative (char) values in shades of red/yellow\n  for (let i = 128; i <= 254; i++) {\n    palette[index++] = [255, Math.trunc((255 * (i - 128)) / (254 - 128)), 0, 255];\n  }\n\n  // legal -1 value is tasteful blueish greenish grayish color\n  palette[index++] = [112, 137, 134, 255];\n  return palette;\n}\n\n// Based off of rviz raw implementation\n// https://github.com/ros-visualization/rviz/blob/1f622b8c95b8e188841b5505db2f97394d3e9c6c/src/rviz/default_plugin/map_display.cpp#L377\nfunction createRawPalette() {\n  let index = 0;\n  const palette = new Array(256).fill([0, 0, 0, 0]);\n\n  // Standard gray map palette values\n  for (let i = 0; i < 256; i++) {\n    palette[index++] = [i, i, i, 255];\n  }\n\n  return palette;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { Time, toNanoSec } from \"@foxglove/rostime\";\nimport { NumericType, PackedElementField, PointCloud } from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\nimport { DynamicBufferGeometry } from \"@foxglove/studio-base/panels/ThreeDeeRender/DynamicBufferGeometry\";\nimport {\n  autoSelectColorField,\n  createGeometry,\n  createInstancePickingMaterial,\n  createPickingMaterial,\n  createPoints,\n  DEFAULT_POINT_SETTINGS,\n  LayerSettingsPointExtension,\n  pointSettingsNode,\n  pointCloudMaterial,\n  pointCloudColorEncoding,\n  POINT_CLOUD_REQUIRED_FIELDS,\n  RenderObjectHistory,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/pointExtensionUtils\";\nimport type { RosObject, RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { colorHasTransparency, getColorConverter } from \"./pointClouds/colors\";\nimport { FieldReader, getReader, isSupportedField } from \"./pointClouds/fieldReaders\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { POINTCLOUD_DATATYPES as FOXGLOVE_POINTCLOUD_DATATYPES } from \"../foxglove\";\nimport {\n  normalizeByteArray,\n  normalizeHeader,\n  normalizeTime,\n  normalizePose,\n  numericTypeToPointFieldType,\n} from \"../normalizeMessages\";\nimport {\n  PointCloud2,\n  POINTCLOUD_DATATYPES as ROS_POINTCLOUD_DATATYPES,\n  PointField,\n  PointFieldType,\n} from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose, Pose } from \"../transforms\";\n\ntype PointCloudFieldReaders = {\n  xReader: FieldReader;\n  yReader: FieldReader;\n  zReader: FieldReader;\n  packedColorReader: FieldReader;\n  redReader: FieldReader;\n  greenReader: FieldReader;\n  blueReader: FieldReader;\n  alphaReader: FieldReader;\n};\n\ntype LayerSettingsPointClouds = LayerSettingsPointExtension & {\n  stixelsEnabled: boolean;\n};\n\nconst DEFAULT_SETTINGS = { ...DEFAULT_POINT_SETTINGS, stixelsEnabled: false };\n\ntype PointCloudUserData = BaseUserData & {\n  settings: LayerSettingsPointClouds;\n  topic: string;\n  pointCloud: PointCloud | PointCloud2;\n  originalMessage: Record<string, RosValue> | undefined;\n  material: THREE.PointsMaterial;\n  pickingMaterial: THREE.ShaderMaterial;\n  instancePickingMaterial: THREE.ShaderMaterial;\n  stixelMaterial: THREE.LineBasicMaterial;\n};\n\nconst NEEDS_MIN_MAX = [\"gradient\", \"colormap\"];\n\nconst ALL_POINTCLOUD_DATATYPES = new Set<string>([\n  ...FOXGLOVE_POINTCLOUD_DATATYPES,\n  ...ROS_POINTCLOUD_DATATYPES,\n]);\n\nconst INVALID_POINTCLOUD = \"INVALID_POINTCLOUD\";\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempMinMaxColor: THREE.Vector2Tuple = [0, 0];\nconst tempFieldReaders: PointCloudFieldReaders = {\n  xReader: zeroReader,\n  yReader: zeroReader,\n  zReader: zeroReader,\n  packedColorReader: zeroReader,\n  redReader: zeroReader,\n  greenReader: zeroReader,\n  blueReader: zeroReader,\n  alphaReader: zeroReader,\n};\n\nexport class PointCloudRenderable extends Renderable<PointCloudUserData> {\n  public override pickableInstances = true;\n  private pointsHistory: RenderObjectHistory<PointCloudRenderable>;\n  private stixelsHistory: RenderObjectHistory<PointCloudRenderable>;\n\n  public constructor(topic: string, renderer: Renderer, userData: PointCloudUserData) {\n    super(topic, renderer, userData);\n\n    const isDecay = userData.settings.decayTime > 0;\n    const geometry = createGeometry(\n      topic,\n      isDecay ? THREE.StaticDrawUsage : THREE.DynamicDrawUsage,\n    );\n\n    const points = createPoints(\n      topic,\n      getPose(userData.pointCloud),\n      geometry,\n      userData.material,\n      userData.pickingMaterial,\n      userData.instancePickingMaterial,\n    );\n    this.pointsHistory = new RenderObjectHistory({\n      initial: {\n        messageTime: userData.receiveTime,\n        receiveTime: userData.receiveTime,\n        object3d: points,\n      },\n      parentRenderable: this,\n      renderer,\n    });\n    this.add(points);\n\n    const stixelGeometry = createStixelGeometry(\n      topic,\n      isDecay ? THREE.StaticDrawUsage : THREE.DynamicDrawUsage,\n    );\n    const stixels = createStixels(\n      topic,\n      getPose(userData.pointCloud),\n      stixelGeometry,\n      userData.stixelMaterial,\n    );\n    this.stixelsHistory = new RenderObjectHistory({\n      initial: {\n        messageTime: userData.receiveTime,\n        receiveTime: userData.receiveTime,\n        object3d: stixels,\n      },\n      parentRenderable: this,\n      renderer,\n    });\n\n    this.add(stixels);\n  }\n\n  public override dispose(): void {\n    this.userData.originalMessage = undefined;\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n    this.userData.instancePickingMaterial.dispose();\n    this.userData.stixelMaterial.dispose();\n    this.pointsHistory.dispose();\n    this.stixelsHistory.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage ?? {};\n  }\n\n  public override instanceDetails(instanceId: number): Record<string, RosValue> | undefined {\n    const pointCloud = this.userData.pointCloud;\n    const data = pointCloud.data;\n    const stride = getStride(pointCloud);\n    const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    const pointStep = getStride(pointCloud);\n    const details: Record<string, RosValue> = {};\n\n    for (const field of pointCloud.fields) {\n      const pointOffset = instanceId * pointStep;\n      const reader = getReader(field, stride);\n      if (reader) {\n        details[field.name] = reader(view, pointOffset);\n      }\n    }\n\n    return details;\n  }\n\n  public updatePointCloud(\n    this: PointCloudRenderable,\n    pointCloud: PointCloud | PointCloud2,\n    originalMessage: RosObject | undefined,\n    settings: LayerSettingsPointClouds,\n    receiveTime: bigint,\n  ): void {\n    const messageTime = toNanoSec(getTimestamp(pointCloud));\n    this.userData.receiveTime = receiveTime;\n    this.userData.messageTime = messageTime;\n    this.userData.frameId = this.renderer.normalizeFrameId(getFrameId(pointCloud));\n    this.userData.pointCloud = pointCloud;\n    this.userData.originalMessage = originalMessage;\n\n    const prevSettings = this.userData.settings;\n    const prevIsDecay = prevSettings.decayTime > 0;\n    this.userData.settings = settings;\n\n    let material = this.userData.material;\n    let stixelMaterial = this.userData.stixelMaterial;\n    const needsRebuild =\n      colorHasTransparency(settings) !== material.transparent ||\n      pointCloudColorEncoding(settings) !== pointCloudColorEncoding(prevSettings) ||\n      settings.pointShape !== prevSettings.pointShape;\n\n    const pointsHistory = this.pointsHistory;\n    const stixelsHistory = this.stixelsHistory;\n    if (needsRebuild) {\n      material.dispose();\n      material = pointCloudMaterial(settings);\n      this.userData.material = material;\n      pointsHistory.updateMaterial(material);\n\n      stixelMaterial.dispose();\n      stixelMaterial = createStixelMaterial(settings);\n      this.userData.stixelMaterial = stixelMaterial;\n      stixelsHistory.updateMaterial(stixelMaterial);\n    } else {\n      material.size = settings.pointSize;\n    }\n\n    const stixelsEnabledChanged = prevSettings.stixelsEnabled !== settings.stixelsEnabled;\n    // when stixels are switched off we can clear its history\n    if (!settings.stixelsEnabled && stixelsEnabledChanged) {\n      stixelsHistory.clearHistory();\n    }\n\n    // Invalid point cloud checks\n    if (!this._validatePointCloud(pointCloud)) {\n      return;\n    }\n\n    // Parse the fields and create typed readers for x/y/z and color\n    if (!this._getPointCloudFieldReaders(tempFieldReaders, pointCloud, settings)) {\n      return;\n    }\n\n    const topic = this.userData.topic;\n    const isDecay = settings.decayTime > 0;\n    if (isDecay) {\n      // Push a new (empty) entry to the history of points\n      const geometry = createGeometry(topic, THREE.StaticDrawUsage);\n      const points = createPoints(\n        topic,\n        getPose(pointCloud),\n        geometry,\n        material,\n        this.userData.pickingMaterial,\n        undefined,\n      );\n      pointsHistory.addHistoryEntry({ receiveTime, messageTime, object3d: points });\n      this.add(points);\n\n      if (settings.stixelsEnabled) {\n        const stixelGeometry = createStixelGeometry(topic, THREE.StaticDrawUsage);\n        const stixels = createStixels(topic, getPose(pointCloud), stixelGeometry, stixelMaterial);\n        stixelsHistory.addHistoryEntry({ receiveTime, messageTime, object3d: stixels });\n        this.add(stixels);\n      }\n    }\n\n    const latestPointsEntry = pointsHistory.latest();\n    if (!latestPointsEntry) {\n      throw new Error(`pointsHistory is empty for ${topic}`);\n    }\n\n    latestPointsEntry.receiveTime = receiveTime;\n    latestPointsEntry.messageTime = messageTime;\n    latestPointsEntry.object3d.userData.pose = getPose(pointCloud);\n\n    const pointCount = Math.trunc(pointCloud.data.length / getStride(pointCloud));\n    const latestPoints = latestPointsEntry.object3d;\n    latestPointsEntry.object3d.geometry.resize(pointCount);\n    const positionAttribute = latestPoints.geometry.attributes.position!;\n    const colorAttribute = latestPoints.geometry.attributes.color!;\n\n    const latestStixelEntry = stixelsHistory.latest();\n    if (!latestStixelEntry) {\n      throw new Error(`stixelsHistory is empty for ${topic}`);\n    }\n\n    if (!isDecay && prevIsDecay !== isDecay) {\n      latestPointsEntry.object3d.geometry.setUsage(THREE.DynamicDrawUsage);\n      latestStixelEntry.object3d.geometry.setUsage(THREE.DynamicDrawUsage);\n    }\n\n    latestStixelEntry.receiveTime = receiveTime;\n    latestStixelEntry.messageTime = messageTime;\n    latestStixelEntry.object3d.userData.pose = latestPointsEntry.object3d.userData.pose;\n    if (settings.stixelsEnabled) {\n      latestStixelEntry.object3d.geometry.resize(pointCount * 2);\n    } else {\n      latestStixelEntry.object3d.geometry.resize(0);\n    }\n    const stixelPositionAttribute = latestStixelEntry.object3d.geometry.attributes.position!;\n    const stixelColorAttribute = latestStixelEntry.object3d.geometry.attributes.color!;\n    // Iterate the point cloud data to update position and color attributes\n    this._updatePointCloudBuffers(\n      pointCloud,\n      tempFieldReaders,\n      pointCount,\n      settings,\n      positionAttribute,\n      colorAttribute,\n      stixelPositionAttribute,\n      stixelColorAttribute,\n    );\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    // The PointCloud SceneExtension overrides startFrame which is responsible for setting the\n    // THREE.Object3D.visible flag on renderables so we set it here to synchronize the THREE\n    // visibility state with the settings state.\n    this.visible = this.userData.settings.visible;\n\n    if (!this.userData.settings.visible) {\n      this.renderer.settings.errors.clearPath(this.userData.settingsPath);\n      this.pointsHistory.clearHistory();\n      this.stixelsHistory.clearHistory();\n      return;\n    }\n    this.pointsHistory.updateHistoryFromCurrentTime(currentTime);\n    this.pointsHistory.updatePoses(currentTime, renderFrameId, fixedFrameId);\n    if (this.userData.settings.stixelsEnabled) {\n      this.stixelsHistory.updateHistoryFromCurrentTime(currentTime);\n      this.stixelsHistory.updatePoses(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  private invalidError(message: string): void {\n    this.renderer.settings.errors.addToTopic(this.userData.topic, INVALID_POINTCLOUD, message);\n    const lastEntry = this.pointsHistory.latest();\n    lastEntry?.object3d.geometry.resize(0);\n  }\n\n  private _validatePointCloud(pointCloud: PointCloud | PointCloud2): boolean {\n    const maybeRos = pointCloud as Partial<PointCloud2>;\n    return maybeRos.header\n      ? this._validateRosPointCloud(pointCloud as PointCloud2)\n      : this._validateFoxglovePointCloud(pointCloud as PointCloud);\n  }\n\n  private _validateFoxglovePointCloud(pointCloud: PointCloud): boolean {\n    const data = pointCloud.data;\n\n    if (data.length % pointCloud.point_stride !== 0) {\n      const message = `PointCloud data length ${data.length} is not a multiple of point_stride ${pointCloud.point_stride}`;\n      this.invalidError(message);\n      return false;\n    }\n\n    if (pointCloud.fields.length === 0) {\n      const message = `PointCloud has no fields`;\n      this.invalidError(message);\n      return false;\n    }\n\n    return true;\n  }\n\n  private _validateRosPointCloud(pointCloud: PointCloud2): boolean {\n    const data = pointCloud.data;\n\n    if (pointCloud.is_bigendian) {\n      const message = `PointCloud2 is_bigendian=true is not supported`;\n      this.invalidError(message);\n      return false;\n    }\n\n    if (data.length % pointCloud.point_step !== 0) {\n      const message = `PointCloud2 data length ${data.length} is not a multiple of point_step ${pointCloud.point_step}`;\n      this.invalidError(message);\n      return false;\n    }\n\n    if (pointCloud.fields.length === 0) {\n      const message = `PointCloud2 has no fields`;\n      this.invalidError(message);\n      return false;\n    }\n\n    if (data.length < pointCloud.height * pointCloud.row_step) {\n      const message = `PointCloud2 data length ${data.length} is less than height ${pointCloud.height} * row_step ${pointCloud.row_step}`;\n      this.renderer.settings.errors.addToTopic(this.userData.topic, INVALID_POINTCLOUD, message);\n      // Allow this error for now since we currently ignore row_step\n    }\n\n    if (pointCloud.width * pointCloud.point_step > pointCloud.row_step) {\n      const message = `PointCloud2 width ${pointCloud.width} * point_step ${pointCloud.point_step} is greater than row_step ${pointCloud.row_step}`;\n      this.renderer.settings.errors.addToTopic(this.userData.topic, INVALID_POINTCLOUD, message);\n      // Allow this error for now since we currently ignore row_step\n    }\n\n    return true;\n  }\n\n  private _getPointCloudFieldReaders(\n    output: PointCloudFieldReaders,\n    pointCloud: PointCloud | PointCloud2,\n    settings: LayerSettingsPointClouds,\n  ): boolean {\n    let xReader: FieldReader | undefined;\n    let yReader: FieldReader | undefined;\n    let zReader: FieldReader | undefined;\n    let packedColorReader: FieldReader | undefined;\n    let redReader: FieldReader | undefined;\n    let greenReader: FieldReader | undefined;\n    let blueReader: FieldReader | undefined;\n    let alphaReader: FieldReader | undefined;\n\n    const stride = getStride(pointCloud);\n\n    // Determine the minimum bytes needed per point based on offset/size of each\n    // field, so we can ensure point_step is >= this value\n    let minBytesPerPoint = 0;\n\n    for (let i = 0; i < pointCloud.fields.length; i++) {\n      const field = pointCloud.fields[i]!;\n      // Skip this field, we don't support counts other than 1\n      if (!isSupportedField(field)) {\n        continue;\n      }\n      const numericType = (field as Partial<PackedElementField>).type;\n      const type =\n        numericType != undefined\n          ? numericTypeToPointFieldType(numericType)\n          : (field as PointField).datatype;\n\n      if (field.offset < 0) {\n        const message = `PointCloud field \"${field.name}\" has invalid offset ${field.offset}. Must be >= 0`;\n        this.invalidError(message);\n        return false;\n      }\n\n      if (field.name === \"x\") {\n        xReader = getReader(field, stride);\n        if (!xReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"x\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.invalidError(message);\n          return false;\n        }\n      } else if (field.name === \"y\") {\n        yReader = getReader(field, stride);\n        if (!yReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"y\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.invalidError(message);\n          return false;\n        }\n      } else if (field.name === \"z\") {\n        zReader = getReader(field, stride);\n        if (!zReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"z\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.invalidError(message);\n          return false;\n        }\n      } else if (field.name === \"red\") {\n        redReader = getReader(field, stride, /*normalize*/ true);\n      } else if (field.name === \"green\") {\n        greenReader = getReader(field, stride, /*normalize*/ true);\n      } else if (field.name === \"blue\") {\n        blueReader = getReader(field, stride, /*normalize*/ true);\n      } else if (field.name === \"alpha\") {\n        alphaReader = getReader(field, stride, /*normalize*/ true);\n      }\n\n      const byteWidth = pointFieldWidth(type);\n      minBytesPerPoint = Math.max(minBytesPerPoint, field.offset + byteWidth);\n\n      if (field.name === settings.colorField) {\n        // If the selected color mode is rgb/rgba and the field only has one channel with at least a\n        // four byte width, force the color data to be interpreted as four individual bytes. This\n        // overcomes a common problem where the color field data type is set to float32 or something\n        // other than uint32\n        const forceType =\n          (settings.colorMode === \"rgb\" || settings.colorMode === \"rgba\") && byteWidth >= 4\n            ? numericType != undefined\n              ? NumericType.UINT32\n              : PointFieldType.UINT32\n            : undefined;\n        packedColorReader = getReader(field, stride, /*normalize*/ false, forceType);\n        if (!packedColorReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"${field.name}\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.invalidError(message);\n          return false;\n        }\n      }\n    }\n\n    if (minBytesPerPoint > stride) {\n      const message = `PointCloud stride ${stride} is less than minimum bytes per point ${minBytesPerPoint}`;\n      this.invalidError(message);\n      return false;\n    }\n\n    const positionReaderCount = (xReader ? 1 : 0) + (yReader ? 1 : 0) + (zReader ? 1 : 0);\n    if (positionReaderCount < 2) {\n      const message = `PointCloud must contain at least two of x/y/z fields`;\n      this.invalidError(message);\n      return false;\n    }\n\n    output.xReader = xReader ?? zeroReader;\n    output.yReader = yReader ?? zeroReader;\n    output.zReader = zReader ?? zeroReader;\n    output.packedColorReader = packedColorReader ?? xReader ?? yReader ?? zReader ?? zeroReader;\n    output.redReader = redReader ?? zeroReader;\n    output.greenReader = greenReader ?? zeroReader;\n    output.blueReader = blueReader ?? zeroReader;\n    output.alphaReader = alphaReader ?? zeroReader;\n    return true;\n  }\n\n  private _minMaxColorValues(\n    output: THREE.Vector2Tuple,\n    colorReader: FieldReader,\n    view: DataView,\n    pointCount: number,\n    pointStep: number,\n    settings: LayerSettingsPointClouds,\n  ): void {\n    let minColorValue = settings.minValue ?? Number.POSITIVE_INFINITY;\n    let maxColorValue = settings.maxValue ?? Number.NEGATIVE_INFINITY;\n    if (\n      NEEDS_MIN_MAX.includes(settings.colorMode) &&\n      (settings.minValue == undefined || settings.maxValue == undefined)\n    ) {\n      for (let i = 0; i < pointCount; i++) {\n        const pointOffset = i * pointStep;\n        const colorValue = colorReader(view, pointOffset);\n        minColorValue = Math.min(minColorValue, colorValue);\n        maxColorValue = Math.max(maxColorValue, colorValue);\n      }\n      minColorValue = settings.minValue ?? minColorValue;\n      maxColorValue = settings.maxValue ?? maxColorValue;\n    }\n\n    output[0] = minColorValue;\n    output[1] = maxColorValue;\n  }\n\n  private _updatePointCloudBuffers(\n    pointCloud: PointCloud | PointCloud2,\n    readers: PointCloudFieldReaders,\n    pointCount: number,\n    settings: LayerSettingsPointClouds,\n    positionAttribute: THREE.BufferAttribute,\n    colorAttribute: THREE.BufferAttribute,\n    stixelPositionAttribute: THREE.BufferAttribute,\n    stixelColorAttribute: THREE.BufferAttribute,\n  ): void {\n    const data = pointCloud.data;\n    const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    const pointStep = getStride(pointCloud);\n    const {\n      xReader,\n      yReader,\n      zReader,\n      packedColorReader,\n      redReader,\n      greenReader,\n      blueReader,\n      alphaReader,\n    } = readers;\n\n    // Update position attribute\n    for (let i = 0; i < pointCount; i++) {\n      const pointOffset = i * pointStep;\n      const x = xReader(view, pointOffset);\n      const y = yReader(view, pointOffset);\n      const z = zReader(view, pointOffset);\n      positionAttribute.setXYZ(i, x, y, z);\n      if (settings.stixelsEnabled) {\n        stixelPositionAttribute.setXYZ(i * 2, x, y, z);\n        stixelPositionAttribute.setXYZ(i * 2 + 1, x, y, 0);\n      }\n    }\n\n    // Update color attribute\n    if (settings.colorMode === \"rgba-fields\") {\n      for (let i = 0; i < pointCount; i++) {\n        const pointOffset = i * pointStep;\n        const r = redReader(view, pointOffset);\n        const g = greenReader(view, pointOffset);\n        const b = blueReader(view, pointOffset);\n        const a = alphaReader(view, pointOffset);\n        colorAttribute.setXYZW(i, r, g, b, a);\n        if (settings.stixelsEnabled) {\n          stixelColorAttribute.setXYZW(i * 2, r, g, b, a);\n          stixelColorAttribute.setXYZW(i * 2 + 1, r, g, b, a);\n        }\n      }\n    } else {\n      // Iterate the point cloud data to determine min/max color values (if needed)\n      this._minMaxColorValues(\n        tempMinMaxColor,\n        packedColorReader,\n        view,\n        pointCount,\n        pointStep,\n        settings,\n      );\n      const [minColorValue, maxColorValue] = tempMinMaxColor;\n\n      // Build a method to convert raw color field values to RGBA\n      const colorConverter = getColorConverter(\n        settings as typeof settings & { colorMode: typeof settings.colorMode },\n        minColorValue,\n        maxColorValue,\n      );\n\n      for (let i = 0; i < pointCount; i++) {\n        const pointOffset = i * pointStep;\n        const colorValue = packedColorReader(view, pointOffset);\n        colorConverter(tempColor, colorValue);\n        colorAttribute.setXYZW(i, tempColor.r, tempColor.g, tempColor.b, tempColor.a);\n        if (settings.stixelsEnabled) {\n          stixelColorAttribute.setXYZW(i * 2, tempColor.r, tempColor.g, tempColor.b, tempColor.a);\n          stixelColorAttribute.setXYZW(\n            i * 2 + 1,\n            tempColor.r,\n            tempColor.g,\n            tempColor.b,\n            tempColor.a,\n          );\n        }\n      }\n    }\n\n    positionAttribute.needsUpdate = true;\n    colorAttribute.needsUpdate = true;\n    stixelPositionAttribute.needsUpdate = true;\n    stixelColorAttribute.needsUpdate = true;\n  }\n}\n\nexport class PointClouds extends SceneExtension<PointCloudRenderable> {\n  private fieldsByTopic = new Map<string, string[]>();\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.PointClouds\", renderer);\n\n    renderer.addSchemaSubscriptions(ROS_POINTCLOUD_DATATYPES, this.handleRosPointCloud);\n    renderer.addSchemaSubscriptions(FOXGLOVE_POINTCLOUD_DATATYPES, this.handleFoxglovePointCloud);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      const isPointCloud = topicIsConvertibleToSchema(topic, ALL_POINTCLOUD_DATATYPES);\n      if (!isPointCloud) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPointClouds>;\n      const messageFields = this.fieldsByTopic.get(topic.name) ?? POINT_CLOUD_REQUIRED_FIELDS;\n      const node: SettingsTreeNodeWithActionHandler = pointSettingsNode(\n        topic,\n        messageFields,\n        config,\n      );\n      node.fields!.stixelsEnabled = {\n        label: \"Stixel view\",\n        input: \"boolean\",\n        value: config.stixelsEnabled ?? DEFAULT_SETTINGS.stixelsEnabled,\n      };\n      node.handler = handler;\n      node.icon = \"Points\";\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Do not call super.startFrame() since we handle updatePose() manually.\n    // Instead of updating the pose for each Renderable in this.renderables, we\n    // update the pose of each THREE.Points object in the pointsHistory of each\n    // renderable\n\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevSettings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPointClouds>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...prevSettings };\n      renderable.updatePointCloud(\n        renderable.userData.pointCloud,\n        renderable.userData.originalMessage,\n        settings,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  private handleFoxglovePointCloud = (messageEvent: PartialMessageEvent<PointCloud>): void => {\n    const topic = messageEvent.topic;\n    const pointCloud = normalizePointCloud(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const messageTime = toNanoSec(pointCloud.timestamp);\n    const frameId = pointCloud.frame_id;\n\n    // Update the mapping of topic to point cloud field names if necessary\n    let fields = this.fieldsByTopic.get(topic);\n    if (!fields || fields.length !== pointCloud.fields.length) {\n      fields = pointCloud.fields.map((field) => field.name);\n      this.fieldsByTopic.set(topic, fields);\n      this.updateSettingsTree();\n    }\n    this.handlePointCloud(\n      topic,\n      pointCloud,\n      receiveTime,\n      messageTime,\n      messageEvent.message as RosObject,\n      frameId,\n    );\n  };\n\n  private handleRosPointCloud = (messageEvent: PartialMessageEvent<PointCloud2>): void => {\n    const topic = messageEvent.topic;\n    const pointCloud = normalizePointCloud2(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const messageTime = toNanoSec(pointCloud.header.stamp);\n    const frameId = pointCloud.header.frame_id;\n\n    // Update the mapping of topic to point cloud field names if necessary\n    let fields = this.fieldsByTopic.get(topic);\n    // filter count to compare only supported fields\n    const numSupportedFields = pointCloud.fields.reduce((numSupported, field) => {\n      return numSupported + (isSupportedField(field) ? 1 : 0);\n    }, 0);\n    if (!fields || fields.length !== numSupportedFields) {\n      // Omit fields with count != 1\n      fields = filterMap(pointCloud.fields, (field) =>\n        isSupportedField(field) ? field.name : undefined,\n      );\n      this.fieldsByTopic.set(topic, fields);\n      this.updateSettingsTree();\n    }\n\n    this.handlePointCloud(\n      topic,\n      pointCloud,\n      receiveTime,\n      messageTime,\n      messageEvent.message as RosObject,\n      frameId,\n    );\n  };\n\n  private handlePointCloud(\n    topic: string,\n    pointCloud: PointCloud | PointCloud2,\n    receiveTime: bigint,\n    messageTime: bigint,\n    originalMessage: RosObject,\n    frameId: string,\n  ): void {\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPointClouds>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      if (settings.colorField == undefined) {\n        autoSelectColorField(settings, pointCloud, { supportsPackedRgbModes: true });\n\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      const material = pointCloudMaterial(settings);\n      const pickingMaterial = createPickingMaterial(settings);\n      const instancePickingMaterial = createInstancePickingMaterial(settings);\n      const stixelMaterial = createStixelMaterial(settings);\n\n      renderable = new PointCloudRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId: this.renderer.normalizeFrameId(frameId),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        pointCloud,\n        originalMessage,\n        material,\n        pickingMaterial,\n        instancePickingMaterial,\n        stixelMaterial,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    renderable.updatePointCloud(\n      pointCloud,\n      originalMessage,\n      renderable.userData.settings,\n      receiveTime,\n    );\n  }\n}\n\nfunction pointFieldTypeName(type: PointFieldType): string {\n  return PointFieldType[type as number] ?? `${type}`;\n}\n\nfunction pointFieldWidth(type: PointFieldType): number {\n  switch (type) {\n    case PointFieldType.INT8:\n    case PointFieldType.UINT8:\n      return 1;\n    case PointFieldType.INT16:\n    case PointFieldType.UINT16:\n      return 2;\n    case PointFieldType.INT32:\n    case PointFieldType.UINT32:\n    case PointFieldType.FLOAT32:\n      return 4;\n    case PointFieldType.FLOAT64:\n      return 8;\n    default:\n      return 0;\n  }\n}\n\nfunction zeroReader(): number {\n  return 0;\n}\n\nfunction normalizePointField(field: PartialMessage<PointField> | undefined): PointField {\n  if (!field) {\n    return { name: \"\", offset: 0, datatype: PointFieldType.UNKNOWN, count: 0 };\n  }\n  return {\n    name: field.name ?? \"\",\n    offset: field.offset ?? 0,\n    datatype: field.datatype ?? PointFieldType.UNKNOWN,\n    count: field.count ?? 0,\n  };\n}\n\nfunction normalizePackedElementField(\n  field: PartialMessage<PackedElementField> | undefined,\n): PackedElementField {\n  return {\n    name: field?.name ?? \"\",\n    offset: field?.offset ?? 0,\n    type: field?.type ?? 0,\n  };\n}\n\nfunction normalizePointCloud(message: PartialMessage<PointCloud>): PointCloud {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    pose: normalizePose(message.pose),\n    point_stride: message.point_stride ?? 0,\n    fields: message.fields?.map(normalizePackedElementField) ?? [],\n    data: normalizeByteArray(message.data),\n  };\n}\n\nfunction normalizePointCloud2(message: PartialMessage<PointCloud2>): PointCloud2 {\n  return {\n    header: normalizeHeader(message.header),\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    fields: message.fields?.map(normalizePointField) ?? [],\n    is_bigendian: message.is_bigendian ?? false,\n    point_step: message.point_step ?? 0,\n    row_step: message.row_step ?? 0,\n    data: normalizeByteArray(message.data),\n    is_dense: message.is_dense ?? false,\n  };\n}\n\nfunction getTimestamp(pointCloud: PointCloud | PointCloud2): Time {\n  const maybeRos = pointCloud as Partial<PointCloud2>;\n  return maybeRos.header ? maybeRos.header.stamp : (pointCloud as PointCloud).timestamp;\n}\n\nfunction getFrameId(pointCloud: PointCloud | PointCloud2): string {\n  const maybeRos = pointCloud as Partial<PointCloud2>;\n  return maybeRos.header ? maybeRos.header.frame_id : (pointCloud as PointCloud).frame_id;\n}\n\nfunction getStride(pointCloud: PointCloud | PointCloud2): number {\n  const maybeRos = pointCloud as Partial<PointCloud2>;\n  return maybeRos.point_step != undefined\n    ? maybeRos.point_step\n    : (pointCloud as PointCloud).point_stride;\n}\n\nfunction getPose(pointCloud: PointCloud | PointCloud2): Pose {\n  const maybeFoxglove = pointCloud as Partial<PointCloud>;\n  return maybeFoxglove.pose ?? makePose();\n}\n\ntype Stixels = THREE.LineSegments<DynamicBufferGeometry, THREE.LineBasicMaterial>;\n\nexport function createStixelMaterial(settings: LayerSettingsPointClouds): THREE.LineBasicMaterial {\n  const transparent = colorHasTransparency(settings);\n  const material = new THREE.LineBasicMaterial({\n    vertexColors: true,\n    transparent,\n    depthWrite: true,\n  });\n  return material;\n}\n\nfunction createStixelGeometry(topic: string, usage: THREE.Usage): DynamicBufferGeometry {\n  const geometry = new DynamicBufferGeometry(usage);\n  geometry.name = `${topic}:PointCloud:stixelGeometry`;\n  geometry.createAttribute(\"position\", Float32Array, 3);\n  geometry.createAttribute(\"color\", Uint8Array, 4, true);\n  return geometry;\n}\n\nfunction createStixels(\n  topic: string,\n  pose: Pose,\n  geometry: DynamicBufferGeometry,\n  material: THREE.LineBasicMaterial,\n): Stixels {\n  const stixels = new THREE.LineSegments<DynamicBufferGeometry, THREE.LineBasicMaterial>(\n    geometry,\n    material,\n  );\n  // We don't calculate the bounding sphere for points, so frustum culling is disabled\n  stixels.frustumCulled = false;\n  stixels.name = `${topic}:PointCloud:stixels`;\n  stixels.userData = {\n    pose,\n  };\n  return stixels;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport {\n  makeLineMaterial,\n  makeLinePrepassMaterial,\n  makeLinePickingMaterial,\n  markerHasTransparency,\n} from \"./materials\";\nimport { LineMaterial } from \"../../LineMaterial\";\nimport type { Renderer } from \"../../Renderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableLineStrip extends RenderableMarker {\n  private geometry: LineGeometry;\n  private linePrepass: Line2;\n  private line: Line2;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.geometry = new LineGeometry();\n\n    const options = { resolution: renderer.input.canvasSize, worldUnits: true };\n\n    // We alleviate corner artifacts using a two-pass render for lines. The\n    // first pass writes to depth only, followed by a color pass with stencil\n    // operations. The source for this technique is:\n    // <https://github.com/mrdoob/three.js/issues/23680#issuecomment-1063294691>\n    // <https://gkjohnson.github.io/threejs-sandbox/fat-line-opacity/webgl_lines_fat.html>\n\n    // Depth pass 1\n    const matLinePrepass = makeLinePrepassMaterial(marker, options);\n    this.linePrepass = new Line2(this.geometry, matLinePrepass);\n    this.linePrepass.renderOrder = 1;\n    this.linePrepass.userData.picking = false;\n    this.add(this.linePrepass);\n\n    // Color pass 2\n    const matLine = makeLineMaterial(marker, options);\n    this.line = new Line2(this.geometry, matLine);\n    this.line.renderOrder = 2;\n    const pickingLineWidth = marker.scale.x * 1.2;\n    this.line.userData.pickingMaterial = makeLinePickingMaterial(pickingLineWidth, options);\n    this.add(this.line);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.linePrepass.material.dispose();\n    this.line.material.dispose();\n\n    const pickingMaterial = this.line.userData.pickingMaterial as THREE.ShaderMaterial;\n    pickingMaterial.dispose();\n    this.line.userData.pickingMaterial = undefined;\n\n    super.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const pointsLength = marker.points.length;\n    const lineWidth = marker.scale.x;\n    const transparent = markerHasTransparency(marker);\n\n    if (pointsLength === 0) {\n      // THREE.LineGeometry.setPositions crashes when given an empty array:\n      // https://github.com/foxglove/studio/issues/3954\n      this.linePrepass.visible = false;\n      this.line.visible = false;\n      return;\n    } else {\n      this.linePrepass.visible = true;\n      this.line.visible = true;\n    }\n\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.linePrepass.material.transparent = transparent;\n      this.linePrepass.material.depthWrite = !transparent;\n      this.linePrepass.material.needsUpdate = true;\n      this.line.material.transparent = transparent;\n      this.line.material.depthWrite = !transparent;\n      this.line.material.needsUpdate = true;\n    }\n\n    const matLinePrepass = this.linePrepass.material as LineMaterial;\n    matLinePrepass.lineWidth = lineWidth;\n    const matLine = this.line.material as LineMaterial;\n    matLine.lineWidth = lineWidth;\n\n    const prevPointsLength = (this.geometry.attributes.instanceStart?.count ?? 0) * 2;\n    if (pointsLength !== prevPointsLength) {\n      this.geometry.dispose();\n      this.geometry = new LineGeometry();\n      this.linePrepass.geometry = this.geometry;\n      this.line.geometry = this.geometry;\n    }\n\n    this._setPositions(marker, pointsLength);\n    this._setColors(marker, pointsLength);\n\n    this.linePrepass.computeLineDistances();\n    this.line.computeLineDistances();\n  }\n\n  private _setPositions(marker: Marker, pointsLength: number): void {\n    const linePositions = new Float32Array(3 * pointsLength);\n    for (let i = 0; i < pointsLength; i++) {\n      const point = marker.points[i]!;\n      const offset = i * 3;\n      linePositions[offset + 0] = point.x;\n      linePositions[offset + 1] = point.y;\n      linePositions[offset + 2] = point.z;\n    }\n\n    this.geometry.setPositions(linePositions);\n  }\n\n  private _setColors(marker: Marker, pointsLength: number): void {\n    // Converts color-per-point to pairs format in a flattened typed array\n    const rgbaData = new Float32Array(8 * pointsLength);\n    const color1: THREE.Vector4Tuple = [0, 0, 0, 0];\n    this._markerColorsToLinear(marker, pointsLength, (color2, ii) => {\n      if (ii === 0) {\n        copyTuple4(color2, color1);\n        return;\n      }\n      const i = ii - 1;\n      const offset = i * 8;\n\n      rgbaData[offset + 0] = color1[0];\n      rgbaData[offset + 1] = color1[1];\n      rgbaData[offset + 2] = color1[2];\n      rgbaData[offset + 3] = color1[3];\n\n      rgbaData[offset + 4] = color2[0];\n      rgbaData[offset + 5] = color2[1];\n      rgbaData[offset + 6] = color2[2];\n      rgbaData[offset + 7] = color2[3];\n\n      copyTuple4(color2, color1);\n    });\n\n    // [rgba, rgba]\n    const instanceColorBuffer = new THREE.InstancedInterleavedBuffer(rgbaData, 8, 1);\n    this.geometry.setAttribute(\n      \"instanceColorStart\",\n      new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 0),\n    );\n    this.geometry.setAttribute(\n      \"instanceColorEnd\",\n      new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 4),\n    );\n  }\n}\n\nfunction copyTuple4(from: THREE.Vector4Tuple, to: THREE.Vector4Tuple): void {\n  to[0] = from[0];\n  to[1] = from[1];\n  to[2] = from[2];\n  to[3] = from[3];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { RenderableLineStrip } from \"./markers/RenderableLineStrip\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaToCssString, stringToRgba } from \"../color\";\nimport { normalizeHeader, normalizeVector3s } from \"../normalizeMessages\";\nimport {\n  Marker,\n  MarkerAction,\n  MarkerType,\n  Polygon,\n  PolygonStamped,\n  POLYGON_STAMPED_DATATYPES,\n  TIME_ZERO,\n} from \"../ros\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nexport type LayerSettingsPolygon = BaseSettings & {\n  lineWidth: number;\n  color: string;\n};\n\nconst DEFAULT_COLOR = { r: 124 / 255, g: 107 / 255, b: 1, a: 1 };\nconst DEFAULT_LINE_WIDTH = 0.1;\n\nconst DEFAULT_COLOR_STR = rgbaToCssString(DEFAULT_COLOR);\n\nconst DEFAULT_SETTINGS: LayerSettingsPolygon = {\n  visible: false,\n  lineWidth: DEFAULT_LINE_WIDTH,\n  color: DEFAULT_COLOR_STR,\n};\n\nexport type PolygonUserData = BaseUserData & {\n  settings: LayerSettingsPolygon;\n  topic: string;\n  polygonStamped: PolygonStamped;\n  lines: RenderableLineStrip | undefined;\n};\n\nexport class PolygonRenderable extends Renderable<PolygonUserData> {\n  public override dispose(): void {\n    this.userData.lines?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.polygonStamped;\n  }\n}\n\nexport class Polygons extends SceneExtension<PolygonRenderable> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Polygons\", renderer);\n\n    renderer.addSchemaSubscriptions(POLYGON_STAMPED_DATATYPES, this.handlePolygon);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, POLYGON_STAMPED_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPolygon>;\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        lineWidth: { label: \"Line Width\", input: \"number\", min: 0, placeholder: String(DEFAULT_LINE_WIDTH), step: 0.005, precision: 3, value: config.lineWidth },\n        color: { label: \"Color\", input: \"rgba\", value: config.color ?? DEFAULT_COLOR_STR },\n      };\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: \"Star\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPolygon>\n        | undefined;\n      renderable.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n      this._updatePolygonRenderable(\n        renderable,\n        renderable.userData.polygonStamped,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  private handlePolygon = (messageEvent: PartialMessageEvent<PolygonStamped>): void => {\n    const topic = messageEvent.topic;\n    const polygonStamped = normalizePolygonStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPolygon>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      renderable = new PolygonRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(polygonStamped.header.stamp),\n        frameId: this.renderer.normalizeFrameId(polygonStamped.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        polygonStamped,\n        lines: undefined,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this._updatePolygonRenderable(renderable, polygonStamped, receiveTime);\n  };\n\n  private _updatePolygonRenderable(\n    renderable: PolygonRenderable,\n    polygonStamped: PolygonStamped,\n    receiveTime: bigint,\n  ): void {\n    const settings = renderable.userData.settings;\n\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(polygonStamped.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(polygonStamped.header.frame_id);\n    renderable.userData.polygonStamped = polygonStamped;\n\n    const topic = renderable.userData.topic;\n    const linesMarker = createLineStripMarker(polygonStamped, settings);\n    if (!renderable.userData.lines) {\n      renderable.userData.lines = new RenderableLineStrip(\n        topic,\n        linesMarker,\n        receiveTime,\n        this.renderer,\n      );\n      renderable.add(renderable.userData.lines);\n    } else {\n      renderable.userData.lines.update(linesMarker, receiveTime);\n    }\n  }\n}\n\nfunction createLineStripMarker(\n  polygonStamped: PolygonStamped,\n  settings: LayerSettingsPolygon,\n): Marker {\n  // Close the polygon\n  const points = [...polygonStamped.polygon.points];\n  if (points.length > 0) {\n    points.push(points[0]!);\n  }\n\n  const linesMarker: Marker = {\n    header: polygonStamped.header,\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_STRIP,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: settings.lineWidth, y: 1, z: 1 },\n    color: stringToRgba(makeRgba(), settings.color),\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points,\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n  return linesMarker;\n}\n\nfunction normalizePolygon(polygon: PartialMessage<Polygon> | undefined): Polygon {\n  return {\n    points: normalizeVector3s(polygon?.points),\n  };\n}\n\nfunction normalizePolygonStamped(polygon: PartialMessage<PolygonStamped>): PolygonStamped {\n  return {\n    header: normalizeHeader(polygon.header),\n    polygon: normalizePolygon(polygon.polygon),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { clamp } from \"three/src/math/MathUtils\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { Renderer } from \"../../Renderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { arrowHeadSubdivisions, arrowShaftSubdivisions, DetailLevel } from \"../../lod\";\nimport { getRotationTo } from \"../../math\";\nimport { Marker } from \"../../ros\";\n\nconst SHAFT_LENGTH = 0.77;\nconst SHAFT_DIAMETER = 1.0;\nconst HEAD_LENGTH = 0.23;\nconst HEAD_DIAMETER = 2.0;\n\nconst HEAD_LENGTH_PROPORTION = 0.23;\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\n\nconst tempStart = new THREE.Vector3();\nconst tempEnd = new THREE.Vector3();\nconst tempDirection = new THREE.Vector3();\n\nexport class RenderableArrow extends RenderableMarker {\n  public shaftMesh: THREE.Mesh<THREE.CylinderGeometry, THREE.MeshStandardMaterial>;\n  public headMesh: THREE.Mesh<THREE.ConeGeometry, THREE.MeshStandardMaterial>;\n  private shaftOutline: THREE.LineSegments;\n  private headOutline: THREE.LineSegments;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    const shaftGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaft-${renderer.maxLod}`,\n      () => createShaftGeometry(renderer.maxLod),\n    );\n    const headGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-head-${renderer.maxLod}`,\n      () => createHeadGeometry(renderer.maxLod),\n    );\n    const shaftEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaftedges-${renderer.maxLod}`,\n      () => createShaftEdgesGeometry(shaftGeometry),\n    );\n    const headEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-headedges-${renderer.maxLod}`,\n      () => createHeadEdgesGeometry(headGeometry),\n    );\n    // Shaft mesh\n    this.shaftMesh = new THREE.Mesh(shaftGeometry, makeStandardMaterial(marker.color));\n    this.shaftMesh.castShadow = true;\n    this.shaftMesh.receiveShadow = true;\n    this.add(this.shaftMesh);\n\n    // Head mesh\n    this.headMesh = new THREE.Mesh(headGeometry, makeStandardMaterial(marker.color));\n    this.headMesh.castShadow = true;\n    this.headMesh.receiveShadow = true;\n    this.add(this.headMesh);\n\n    // Shaft outline\n    this.shaftOutline = new THREE.LineSegments(shaftEdgesGeometry, renderer.outlineMaterial);\n    this.shaftOutline.userData.picking = false;\n    this.shaftMesh.add(this.shaftOutline);\n\n    // Head outline\n    this.headOutline = new THREE.LineSegments(headEdgesGeometry, renderer.outlineMaterial);\n    this.headOutline.userData.picking = false;\n    this.headMesh.add(this.headOutline);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.shaftMesh.material.dispose();\n    this.headMesh.material.dispose();\n    super.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.shaftMesh.material.transparent) {\n      this.shaftMesh.material.transparent = transparent;\n      this.shaftMesh.material.depthWrite = !transparent;\n      this.shaftMesh.material.needsUpdate = true;\n      this.headMesh.material.transparent = transparent;\n      this.headMesh.material.depthWrite = !transparent;\n      this.headMesh.material.needsUpdate = true;\n    }\n\n    rgbToThreeColor(this.shaftMesh.material.color, marker.color);\n    this.shaftMesh.material.opacity = marker.color.a;\n    this.headMesh.material.color.set(this.shaftMesh.material.color);\n    this.headMesh.material.opacity = marker.color.a;\n\n    const settings = this.getSettings();\n\n    this.shaftOutline.visible = settings?.showOutlines ?? true;\n    this.headOutline.visible = settings?.showOutlines ?? true;\n\n    // Adapted from <https://github.com/ros-visualization/rviz/blob/noetic-devel/src/rviz/default_plugin/markers/arrow_marker.cpp\n    if (marker.points.length === 2) {\n      const pointA = marker.points[0]!;\n      const pointB = marker.points[1]!;\n      tempStart.set(pointA.x, pointA.y, pointA.z);\n      tempEnd.set(pointB.x, pointB.y, pointB.z);\n\n      tempDirection.subVectors(tempEnd, tempStart);\n      const distance = tempDirection.length();\n\n      let headLength = HEAD_LENGTH_PROPORTION * distance;\n      if (marker.scale.z !== 0) {\n        const length = marker.scale.z;\n        headLength = clamp(length, 0, distance);\n      }\n      const shaftLength = distance - headLength;\n      const shaftDiameter = marker.scale.x;\n      const headDiameter = marker.scale.y;\n\n      this.shaftMesh.scale.set(shaftLength, shaftDiameter, shaftDiameter);\n      this.headMesh.scale.set(headLength, headDiameter, headDiameter);\n      this.scale.set(1, 1, 1);\n      this.shaftMesh.position.set(pointA.x, pointA.y, pointA.z);\n      this.shaftMesh.position.addScaledVector(tempDirection, 0.5 * (shaftLength / distance));\n      this.headMesh.position.set(pointB.x, pointB.y, pointB.z);\n      this.headMesh.position.addScaledVector(tempDirection, -0.5 * (headLength / distance));\n\n      const rotation = getRotationTo(UNIT_X, tempDirection);\n      this.shaftMesh.setRotationFromQuaternion(rotation);\n      this.headMesh.rotation.copy(this.shaftMesh.rotation);\n    } else {\n      this.shaftMesh.scale.set(SHAFT_LENGTH, SHAFT_DIAMETER, SHAFT_DIAMETER);\n      this.headMesh.scale.set(HEAD_LENGTH, HEAD_DIAMETER, HEAD_DIAMETER);\n      this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n\n      const halfShaftLength = SHAFT_LENGTH / 2;\n      const halfHeadLength = HEAD_LENGTH / 2;\n      this.shaftMesh.position.set(halfShaftLength, 0, 0);\n      this.headMesh.position.set(halfShaftLength * 2 + halfHeadLength, 0, 0);\n      this.shaftMesh.rotation.set(0, 0, 0);\n      this.headMesh.rotation.set(0, 0, 0);\n    }\n  }\n}\n\nfunction createShaftGeometry(lod: DetailLevel): THREE.CylinderGeometry {\n  const subdivs = arrowShaftSubdivisions(lod);\n  const shaftGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, subdivs, 1, false);\n  shaftGeometry.rotateZ(-Math.PI / 2);\n  shaftGeometry.computeBoundingSphere();\n  return shaftGeometry;\n}\n\nfunction createHeadGeometry(lod: DetailLevel): THREE.ConeGeometry {\n  const subdivs = arrowHeadSubdivisions(lod);\n  const headGeometry = new THREE.ConeGeometry(0.5, 1, subdivs, 1, false);\n  headGeometry.rotateZ(-Math.PI / 2);\n  headGeometry.computeBoundingSphere();\n  return headGeometry;\n}\n\nfunction createShaftEdgesGeometry(shaftGeometry: THREE.CylinderGeometry): THREE.EdgesGeometry {\n  const shaftEdgesGeometry = new THREE.EdgesGeometry(shaftGeometry, 40);\n\n  // We only want the outline of the base of the shaft, not the top of the\n  // cylinder where it connects to the cone. Create a new position buffer\n  // attribute with the first half of the vertices discarded\n  const positionsAttrib = shaftEdgesGeometry.getAttribute(\"position\") as THREE.BufferAttribute;\n  const positions = Array.from(positionsAttrib.array);\n  const newCount = (positions.length / 3 / 2) * 3;\n  const newVertices = positions.slice(newCount, positions.length);\n  const newPositionsAttrib = new THREE.Float32BufferAttribute(newVertices, 3);\n  shaftEdgesGeometry.setAttribute(\"position\", newPositionsAttrib);\n  shaftEdgesGeometry.computeBoundingSphere();\n  return shaftEdgesGeometry;\n}\n\nfunction createHeadEdgesGeometry(headGeometry: THREE.ConeGeometry): THREE.EdgesGeometry {\n  const headEdgesGeometry = new THREE.EdgesGeometry(headGeometry, 40);\n  headEdgesGeometry.computeBoundingSphere();\n  return headEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { Renderer } from \"../../Renderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { DetailLevel, sphereSubdivisions } from \"../../lod\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableSphere extends RenderableMarker {\n  public mesh: THREE.Mesh<THREE.SphereGeometry, THREE.MeshStandardMaterial>;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Sphere mesh\n    const geometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-${renderer.maxLod}`,\n      () => createGeometry(renderer.maxLod),\n    );\n    this.mesh = new THREE.Mesh(geometry, makeStandardMaterial(marker.color));\n    this.mesh.castShadow = true;\n    this.mesh.receiveShadow = true;\n    this.add(this.mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.mesh.material.transparent) {\n      this.mesh.material.transparent = transparent;\n      this.mesh.material.depthWrite = !transparent;\n      this.mesh.material.needsUpdate = true;\n    }\n\n    rgbToThreeColor(this.mesh.material.color, marker.color);\n    this.mesh.material.opacity = marker.color.a;\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n}\n\nexport function createGeometry(lod: DetailLevel): THREE.SphereGeometry {\n  const subdivisions = sphereSubdivisions(lod);\n  const sphereGeometry = new THREE.SphereGeometry(0.5, subdivisions, subdivisions);\n  sphereGeometry.computeBoundingSphere();\n  return sphereGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { PoseInFrame } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { Axis, AXIS_LENGTH } from \"./Axis\";\nimport { RenderableArrow } from \"./markers/RenderableArrow\";\nimport { RenderableSphere } from \"./markers/RenderableSphere\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaToCssString, stringToRgba } from \"../color\";\nimport { POSE_IN_FRAME_DATATYPES } from \"../foxglove\";\nimport { vecEqual } from \"../math\";\nimport {\n  normalizeHeader,\n  normalizeMatrix6,\n  normalizePose,\n  normalizeTime,\n} from \"../normalizeMessages\";\nimport {\n  Marker,\n  PoseWithCovarianceStamped,\n  PoseStamped,\n  POSE_WITH_COVARIANCE_STAMPED_DATATYPES,\n  MarkerAction,\n  MarkerType,\n  TIME_ZERO,\n  POSE_STAMPED_DATATYPES,\n  PoseWithCovariance,\n  ColorRGBA,\n} from \"../ros\";\nimport { BaseSettings, PRECISION_DISTANCE } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\ntype DisplayType = \"axis\" | \"arrow\";\n\nexport type LayerSettingsPose = BaseSettings & {\n  type: DisplayType;\n  axisScale: number;\n  arrowScale: [number, number, number];\n  color: string;\n  showCovariance: boolean;\n  covarianceColor: string;\n};\n\nconst DEFAULT_TYPE: DisplayType = \"axis\";\nconst DEFAULT_AXIS_SCALE = AXIS_LENGTH;\nconst DEFAULT_ARROW_SCALE: THREE.Vector3Tuple = [1, 0.15, 0.15];\nconst DEFAULT_COLOR = { r: 124 / 255, g: 107 / 255, b: 1, a: 1 };\nconst DEFAULT_SHOW_COVARIANCE = true;\nconst DEFAULT_COVARIANCE_COLOR = { r: 198 / 255, g: 107 / 255, b: 1, a: 0.25 };\n\nconst DEFAULT_COLOR_STR = rgbaToCssString(DEFAULT_COLOR);\nconst DEFAULT_COVARIANCE_COLOR_STR = rgbaToCssString(DEFAULT_COVARIANCE_COLOR);\n\nconst DEFAULT_SETTINGS: LayerSettingsPose = {\n  type: DEFAULT_TYPE,\n  visible: false,\n  axisScale: DEFAULT_AXIS_SCALE,\n  arrowScale: DEFAULT_ARROW_SCALE,\n  color: DEFAULT_COLOR_STR,\n  showCovariance: DEFAULT_SHOW_COVARIANCE,\n  covarianceColor: DEFAULT_COVARIANCE_COLOR_STR,\n};\n\nconst TYPE_OPTIONS = [\n  { label: \"Axis\", value: \"axis\" },\n  { label: \"Arrow\", value: \"arrow\" },\n];\n\nexport type PoseUserData = BaseUserData & {\n  settings: LayerSettingsPose;\n  topic: string;\n  poseMessage: PoseStamped | PoseWithCovarianceStamped;\n  originalMessage: Record<string, RosValue>;\n  axis?: Axis;\n  arrow?: RenderableArrow;\n  sphere?: RenderableSphere;\n};\n\nexport class PoseRenderable extends Renderable<PoseUserData> {\n  public override dispose(): void {\n    this.userData.axis?.dispose();\n    this.userData.arrow?.dispose();\n    this.userData.sphere?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage;\n  }\n}\n\nexport class Poses extends SceneExtension<PoseRenderable> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Poses\", renderer);\n\n    renderer.addSchemaSubscriptions(POSE_STAMPED_DATATYPES, this.handlePoseStamped);\n    renderer.addSchemaSubscriptions(POSE_IN_FRAME_DATATYPES, this.handlePoseInFrame);\n    renderer.addSchemaSubscriptions(\n      POSE_WITH_COVARIANCE_STAMPED_DATATYPES,\n      this.handlePoseWithCovariance,\n    );\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      const isPoseStamped = topicIsConvertibleToSchema(topic, POSE_STAMPED_DATATYPES);\n      const isPoseInFrame = topicIsConvertibleToSchema(topic, POSE_IN_FRAME_DATATYPES);\n      const isPoseWithCovarianceStamped = isPoseStamped\n        ? false\n        : topicIsConvertibleToSchema(topic, POSE_WITH_COVARIANCE_STAMPED_DATATYPES);\n      if (!(isPoseStamped || isPoseWithCovarianceStamped || isPoseInFrame)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPose>;\n      const type = config.type ?? DEFAULT_TYPE;\n\n      const fields: SettingsTreeFields = {\n        type: { label: \"Type\", input: \"select\", options: TYPE_OPTIONS, value: type },\n      };\n      if (type === \"axis\") {\n        fields[\"axisScale\"] = {\n          label: \"Scale\",\n          input: \"number\",\n          step: 0.5,\n          min: 0,\n          precision: PRECISION_DISTANCE,\n          value: config.axisScale ?? DEFAULT_AXIS_SCALE,\n        };\n      } else {\n        fields[\"arrowScale\"] = {\n          label: \"Scale\",\n          input: \"vec3\",\n          labels: [\"X\", \"Y\", \"Z\"],\n          step: 0.5,\n          precision: PRECISION_DISTANCE,\n          value: config.arrowScale ?? DEFAULT_ARROW_SCALE,\n        };\n        fields[\"color\"] = {\n          label: \"Color\",\n          input: \"rgba\",\n          value: config.color ?? DEFAULT_COLOR_STR,\n        };\n      }\n\n      if (isPoseWithCovarianceStamped) {\n        const showCovariance = config.showCovariance ?? DEFAULT_SHOW_COVARIANCE;\n        const covarianceColor = config.covarianceColor ?? DEFAULT_COVARIANCE_COLOR_STR;\n\n        fields[\"showCovariance\"] = {\n          label: \"Covariance\",\n          input: \"boolean\",\n          value: showCovariance,\n        };\n        if (showCovariance) {\n          fields[\"covarianceColor\"] = {\n            label: \"Covariance Color\",\n            input: \"rgba\",\n            value: covarianceColor,\n          };\n        }\n      }\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: \"Flag\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          order: topic.name.toLocaleLowerCase(),\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPose>\n        | undefined;\n      this._updatePoseRenderable(\n        renderable,\n        renderable.userData.poseMessage,\n        renderable.userData.originalMessage,\n        renderable.userData.receiveTime,\n        { ...DEFAULT_SETTINGS, ...settings },\n      );\n    }\n  };\n\n  private handlePoseStamped = (messageEvent: PartialMessageEvent<PoseStamped>): void => {\n    const poseMessage = normalizePoseStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.addPose(messageEvent.topic, poseMessage, messageEvent.message, receiveTime);\n  };\n\n  private handlePoseInFrame = (messageEvent: PartialMessageEvent<PoseInFrame>): void => {\n    const poseMessage = normalizePoseInFrameToPoseStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.addPose(messageEvent.topic, poseMessage, messageEvent.message, receiveTime);\n  };\n\n  private handlePoseWithCovariance = (\n    messageEvent: PartialMessageEvent<PoseWithCovarianceStamped>,\n  ): void => {\n    const poseMessage = normalizePoseWithCovarianceStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.addPose(messageEvent.topic, poseMessage, messageEvent.message, receiveTime);\n  };\n\n  private addPose(\n    topic: string,\n    poseMessage: PoseStamped | PoseWithCovarianceStamped,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n  ): void {\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPose>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      renderable = new PoseRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(poseMessage.header.stamp),\n        frameId: this.renderer.normalizeFrameId(poseMessage.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        poseMessage,\n        originalMessage,\n        axis: undefined,\n        arrow: undefined,\n        sphere: undefined,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this._updatePoseRenderable(\n      renderable,\n      poseMessage,\n      originalMessage,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  }\n\n  private _updatePoseRenderable(\n    renderable: PoseRenderable,\n    poseMessage: PoseStamped | PoseWithCovarianceStamped,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n    settings: LayerSettingsPose,\n  ): void {\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(poseMessage.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(poseMessage.header.frame_id);\n    renderable.userData.poseMessage = poseMessage;\n    renderable.userData.originalMessage = originalMessage;\n\n    // Default the covariance sphere to hidden. If showCovariance is set and a valid covariance\n    // matrix is present, it will be shown\n    if (renderable.userData.sphere) {\n      renderable.userData.sphere.visible = false;\n    }\n\n    const { topic, settings: prevSettings } = renderable.userData;\n    const axisOrArrowSettingsChanged =\n      settings.type !== prevSettings.type ||\n      settings.axisScale !== prevSettings.axisScale ||\n      !vecEqual(settings.arrowScale, prevSettings.arrowScale) ||\n      settings.color !== prevSettings.color ||\n      (!renderable.userData.arrow && !renderable.userData.axis);\n\n    renderable.userData.settings = settings;\n\n    if (axisOrArrowSettingsChanged) {\n      if (renderable.userData.settings.type === \"axis\") {\n        if (renderable.userData.arrow) {\n          renderable.remove(renderable.userData.arrow);\n          renderable.userData.arrow.dispose();\n          renderable.userData.arrow = undefined;\n        }\n\n        // Create an AxisRenderable if needed\n        if (!renderable.userData.axis) {\n          const axis = new Axis(topic, this.renderer);\n          renderable.userData.axis = axis;\n          renderable.add(axis);\n        }\n\n        const scale = renderable.userData.settings.axisScale * (1 / AXIS_LENGTH);\n        renderable.userData.axis.scale.set(scale, scale, scale);\n      } else {\n        if (renderable.userData.axis) {\n          renderable.remove(renderable.userData.axis);\n          renderable.userData.axis.dispose();\n          renderable.userData.axis = undefined;\n        }\n\n        const color = stringToRgba(makeRgba(), settings.color);\n        const arrowMarker = createArrowMarker(settings.arrowScale, color);\n\n        // Create a RenderableArrow if needed\n        if (!renderable.userData.arrow) {\n          const arrow = new RenderableArrow(topic, arrowMarker, undefined, this.renderer);\n          renderable.userData.arrow = arrow;\n          renderable.add(arrow);\n        }\n\n        renderable.userData.arrow.update(arrowMarker, undefined);\n      }\n    }\n\n    if (\"covariance\" in poseMessage.pose) {\n      renderable.userData.pose = poseMessage.pose.pose;\n\n      const poseWithCovariance = poseMessage as PoseWithCovarianceStamped;\n      const sphereMarker = createSphereMarker(poseWithCovariance, renderable.userData.settings);\n      if (sphereMarker) {\n        if (!renderable.userData.sphere) {\n          renderable.userData.sphere = new RenderableSphere(\n            renderable.userData.topic,\n            sphereMarker,\n            undefined,\n            this.renderer,\n          );\n          renderable.add(renderable.userData.sphere);\n        }\n        renderable.userData.sphere.visible = renderable.userData.settings.showCovariance;\n        renderable.userData.sphere.update(sphereMarker, undefined);\n      } else if (renderable.userData.sphere) {\n        renderable.userData.sphere.visible = false;\n      }\n    } else {\n      renderable.userData.pose = poseMessage.pose;\n    }\n  }\n}\n\nexport function createArrowMarker(arrowScale: [number, number, number], color: ColorRGBA): Marker {\n  const [x, y, z] = arrowScale;\n  return {\n    header: { frame_id: \"\", stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.ARROW,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x, y, z },\n    color,\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction createSphereMarker(\n  poseMessage: PoseWithCovarianceStamped,\n  settings: LayerSettingsPose,\n): Marker | undefined {\n  // Covariance is a 6x6 matrix for position and rotation (XYZ, RPY)\n  // We currently only visualize position variance so extract the upper-left\n  // 3x1 diagonal\n  // [X, -, -, -, -, -]\n  // [-, Y, -, -, -, -]\n  // [-, -, Z, -, -, -]\n  // [-, -, -, -, -, -]\n  // [-, -, -, -, -, -]\n  // [-, -, -, -, -, -]\n  const K = poseMessage.pose.covariance;\n  const scale = { x: Math.sqrt(K[0]), y: Math.sqrt(K[7]), z: Math.sqrt(K[14]) };\n\n  return {\n    header: poseMessage.header,\n    ns: \"\",\n    id: 1,\n    type: MarkerType.SPHERE,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale,\n    color: stringToRgba(makeRgba(), settings.covarianceColor),\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nexport function normalizePoseStamped(pose: PartialMessage<PoseStamped>): PoseStamped {\n  return {\n    header: normalizeHeader(pose.header),\n    pose: normalizePose(pose.pose),\n  };\n}\n\nfunction normalizePoseInFrameToPoseStamped(pose: PartialMessage<PoseInFrame>): PoseStamped {\n  return {\n    header: { stamp: normalizeTime(pose.timestamp), frame_id: pose.frame_id ?? \"\" },\n    pose: normalizePose(pose.pose),\n  };\n}\n\nfunction normalizePoseWithCovariance(\n  pose: PartialMessage<PoseWithCovariance> | undefined,\n): PoseWithCovariance {\n  const covariance = normalizeMatrix6(pose?.covariance as number[] | undefined);\n  return { pose: normalizePose(pose?.pose), covariance };\n}\n\nfunction normalizePoseWithCovarianceStamped(\n  message: PartialMessage<PoseWithCovarianceStamped>,\n): PoseWithCovarianceStamped {\n  return {\n    header: normalizeHeader(message.header),\n    pose: normalizePoseWithCovariance(message.pose),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { PosesInFrame } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields, Topic } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { Axis, AXIS_LENGTH } from \"./Axis\";\nimport { createArrowMarker } from \"./Poses\";\nimport { RenderableArrow } from \"./markers/RenderableArrow\";\nimport { RenderableLineStrip } from \"./markers/RenderableLineStrip\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaGradient, rgbaToCssString, stringToRgba } from \"../color\";\nimport { POSES_IN_FRAME_DATATYPES } from \"../foxglove\";\nimport { vecEqual } from \"../math\";\nimport { normalizeHeader, normalizePose, normalizeTime } from \"../normalizeMessages\";\nimport {\n  PoseArray,\n  POSE_ARRAY_DATATYPES,\n  ColorRGBA,\n  NAV_PATH_DATATYPES,\n  Marker,\n  NavPath,\n  MarkerType,\n  MarkerAction,\n} from \"../ros\";\nimport {\n  BaseSettings,\n  fieldGradient,\n  fieldLineWidth,\n  fieldScaleVec3,\n  fieldSize,\n  PRECISION_DISTANCE,\n} from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose, Pose } from \"../transforms\";\n\ntype GradientRgba = [ColorRGBA, ColorRGBA];\ntype Gradient = [string, string];\ntype DisplayType = \"axis\" | \"arrow\" | \"line\";\n\nexport type LayerSettingsPoseArray = BaseSettings & {\n  type: DisplayType;\n  axisScale: number;\n  arrowScale: [number, number, number];\n  lineWidth: number;\n  gradient: Gradient;\n};\n\nconst DEFAULT_TYPE: DisplayType = \"axis\";\nconst DEFAULT_AXIS_SCALE = AXIS_LENGTH;\nconst DEFAULT_ARROW_SCALE: THREE.Vector3Tuple = [1, 0.15, 0.15];\nconst DEFAULT_LINE_WIDTH = 0.2;\nconst DEFAULT_GRADIENT: GradientRgba = [\n  { r: 124 / 255, g: 107 / 255, b: 1, a: 1 },\n  { r: 124 / 255, g: 107 / 255, b: 1, a: 0.5 },\n];\n\nconst MISMATCHED_FRAME_ID = \"MISMATCHED_FRAME_ID\";\n\nconst TIME_ZERO = { sec: 0, nsec: 0 };\nconst COLOR_WHITE = { r: 1, g: 1, b: 1, a: 1 };\n\nconst DEFAULT_GRADIENT_STR: Gradient = [\n  rgbaToCssString(DEFAULT_GRADIENT[0]!),\n  rgbaToCssString(DEFAULT_GRADIENT[1]!),\n];\n\nconst DEFAULT_SETTINGS: LayerSettingsPoseArray = {\n  visible: false,\n  type: DEFAULT_TYPE,\n  axisScale: DEFAULT_AXIS_SCALE,\n  arrowScale: DEFAULT_ARROW_SCALE,\n  lineWidth: DEFAULT_LINE_WIDTH,\n  gradient: DEFAULT_GRADIENT_STR,\n};\n\nconst TYPE_OPTIONS = [\n  { label: \"Axis\", value: \"axis\" },\n  { label: \"Arrow\", value: \"arrow\" },\n  { label: \"Line\", value: \"line\" },\n];\n\nconst tempColor1 = makeRgba();\nconst tempColor2 = makeRgba();\nconst tempColor3 = makeRgba();\n\nexport type PoseArrayUserData = BaseUserData & {\n  settings: LayerSettingsPoseArray;\n  topic: string;\n  poseArrayMessage: PoseArray;\n  originalMessage: Record<string, RosValue>;\n  axes: Axis[];\n  arrows: RenderableArrow[];\n  lineStrip?: RenderableLineStrip;\n};\n\nexport class PoseArrayRenderable extends Renderable<PoseArrayUserData> {\n  public override dispose(): void {\n    this.userData.axes.forEach((axis) => axis.dispose());\n    this.userData.arrows.forEach((arrow) => arrow.dispose());\n    this.userData.lineStrip?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage;\n  }\n\n  public removeArrows(): void {\n    for (const arrow of this.userData.arrows) {\n      this.remove(arrow);\n      arrow.dispose();\n    }\n    this.userData.arrows.length = 0;\n  }\n\n  public removeAxes(): void {\n    for (const axis of this.userData.axes) {\n      this.remove(axis);\n      axis.dispose();\n    }\n    this.userData.axes.length = 0;\n  }\n\n  public removeLineStrip(): void {\n    if (this.userData.lineStrip) {\n      this.remove(this.userData.lineStrip);\n      this.userData.lineStrip.dispose();\n      this.userData.lineStrip = undefined;\n    }\n  }\n}\n\nexport class PoseArrays extends SceneExtension<PoseArrayRenderable> {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.PoseArrays\", renderer);\n\n    renderer.addSchemaSubscriptions(POSE_ARRAY_DATATYPES, this.handlePoseArray);\n    renderer.addSchemaSubscriptions(POSES_IN_FRAME_DATATYPES, this.handlePosesInFrame);\n    renderer.addSchemaSubscriptions(NAV_PATH_DATATYPES, this.handleNavPath);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, POSE_ARRAY_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, NAV_PATH_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, POSES_IN_FRAME_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPoseArray>;\n      const displayType = config.type ?? getDefaultType(topic);\n      const { axisScale, lineWidth } = config;\n      const arrowScale = config.arrowScale ?? DEFAULT_ARROW_SCALE;\n      const gradient = config.gradient ?? DEFAULT_GRADIENT_STR;\n\n      const fields: SettingsTreeFields = {\n        type: { label: \"Type\", input: \"select\", options: TYPE_OPTIONS, value: displayType },\n      };\n      switch (displayType) {\n        case \"axis\":\n          fields[\"axisScale\"] = fieldSize(\"Scale\", axisScale, PRECISION_DISTANCE);\n          break;\n        case \"arrow\":\n          fields[\"arrowScale\"] = fieldScaleVec3(\"Scale\", arrowScale);\n          break;\n        case \"line\":\n          fields[\"lineWidth\"] = fieldLineWidth(\"Line Width\", lineWidth, DEFAULT_LINE_WIDTH);\n          break;\n      }\n\n      // Axis does not currently support gradients. This could possibly be done with tinting\n      if (displayType !== \"axis\") {\n        fields[\"gradient\"] = fieldGradient(\"Gradient\", gradient);\n      }\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: topicIsConvertibleToSchema(topic, NAV_PATH_DATATYPES) ? \"Timeline\" : \"Flag\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPoseArray>\n        | undefined;\n      const defaultType = { type: getDefaultType(this.renderer.topicsByName?.get(topicName)) };\n      this._updatePoseArrayRenderable(\n        renderable,\n        renderable.userData.poseArrayMessage,\n        renderable.userData.originalMessage,\n        renderable.userData.receiveTime,\n        { ...DEFAULT_SETTINGS, ...defaultType, ...settings },\n      );\n    }\n  };\n\n  private handlePoseArray = (messageEvent: PartialMessageEvent<PoseArray>): void => {\n    const poseArrayMessage = normalizePoseArray(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.addPoseArray(messageEvent.topic, poseArrayMessage, messageEvent.message, receiveTime);\n  };\n\n  private handleNavPath = (messageEvent: PartialMessageEvent<NavPath>): void => {\n    if (!validateNavPath(messageEvent, this.renderer)) {\n      return;\n    }\n\n    const poseArrayMessage = normalizeNavPathToPoseArray(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.addPoseArray(messageEvent.topic, poseArrayMessage, messageEvent.message, receiveTime);\n  };\n\n  private handlePosesInFrame = (messageEvent: PartialMessageEvent<PosesInFrame>): void => {\n    const poseArrayMessage = normalizePosesInFrameToPoseArray(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.addPoseArray(messageEvent.topic, poseArrayMessage, messageEvent.message, receiveTime);\n  };\n\n  private addPoseArray(\n    topic: string,\n    poseArrayMessage: PoseArray,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n  ): void {\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPoseArray>\n        | undefined;\n      const defaultType = { type: getDefaultType(this.renderer.topicsByName?.get(topic)) };\n      const settings = { ...DEFAULT_SETTINGS, ...defaultType, ...userSettings };\n\n      renderable = new PoseArrayRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(poseArrayMessage.header.stamp),\n        frameId: this.renderer.normalizeFrameId(poseArrayMessage.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        poseArrayMessage,\n        originalMessage,\n        axes: [],\n        arrows: [],\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this._updatePoseArrayRenderable(\n      renderable,\n      poseArrayMessage,\n      originalMessage,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  }\n\n  private _createAxesToMatchPoses(\n    renderable: PoseArrayRenderable,\n    poseArray: PoseArray,\n    topic: string,\n  ): void {\n    const scale = renderable.userData.settings.axisScale * (1 / AXIS_LENGTH);\n\n    // Update the scale and visibility of existing AxisRenderables as needed\n    const existingUpdateCount = Math.min(renderable.userData.axes.length, poseArray.poses.length);\n    for (let i = 0; i < existingUpdateCount; i++) {\n      const axis = renderable.userData.axes[i]!;\n      axis.visible = true;\n      axis.scale.set(scale, scale, scale);\n    }\n\n    // Create any AxisRenderables as needed\n    for (let i = renderable.userData.axes.length; i < poseArray.poses.length; i++) {\n      const axis = new Axis(topic, this.renderer);\n      renderable.userData.axes.push(axis);\n      renderable.add(axis);\n\n      // Set the scale for each new axis\n      axis.scale.set(scale, scale, scale);\n    }\n\n    // Hide any AxisRenderables as needed\n    for (let i = poseArray.poses.length; i < renderable.userData.axes.length; i++) {\n      const axis = renderable.userData.axes[i]!;\n      axis.visible = false;\n    }\n  }\n\n  private _createArrowsToMatchPoses(\n    renderable: PoseArrayRenderable,\n    poseArray: PoseArray,\n    topic: string,\n    colorStart: ColorRGBA,\n    colorEnd: ColorRGBA,\n  ): void {\n    // Generate a Marker with the right scale and color\n    const createArrowMarkerFromIndex = (i: number): Marker => {\n      const t = i / (poseArray.poses.length - 1);\n      const color = rgbaGradient(tempColor3, colorStart, colorEnd, t);\n      return createArrowMarker(renderable.userData.settings.arrowScale, color);\n    };\n\n    // Update the arrowMarker of existing RenderableArrow as needed\n    const existingUpdateCount = Math.min(renderable.userData.arrows.length, poseArray.poses.length);\n    for (let i = 0; i < existingUpdateCount; i++) {\n      const arrowMarker = createArrowMarkerFromIndex(i);\n      const arrow = renderable.userData.arrows[i]!;\n      arrow.visible = true;\n      arrow.update(arrowMarker, undefined);\n    }\n\n    // Create any RenderableArrow as needed\n    for (let i = renderable.userData.arrows.length; i < poseArray.poses.length; i++) {\n      const arrowMarker = createArrowMarkerFromIndex(i);\n      const arrow = new RenderableArrow(topic, arrowMarker, undefined, this.renderer);\n      renderable.userData.arrows.push(arrow);\n      renderable.add(arrow);\n    }\n\n    // Hide any RenderableArrow as needed\n    for (let i = poseArray.poses.length; i < renderable.userData.arrows.length; i++) {\n      const arrow = renderable.userData.arrows[i]!;\n      arrow.visible = false;\n    }\n  }\n\n  private _updatePoseArrayRenderable(\n    renderable: PoseArrayRenderable,\n    poseArrayMessage: PoseArray,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n    settings: LayerSettingsPoseArray,\n  ): void {\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(poseArrayMessage.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(poseArrayMessage.header.frame_id);\n    renderable.userData.poseArrayMessage = poseArrayMessage;\n    renderable.userData.originalMessage = originalMessage;\n\n    const { topic, settings: prevSettings } = renderable.userData;\n    const axisOrArrowSettingsChanged =\n      settings.type !== prevSettings.type ||\n      settings.axisScale !== prevSettings.axisScale ||\n      !vecEqual(settings.arrowScale, prevSettings.arrowScale) ||\n      !vecEqual(settings.gradient, prevSettings.gradient) ||\n      (renderable.userData.arrows.length === 0 && renderable.userData.axes.length === 0);\n\n    renderable.userData.settings = settings;\n\n    const colorStart = stringToRgba(tempColor1, settings.gradient[0]);\n    const colorEnd = stringToRgba(tempColor2, settings.gradient[1]);\n\n    if (axisOrArrowSettingsChanged) {\n      switch (renderable.userData.settings.type) {\n        case \"axis\":\n          renderable.removeArrows();\n          renderable.removeLineStrip();\n          break;\n        case \"arrow\":\n          renderable.removeAxes();\n          renderable.removeLineStrip();\n          break;\n        case \"line\":\n          {\n            renderable.removeArrows();\n            renderable.removeAxes();\n\n            const lineStripMarker = createLineStripMarker(\n              poseArrayMessage,\n              settings.lineWidth,\n              colorStart,\n              colorEnd,\n            );\n\n            // Create a RenderableLineStrip if needed\n            if (!renderable.userData.lineStrip) {\n              const lineStrip = new RenderableLineStrip(\n                topic,\n                lineStripMarker,\n                undefined,\n                this.renderer,\n              );\n              renderable.userData.lineStrip = lineStrip;\n              renderable.add(lineStrip);\n            }\n\n            renderable.userData.lineStrip.update(lineStripMarker, undefined);\n          }\n          break;\n      }\n    }\n\n    // Update the pose for each pose renderable\n    switch (settings.type) {\n      case \"axis\":\n        this._createAxesToMatchPoses(renderable, poseArrayMessage, topic);\n        for (let i = 0; i < poseArrayMessage.poses.length; i++) {\n          setObjectPose(renderable.userData.axes[i]!, poseArrayMessage.poses[i]!);\n        }\n        break;\n      case \"arrow\":\n        this._createArrowsToMatchPoses(renderable, poseArrayMessage, topic, colorStart, colorEnd);\n        for (let i = 0; i < poseArrayMessage.poses.length; i++) {\n          setObjectPose(renderable.userData.arrows[i]!, poseArrayMessage.poses[i]!);\n        }\n        break;\n      case \"line\": {\n        const lineStripMarker = createLineStripMarker(\n          poseArrayMessage,\n          settings.lineWidth,\n          colorStart,\n          colorEnd,\n        );\n        renderable.userData.lineStrip?.update(lineStripMarker, undefined);\n        break;\n      }\n    }\n  }\n}\n\nfunction getDefaultType(topic: Topic | undefined): DisplayType {\n  return topic != undefined && NAV_PATH_DATATYPES.has(topic.schemaName) ? \"line\" : DEFAULT_TYPE;\n}\n\nfunction setObjectPose(object: THREE.Object3D, pose: Pose): void {\n  const p = pose.position;\n  const q = pose.orientation;\n  object.position.set(p.x, p.y, p.z);\n  object.quaternion.set(q.x, q.y, q.z, q.w);\n  object.updateMatrix();\n}\n\nfunction createLineStripMarker(\n  message: PoseArray,\n  lineWidth: number,\n  colorStart: ColorRGBA,\n  colorEnd: ColorRGBA,\n): Marker {\n  // Create a gradient of colors for the line strip\n  const colors: ColorRGBA[] = [];\n  for (let i = 0; i < message.poses.length; i++) {\n    const t = i / (message.poses.length - 1);\n    colors.push(rgbaGradient(makeRgba(), colorStart, colorEnd, t));\n  }\n\n  return {\n    header: message.header,\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_STRIP,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: lineWidth, y: 1, z: 1 },\n    color: COLOR_WHITE,\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: message.poses.map((pose) => pose.position),\n    colors,\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction normalizePoseArray(poseArray: PartialMessage<PoseArray>): PoseArray {\n  return {\n    header: normalizeHeader(poseArray.header),\n    poses: poseArray.poses?.map((p) => normalizePose(p)) ?? [],\n  };\n}\n\nfunction normalizeNavPathToPoseArray(navPath: PartialMessage<NavPath>): PoseArray {\n  return {\n    header: normalizeHeader(navPath.header),\n    poses: navPath.poses?.map((p) => normalizePose(p?.pose)) ?? [],\n  };\n}\n\nfunction normalizePosesInFrameToPoseArray(poseArray: PartialMessage<PosesInFrame>): PoseArray {\n  return {\n    header: { stamp: normalizeTime(poseArray.timestamp), frame_id: poseArray.frame_id ?? \"\" },\n    poses: poseArray.poses?.map(normalizePose) ?? [],\n  };\n}\n\nfunction validateNavPath(messageEvent: PartialMessageEvent<NavPath>, renderer: Renderer): boolean {\n  const { topic, message: navPath } = messageEvent;\n  if (navPath.poses) {\n    const baseFrameId = renderer.normalizeFrameId(navPath.header?.frame_id ?? \"\");\n    for (const pose of navPath.poses) {\n      const curFrameId = renderer.normalizeFrameId(pose?.header?.frame_id ?? \"\");\n      if (baseFrameId !== curFrameId) {\n        renderer.settings.errors.addToTopic(\n          topic,\n          MISMATCHED_FRAME_ID,\n          `Path poses must all have the same frame_id. \"${baseFrameId}\" != \"${curFrameId}\"`,\n        );\n        return false;\n      }\n    }\n  }\n  return true;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableArrow } from \"./markers/RenderableArrow\";\nimport { RenderableSphere } from \"./markers/RenderableSphere\";\nimport { Renderable, BaseUserData } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { Marker, MarkerAction, MarkerType, TIME_ZERO } from \"../ros\";\nimport { makePose, Point, Pose } from \"../transforms/geometry\";\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\nconst tempVec3 = new THREE.Vector3();\nexport type PublishClickType = \"pose_estimate\" | \"pose\" | \"point\";\n\nexport type PublishClickState = \"idle\" | \"place-first-point\" | \"place-second-point\";\n\nfunction makeArrowMarker(type: PublishClickType): Marker {\n  return {\n    header: { frame_id: \"\", stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.ARROW,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: 2, y: 0.25, z: 0.25 },\n    color: type === \"pose_estimate\" ? { r: 0, g: 1, b: 1, a: 1 } : { r: 1, g: 0, b: 1, a: 1 },\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction makeSphereMarker(): Marker {\n  return {\n    header: { frame_id: \"\", stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.SPHERE,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: 0.25, y: 0.25, z: 0.25 },\n    color: { r: 1, g: 1, b: 0, a: 1 },\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nexport type PublishClickEvent =\n  | { type: \"foxglove.publish-start\" }\n  | { type: \"foxglove.publish-end\" }\n  | { type: \"foxglove.publish-type-change\" }\n  | { type: \"foxglove.publish-submit\"; publishClickType: \"point\"; point: Point }\n  | { type: \"foxglove.publish-submit\"; publishClickType: \"pose\" | \"pose_estimate\"; pose: Pose };\n\nexport class PublishClickTool extends SceneExtension<Renderable<BaseUserData>, PublishClickEvent> {\n  private sphere: RenderableSphere;\n  private arrow: RenderableArrow;\n\n  public publishClickType: PublishClickType = \"point\";\n  public state: PublishClickState = \"idle\";\n\n  private point1?: THREE.Vector3;\n  private point2?: THREE.Vector3;\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.PublishClickTool\", renderer);\n\n    this.sphere = new RenderableSphere(\"\", makeSphereMarker(), undefined, this.renderer);\n    this.arrow = new RenderableArrow(\n      \"\",\n      makeArrowMarker(this.publishClickType),\n      undefined,\n      this.renderer,\n    );\n    this.sphere.visible = false;\n    this.sphere.mesh.userData.picking = false;\n    this.arrow.visible = false;\n    this.arrow.shaftMesh.userData.picking = false;\n    this.arrow.headMesh.userData.picking = false;\n    this.add(this.sphere);\n    this.add(this.arrow);\n    this._setState(\"idle\");\n  }\n\n  public override dispose(): void {\n    super.dispose();\n    this.arrow.dispose();\n    this.sphere.dispose();\n    this.renderer.input.removeListener(\"click\", this._handleClick);\n    this.renderer.input.removeListener(\"mousemove\", this._handleMouseMove);\n  }\n\n  public setPublishClickType(type: PublishClickType): void {\n    this.publishClickType = type;\n    this.arrow.update(makeArrowMarker(this.publishClickType), undefined);\n    this.dispatchEvent({ type: \"foxglove.publish-type-change\" });\n  }\n\n  public start(): void {\n    this._setState(\"place-first-point\");\n  }\n\n  public stop(): void {\n    this._setState(\"idle\");\n  }\n\n  private _setState(state: PublishClickState): void {\n    this.state = state;\n    switch (state) {\n      case \"idle\":\n        this.point1 = this.point2 = undefined;\n        this.renderer.input.removeListener(\"click\", this._handleClick);\n        this.renderer.input.removeListener(\"mousemove\", this._handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.publish-end\" });\n        break;\n      case \"place-first-point\":\n        this.renderer.input.addListener(\"click\", this._handleClick);\n        this.renderer.input.addListener(\"mousemove\", this._handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.publish-start\" });\n        break;\n      case \"place-second-point\":\n        break;\n    }\n    this._render();\n  }\n\n  private _handleMouseMove = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        (this.point1 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        break;\n      case \"place-second-point\":\n        (this.point2 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        break;\n    }\n    this._render();\n  };\n\n  private _handleClick = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        this.point1 = worldSpaceCursorCoords.clone();\n        if (this.publishClickType === \"point\") {\n          this.dispatchEvent({\n            type: \"foxglove.publish-submit\",\n            publishClickType: this.publishClickType,\n            point: { x: this.point1.x, y: this.point1.y, z: this.point1.z },\n          });\n          this._setState(\"idle\");\n        } else {\n          this._setState(\"place-second-point\");\n        }\n        break;\n      case \"place-second-point\":\n        this.point2 = worldSpaceCursorCoords.clone();\n        if (this.point1 && this.publishClickType !== \"point\") {\n          const p = this.point1.clone();\n          const q = new THREE.Quaternion().setFromUnitVectors(\n            UNIT_X,\n            tempVec3.subVectors(this.point2, this.point1).normalize(),\n          );\n          this.dispatchEvent({\n            type: \"foxglove.publish-submit\",\n            publishClickType: this.publishClickType,\n            pose: {\n              position: { x: p.x, y: p.y, z: p.z },\n              orientation: { x: q.x, y: q.y, z: q.z, w: q.w },\n            },\n          });\n        }\n        this._setState(\"idle\");\n        break;\n    }\n    this._render();\n  };\n\n  private _render() {\n    if (this.publishClickType === \"point\") {\n      this.arrow.visible = false;\n      if (this.point1) {\n        this.sphere.visible = true;\n        this.sphere.position.copy(this.point1);\n      } else {\n        this.sphere.visible = false;\n      }\n    } else {\n      this.sphere.visible = false;\n      if (this.point1) {\n        this.arrow.visible = true;\n\n        this.arrow.position.copy(this.point1);\n        if (this.point2) {\n          this.arrow.quaternion.setFromUnitVectors(\n            UNIT_X,\n            tempVec3.subVectors(this.point2, this.point1).normalize(),\n          );\n        } else {\n          this.arrow.quaternion.set(0, 0, 0, 1);\n        }\n      } else {\n        this.arrow.visible = false;\n      }\n    }\n\n    this.renderer.queueAnimationFrame();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { round, set } from \"lodash\";\n\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { PublishClickType } from \"./PublishClickTool\";\nimport { Renderer, RendererConfig } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\n\nexport const DEFAULT_PUBLISH_SETTINGS: RendererConfig[\"publish\"] = {\n  type: \"point\",\n  poseTopic: \"/move_base_simple/goal\",\n  pointTopic: \"/clicked_point\",\n  poseEstimateTopic: \"/initialpose\",\n  poseEstimateXDeviation: 0.5,\n  poseEstimateYDeviation: 0.5,\n  poseEstimateThetaDeviation: round(Math.PI / 12, 8),\n};\n\nexport class PublishSettings extends SceneExtension {\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.PublishSettings\", renderer);\n\n    renderer.publishClickTool.addEventListener(\n      \"foxglove.publish-type-change\",\n      this.handlePublishToolChange,\n    );\n  }\n\n  public override dispose(): void {\n    this.renderer.publishClickTool.removeEventListener(\n      \"foxglove.publish-type-change\",\n      this.handlePublishToolChange,\n    );\n    super.dispose();\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const { publish } = config;\n    const handler = this.handleSettingsAction;\n\n    return [\n      {\n        path: [\"publish\"],\n        node: {\n          label: \"Publish\",\n          fields: {\n            type: {\n              label: \"Type\",\n              input: \"select\",\n              value: publish.type,\n              options: [\n                { label: \"Point (geometry_msgs/Point)\", value: \"point\" },\n                { label: \"Pose (geometry_msgs/PoseStamped)\", value: \"pose\" },\n                {\n                  label: \"Pose estimate (geometry_msgs/PoseWithCovarianceStamped)\",\n                  value: \"pose_estimate\",\n                },\n              ],\n              help: \"The type of message to publish when clicking in the scene\",\n            },\n            topic: {\n              label: \"Topic\",\n              input: \"string\",\n              value: {\n                point: publish.pointTopic,\n                pose: publish.poseTopic,\n                pose_estimate: publish.poseEstimateTopic,\n              }[publish.type],\n              help: `The topic on which to publish ${\n                { point: \"points\", pose: \"poses\", pose_estimate: \"pose estimates\" }[publish.type]\n              }`,\n            },\n            ...(publish.type === \"pose_estimate\" && {\n              poseEstimateXDeviation: {\n                label: \"X deviation\",\n                input: \"number\",\n                value: publish.poseEstimateXDeviation,\n                help: \"The X standard deviation to publish with pose estimates\",\n              },\n              poseEstimateYDeviation: {\n                label: \"Y deviation\",\n                input: \"number\",\n                value: publish.poseEstimateYDeviation,\n                help: \"The Y standard deviation to publish with pose estimates\",\n              },\n              poseEstimateThetaDeviation: {\n                label: \"Theta deviation\",\n                input: \"number\",\n                value: publish.poseEstimateThetaDeviation,\n                help: \"The theta standard deviation to publish with pose estimates\",\n              },\n            }),\n          },\n          defaultExpansionState: \"collapsed\",\n          handler,\n        },\n      },\n    ];\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const path = action.payload.path;\n    const category = path[0]!;\n    const value = action.payload.value;\n    if (category === \"publish\") {\n      // Update the configuration\n      if (path[1] === \"topic\") {\n        this.renderer.updateConfig((draft) => {\n          switch (draft.publish.type) {\n            case \"point\":\n              draft.publish.pointTopic =\n                (value as string | undefined) ?? DEFAULT_PUBLISH_SETTINGS.pointTopic;\n              break;\n            case \"pose\":\n              draft.publish.poseTopic =\n                (value as string | undefined) ?? DEFAULT_PUBLISH_SETTINGS.poseTopic;\n              break;\n            case \"pose_estimate\":\n              draft.publish.poseEstimateTopic =\n                (value as string | undefined) ?? DEFAULT_PUBLISH_SETTINGS.poseEstimateTopic;\n              break;\n          }\n        });\n      } else if (path[1] === \"type\") {\n        // ThreeDeeRender will update the config based on this change\n        if (this.renderer.publishClickTool.publishClickType !== value) {\n          this.renderer.publishClickTool.setPublishClickType(value as PublishClickType);\n          this.renderer.publishClickTool.stop();\n        }\n      } else {\n        this.renderer.updateConfig((draft) => set(draft, path, value));\n      }\n    } else {\n      return;\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  private handlePublishToolChange = (): void => {\n    this.renderer.updateConfig((draft) => {\n      draft.publish.type = this.renderer.publishClickTool.publishClickType;\n      return draft;\n    });\n    this.updateSettingsTree();\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nexport enum PrimitiveType {\n  CUBES = \"CUBES\",\n  MODELS = \"MODELS\",\n  LINES = \"LINES\",\n  CYLINDERS = \"CYLINDERS\",\n  ARROWS = \"ARROWS\",\n  SPHERES = \"SPHERES\",\n  TEXTS = \"TEXTS\",\n  TRIANGLES = \"TRIANGLES\",\n}\n\nexport const ALL_PRIMITIVE_TYPES = [\n  PrimitiveType.CUBES,\n  PrimitiveType.MODELS,\n  PrimitiveType.LINES,\n  PrimitiveType.CYLINDERS,\n  PrimitiveType.ARROWS,\n  PrimitiveType.SPHERES,\n  PrimitiveType.TEXTS,\n  PrimitiveType.TRIANGLES,\n];\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SceneEntity, SceneEntityDeletion, SceneEntityDeletionType } from \"@foxglove/schemas\";\n\nimport { LayerSettingsEntity } from \"./SceneEntities\";\nimport { PrimitivePool } from \"./primitives/PrimitivePool\";\nimport { RenderableArrows } from \"./primitives/RenderableArrows\";\nimport { RenderableCubes } from \"./primitives/RenderableCubes\";\nimport { RenderableCylinders } from \"./primitives/RenderableCylinders\";\nimport { RenderableLines } from \"./primitives/RenderableLines\";\nimport { RenderableModels } from \"./primitives/RenderableModels\";\nimport { RenderableSpheres } from \"./primitives/RenderableSpheres\";\nimport { RenderableTexts } from \"./primitives/RenderableTexts\";\nimport { RenderableTriangles } from \"./primitives/RenderableTriangles\";\nimport { ALL_PRIMITIVE_TYPES, PrimitiveType } from \"./primitives/types\";\nimport { missingTransformMessage, MISSING_TRANSFORM } from \"./transforms\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { updatePose } from \"../updatePose\";\n\nconst INVALID_DELETION_TYPE = \"INVALID_DELETION_TYPE\";\n\nexport type EntityTopicUserData = BaseUserData & {\n  topic: string;\n  settings: LayerSettingsEntity;\n};\n\ntype EntityRenderables = {\n  [PrimitiveType.CUBES]?: RenderableCubes;\n  [PrimitiveType.MODELS]?: RenderableModels;\n  [PrimitiveType.LINES]?: RenderableLines;\n  [PrimitiveType.CYLINDERS]?: RenderableCylinders;\n  [PrimitiveType.ARROWS]?: RenderableArrows;\n  [PrimitiveType.SPHERES]?: RenderableSpheres;\n  [PrimitiveType.TEXTS]?: RenderableTexts;\n  [PrimitiveType.TRIANGLES]?: RenderableTriangles;\n};\n\nconst PRIMITIVE_KEYS = {\n  [PrimitiveType.CUBES]: \"cubes\",\n  [PrimitiveType.MODELS]: \"models\",\n  [PrimitiveType.LINES]: \"lines\",\n  [PrimitiveType.CYLINDERS]: \"cylinders\",\n  [PrimitiveType.ARROWS]: \"arrows\",\n  [PrimitiveType.SPHERES]: \"spheres\",\n  [PrimitiveType.TEXTS]: \"texts\",\n  [PrimitiveType.TRIANGLES]: \"triangles\",\n} as const;\n\nexport class TopicEntities extends Renderable<EntityTopicUserData> {\n  public override pickable = false;\n  private renderablesById = new Map<string, EntityRenderables>();\n\n  public constructor(\n    name: string,\n    private primitivePool: PrimitivePool,\n    renderer: Renderer,\n    userData: EntityTopicUserData,\n  ) {\n    super(name, renderer, userData);\n  }\n\n  public override dispose(): void {\n    this.children.length = 0;\n    this._deleteAllEntities();\n  }\n\n  public updateSettings(): void {\n    // Updates each individual primitive renderable using the current topic settings\n    for (const renderables of this.renderablesById.values()) {\n      for (const renderable of Object.values(renderables)) {\n        renderable.updateSettings(this.userData.settings);\n      }\n    }\n  }\n\n  public setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    for (const renderables of this.renderablesById.values()) {\n      for (const renderable of Object.values(renderables)) {\n        renderable.setColorScheme(colorScheme);\n      }\n    }\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    this.visible = this.userData.settings.visible;\n    if (!this.visible) {\n      this.renderer.settings.errors.clearTopic(this.topic);\n      return;\n    }\n\n    for (const renderables of this.renderablesById.values()) {\n      for (const renderable of Object.values(renderables)) {\n        const entity = renderable.userData.entity;\n        if (!entity) {\n          continue;\n        }\n\n        // Check if this entity has expired\n        const expiresAt = renderable.userData.expiresAt;\n        if (expiresAt != undefined && currentTime > expiresAt) {\n          this._deleteEntity(entity.id);\n          break;\n        }\n\n        const frameId = this.renderer.normalizeFrameId(entity.frame_id);\n        const srcTime = entity.frame_locked ? currentTime : toNanoSec(entity.timestamp);\n        const updated = updatePose(\n          renderable,\n          this.renderer.transformTree,\n          renderFrameId,\n          fixedFrameId,\n          frameId,\n          currentTime,\n          srcTime,\n        );\n        renderable.visible = updated;\n        const topic = this.userData.topic;\n        if (!updated) {\n          const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n          this.renderer.settings.errors.addToTopic(topic, MISSING_TRANSFORM, message);\n        } else {\n          this.renderer.settings.errors.removeFromTopic(topic, MISSING_TRANSFORM);\n        }\n      }\n    }\n  }\n\n  public addOrUpdateEntity(entity: SceneEntity, receiveTime: bigint): void {\n    let renderables = this.renderablesById.get(entity.id);\n    if (!renderables) {\n      renderables = {};\n      this.renderablesById.set(entity.id, renderables);\n    }\n\n    for (const primitiveType of ALL_PRIMITIVE_TYPES) {\n      const hasPrimitives = entity[PRIMITIVE_KEYS[primitiveType]].length > 0;\n      let renderable = renderables[primitiveType];\n      if (hasPrimitives) {\n        if (!renderable) {\n          renderable = this.primitivePool.acquire(primitiveType);\n          renderable.name = `${entity.id}:${primitiveType} on ${this.topic}`;\n          renderable.userData.settingsPath = this.userData.settingsPath;\n          renderable.setColorScheme(this.renderer.colorScheme);\n          // @ts-expect-error TS doesn't know that renderable matches primitiveType\n          renderables[primitiveType] = renderable;\n          this.add(renderable);\n        }\n        renderable.update(this.userData.topic, entity, this.userData.settings, receiveTime);\n      } else if (renderable) {\n        this.remove(renderable);\n        delete renderables[primitiveType];\n        this.primitivePool.release(primitiveType, renderable);\n      }\n    }\n  }\n\n  public deleteEntities(deletion: SceneEntityDeletion): void {\n    switch (deletion.type) {\n      case SceneEntityDeletionType.MATCHING_ID:\n        this._deleteEntity(deletion.id);\n        break;\n      case SceneEntityDeletionType.ALL:\n        this._deleteAllEntities();\n        break;\n      default:\n        // Unknown action\n        this.renderer.settings.errors.addToTopic(\n          this.topic,\n          INVALID_DELETION_TYPE,\n          `Invalid deletion type ${deletion.type}`,\n        );\n    }\n  }\n\n  private _removeRenderables(renderables: EntityRenderables): void {\n    for (const [primitiveType, primitive] of Object.entries(renderables) as [\n      PrimitiveType,\n      EntityRenderables[PrimitiveType],\n    ][]) {\n      if (primitive) {\n        this.remove(primitive);\n        this.primitivePool.release(primitiveType, primitive);\n      }\n    }\n  }\n\n  private _deleteEntity(id: string) {\n    const renderables = this.renderablesById.get(id);\n    if (renderables) {\n      this._removeRenderables(renderables);\n    }\n    this.renderablesById.delete(id);\n  }\n\n  private _deleteAllEntities() {\n    for (const renderables of this.renderablesById.values()) {\n      this._removeRenderables(renderables);\n    }\n    this.renderablesById.clear();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SceneEntity } from \"@foxglove/schemas\";\nimport { BaseUserData, Renderable } from \"@foxglove/studio-base/panels/ThreeDeeRender/Renderable\";\nimport { Renderer } from \"@foxglove/studio-base/panels/ThreeDeeRender/Renderer\";\nimport { LayerSettingsEntity } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/SceneEntities\";\nimport { RosValue } from \"@foxglove/studio-base/players/types\";\nimport { emptyPose } from \"@foxglove/studio-base/util/Pose\";\n\nexport type EntityRenderableUserData = BaseUserData & {\n  topic?: string;\n  entity?: SceneEntity;\n  expiresAt?: bigint;\n  settings?: LayerSettingsEntity;\n};\n\nconst PRIMITIVE_DEFAULT_SETTINGS: LayerSettingsEntity = {\n  showOutlines: true,\n  visible: false,\n  color: undefined,\n  selectedIdVariable: undefined,\n};\nexport class RenderablePrimitive extends Renderable<EntityRenderableUserData> {\n  public constructor(\n    name: string,\n    renderer: Renderer,\n    userData: EntityRenderableUserData = {\n      receiveTime: -1n,\n      messageTime: -1n,\n      frameId: \"\",\n      pose: emptyPose(),\n      settings: PRIMITIVE_DEFAULT_SETTINGS,\n      settingsPath: [],\n      entity: undefined,\n    },\n  ) {\n    super(name, renderer, userData);\n  }\n  public update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    this.userData.topic = topic;\n    this.userData.entity = entity;\n    this.userData.settings = settings;\n    this.userData.receiveTime = receiveTime;\n  }\n\n  public override idFromMessage(): number | string | undefined {\n    return this.userData.entity?.id;\n  }\n\n  public override selectedIdVariable(): string | undefined {\n    const settings = this.getSettings();\n    return settings?.selectedIdVariable;\n  }\n\n  public getSettings(): LayerSettingsEntity | undefined {\n    if (this.userData.topic == undefined) {\n      return undefined;\n    }\n    return this.userData.settings;\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.entity ?? {};\n  }\n\n  public setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    void colorScheme;\n  }\n\n  public prepareForReuse(): void {\n    this.userData.entity = undefined;\n    this.userData.pose = emptyPose();\n  }\n\n  public addError(errorId: string, message: string): void {\n    this.renderer.settings.errors.add(this.userData.settingsPath, errorId, message);\n  }\n\n  public clearErrors(): void {\n    // presumably a renderable has not been assigned a settings path if it is 0\n    // running clearPath([]) will clear all errors from the settings tree\n    if (this.userData.settingsPath.length > 0) {\n      this.renderer.settings.errors.clearPath(this.userData.settingsPath);\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\n// Same as MeshStandardMaterial, but supporting a per-instance alpha using an `instanceOpacity` attribute.\n// Based on https://github.com/pailhead/three-instanced-mesh/pull/35\nexport class MeshStandardMaterialWithInstanceOpacity extends THREE.MeshStandardMaterial {\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.vertexShader = shader.vertexShader\n      .replace(\n        \"#include <color_pars_vertex>\",\n        `\n        #include <color_pars_vertex>\n        attribute float instanceOpacity;\n        varying float vInstanceOpacity;\n        `,\n      )\n      .replace(\n        \"#include <color_vertex>\",\n        `\n        #include <color_vertex>\n        vInstanceOpacity = instanceOpacity;\n        `,\n      );\n\n    shader.fragmentShader = shader.fragmentShader\n      .replace(\n        \"#include <color_pars_fragment>\",\n        `\n        #include <color_pars_fragment>\n        varying float vInstanceOpacity;\n        `,\n      )\n      .replace(\n        \"#include <color_fragment>\",\n        `\n        #include <color_fragment>\n        diffuseColor.a = vInstanceOpacity * opacity;\n        `,\n      );\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { ArrowPrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { Renderer } from \"../../Renderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableArrows extends RenderablePrimitive {\n  // Each needs its own geometries because we attach additional custom attributes to them.\n  // so we will need to clone or copy when assigning from shared geometry\n  private shaftGeometry: THREE.CylinderGeometry;\n  private headGeometry: THREE.ConeGeometry;\n  private shaftOutlineGeometry: THREE.InstancedBufferGeometry;\n  private headOutlineGeometry: THREE.InstancedBufferGeometry;\n\n  private shaftMesh: THREE.InstancedMesh<\n    THREE.CylinderGeometry,\n    MeshStandardMaterialWithInstanceOpacity\n  >;\n  private headMesh: THREE.InstancedMesh<\n    THREE.ConeGeometry,\n    MeshStandardMaterialWithInstanceOpacity\n  >;\n  private instanceOpacity: THREE.InstancedBufferAttribute;\n  private material = new MeshStandardMaterialWithInstanceOpacity({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n  });\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  private maxInstances: number;\n\n  private shaftOutline: THREE.LineSegments;\n  private headOutline: THREE.LineSegments;\n\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer, undefined);\n\n    this.maxInstances = 16;\n    this.instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.maxInstances),\n      1,\n    );\n\n    this.shaftGeometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-shaft`, createShaftGeometry)\n      .clone() as THREE.CylinderGeometry;\n    this.shaftGeometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n    this.shaftMesh = new THREE.InstancedMesh(this.shaftGeometry, this.material, this.maxInstances);\n    this.shaftMesh.count = 0;\n    this.add(this.shaftMesh);\n\n    this.headGeometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-head`, createHeadGeometry)\n      .clone() as THREE.ConeGeometry;\n    this.headGeometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n    this.headMesh = new THREE.InstancedMesh(this.headGeometry, this.material, this.maxInstances);\n    this.headMesh.count = 0;\n    this.add(this.headMesh);\n\n    const shaftEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaftedges`,\n      () => createShaftEdgesGeometry(this.shaftGeometry),\n    );\n    this.shaftOutlineGeometry = new THREE.InstancedBufferGeometry().copy(shaftEdgesGeometry);\n    this.shaftOutlineGeometry.setAttribute(\"instanceMatrix\", this.shaftMesh.instanceMatrix);\n    this.shaftOutline = new THREE.LineSegments(\n      this.shaftOutlineGeometry,\n      renderer.instancedOutlineMaterial,\n    );\n    this.shaftOutline.frustumCulled = false;\n    this.shaftOutline.userData.picking = false;\n    this.add(this.shaftOutline);\n\n    const headEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-headedges`,\n      () => createHeadEdgesGeometry(this.headGeometry),\n    );\n    this.headOutlineGeometry = new THREE.InstancedBufferGeometry().copy(headEdgesGeometry);\n    this.headOutlineGeometry.setAttribute(\"instanceMatrix\", this.headMesh.instanceMatrix);\n    this.headOutline = new THREE.LineSegments(\n      this.headOutlineGeometry,\n      renderer.instancedOutlineMaterial,\n    );\n    this.headOutline.frustumCulled = false;\n    this.headOutline.userData.picking = false;\n    this.add(this.headOutline);\n  }\n\n  private _ensureCapacity(numArrows: number) {\n    if (numArrows > this.maxInstances) {\n      const newCapacity = Math.ceil(numArrows * 1.5) + 16;\n      this.maxInstances = newCapacity;\n\n      this.instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.maxInstances),\n        1,\n      );\n\n      this.shaftMesh.removeFromParent();\n      this.shaftMesh.dispose();\n      this.shaftMesh = new THREE.InstancedMesh(\n        this.shaftGeometry,\n        this.material,\n        this.maxInstances,\n      );\n      this.shaftGeometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n      this.add(this.shaftMesh);\n\n      this.headMesh.removeFromParent();\n      this.headMesh.dispose();\n      this.headMesh = new THREE.InstancedMesh(this.headGeometry, this.material, this.maxInstances);\n      this.headGeometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n      this.add(this.headMesh);\n\n      // THREE.js doesn't correctly recompute the new max instance count when dynamically\n      // reassigning the attribute of InstancedBufferGeometry, so we just create a new geometry\n\n      this.shaftOutlineGeometry.dispose();\n      const shaftEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n        `${this.constructor.name}-shaftedges`,\n        () => createShaftEdgesGeometry(this.shaftGeometry),\n      );\n      this.shaftOutlineGeometry = new THREE.InstancedBufferGeometry().copy(shaftEdgesGeometry);\n      this.shaftOutlineGeometry.instanceCount = newCapacity;\n      this.shaftOutlineGeometry.setAttribute(\"instanceMatrix\", this.shaftMesh.instanceMatrix);\n      this.shaftOutline.geometry = this.shaftOutlineGeometry;\n\n      this.headOutlineGeometry.dispose();\n      const headEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n        `${this.constructor.name}-headedges`,\n        () => createHeadEdgesGeometry(this.headGeometry),\n      );\n      this.headOutlineGeometry = new THREE.InstancedBufferGeometry().copy(headEdgesGeometry);\n      this.headOutlineGeometry.instanceCount = newCapacity;\n      this.headOutlineGeometry.setAttribute(\"instanceMatrix\", this.headMesh.instanceMatrix);\n      this.headOutline.geometry = this.headOutlineGeometry;\n    }\n  }\n\n  private _updateMesh(arrows: ArrowPrimitive[]) {\n    let isTransparent = false;\n\n    this._ensureCapacity(arrows.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const arrow of arrows) {\n      const color = overrideColor ?? arrow.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.shaftMesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.headMesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.instanceOpacity.setX(i, color.a);\n      tempQuat.set(\n        arrow.pose.orientation.x,\n        arrow.pose.orientation.y,\n        arrow.pose.orientation.z,\n        arrow.pose.orientation.w,\n      );\n      this.shaftMesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(arrow.pose.position.x, arrow.pose.position.y, arrow.pose.position.z),\n          tempQuat,\n          tempVec3_2.set(arrow.shaft_length, arrow.shaft_diameter, arrow.shaft_diameter),\n        ),\n      );\n\n      // offset head position by shaft length in direction of arrow pose\n      tempVec3.add(tempVec3_2.set(arrow.shaft_length, 0, 0).applyQuaternion(tempQuat));\n\n      this.headMesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3,\n          tempQuat,\n          tempVec3_2.set(arrow.head_length, arrow.head_diameter, arrow.head_diameter),\n        ),\n      );\n      i++;\n    }\n\n    if (this.material.transparent !== isTransparent) {\n      this.material.transparent = isTransparent;\n      this.material.depthWrite = !isTransparent;\n      this.material.needsUpdate = true;\n    }\n\n    if (this.shaftMesh.count === 0 && arrows.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.material.needsUpdate = true;\n    }\n    this.shaftMesh.count = arrows.length;\n    this.headMesh.count = arrows.length;\n    this.shaftOutlineGeometry.instanceCount = arrows.length;\n    this.headOutlineGeometry.instanceCount = arrows.length;\n    this.shaftMesh.instanceMatrix.needsUpdate = true;\n    this.headMesh.instanceMatrix.needsUpdate = true;\n    this.instanceOpacity.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 primitives\n    if (this.shaftMesh.instanceColor) {\n      this.shaftMesh.instanceColor.needsUpdate = true;\n    }\n    if (this.headMesh.instanceColor) {\n      this.headMesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.material.dispose();\n    this.shaftMesh.dispose();\n    this.headMesh.dispose();\n    this.shaftGeometry.dispose();\n    this.headGeometry.dispose();\n    this.shaftOutlineGeometry.dispose();\n    this.headOutlineGeometry.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateMesh(entity.arrows);\n\n      this.headOutline.visible = settings.showOutlines ?? true;\n      this.shaftOutline.visible = settings.showOutlines ?? true;\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction createShaftGeometry() {\n  const shaftGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, 16);\n  // Adjust cylinder so ends are centered on (0,0,0) and (1,0,0)\n  shaftGeometry.rotateZ(-Math.PI / 2).translate(0.5, 0, 0);\n  shaftGeometry.computeBoundingSphere();\n  return shaftGeometry;\n}\n\nfunction createShaftEdgesGeometry(geometry: THREE.CylinderGeometry) {\n  const shaftEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  shaftEdgesGeometry.computeBoundingSphere();\n  return shaftEdgesGeometry;\n}\n\nfunction createHeadGeometry() {\n  const headGeometry = new THREE.ConeGeometry(0.5, 1, 16);\n  // Adjust cone so base is centered on (0,0,0) and tip is at (1,0,0)\n  headGeometry.rotateZ(-Math.PI / 2).translate(0.5, 0, 0);\n  headGeometry.computeBoundingSphere();\n  return headGeometry;\n}\n\nfunction createHeadEdgesGeometry(geometry: THREE.ConeGeometry) {\n  const headEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  headEdgesGeometry.computeBoundingSphere();\n  return headEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CubePrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { Renderer } from \"../../Renderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableCubes extends RenderablePrimitive {\n  // Each RenderableCubes needs its own geometry because we attach additional custom attributes to it.\n  private mesh: THREE.InstancedMesh<THREE.BoxGeometry, MeshStandardMaterialWithInstanceOpacity>;\n  private instanceOpacity: THREE.InstancedBufferAttribute;\n  private material = new MeshStandardMaterialWithInstanceOpacity({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n  });\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  private maxInstances: number;\n\n  private outlineGeometry: THREE.InstancedBufferGeometry;\n  private outline: THREE.LineSegments;\n  private geometry: THREE.BoxGeometry;\n  // actual shared geometry across instances, only copy -- do not modify\n  // stored for ease of use\n  private sharedEdgesGeometry: THREE.EdgesGeometry<THREE.BufferGeometry>;\n\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer);\n\n    // Cube mesh\n    this.geometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-cube`, createCubeGeometry)\n      .clone() as THREE.BoxGeometry;\n\n    this.maxInstances = 16;\n    this.mesh = new THREE.InstancedMesh(this.geometry, this.material, this.maxInstances);\n    this.instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.maxInstances),\n      1,\n    );\n    this.geometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n    this.mesh.count = 0;\n    this.add(this.mesh);\n\n    // Cube outline\n    this.sharedEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-edges`,\n      () => createEdgesGeometry(this.geometry),\n    );\n    this.outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.sharedEdgesGeometry);\n    this.outlineGeometry.setAttribute(\"instanceMatrix\", this.mesh.instanceMatrix);\n    this.outline = new THREE.LineSegments(this.outlineGeometry, renderer.instancedOutlineMaterial);\n    this.outline.frustumCulled = false;\n    this.outline.userData.picking = false;\n    this.add(this.outline);\n  }\n\n  private _ensureCapacity(numCubes: number) {\n    if (numCubes > this.maxInstances) {\n      const newCapacity = Math.trunc(numCubes * 1.5) + 16;\n      this.maxInstances = newCapacity;\n\n      this.mesh.removeFromParent();\n      this.mesh.dispose();\n      this.mesh = new THREE.InstancedMesh(this.geometry, this.material, this.maxInstances);\n      this.instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.maxInstances),\n        1,\n      );\n      this.geometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n      this.add(this.mesh);\n\n      // THREE.js doesn't correctly recompute the new max instance count when dynamically\n      // reassigning the attribute of InstancedBufferGeometry, so we just create a new geometry\n      this.outlineGeometry.dispose();\n      this.outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.sharedEdgesGeometry);\n      this.outlineGeometry.instanceCount = newCapacity;\n      this.outlineGeometry.setAttribute(\"instanceMatrix\", this.mesh.instanceMatrix);\n      this.outline.geometry = this.outlineGeometry;\n    }\n  }\n\n  private _updateMesh(cubes: CubePrimitive[]) {\n    let isTransparent = false;\n\n    this._ensureCapacity(cubes.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const cube of cubes) {\n      const color = overrideColor ?? cube.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.mesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.instanceOpacity.setX(i, color.a);\n      this.mesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(cube.pose.position.x, cube.pose.position.y, cube.pose.position.z),\n          tempQuat.set(\n            cube.pose.orientation.x,\n            cube.pose.orientation.y,\n            cube.pose.orientation.z,\n            cube.pose.orientation.w,\n          ),\n          tempVec3_2.set(cube.size.x, cube.size.y, cube.size.z),\n        ),\n      );\n      i++;\n    }\n\n    if (this.material.transparent !== isTransparent) {\n      this.material.transparent = isTransparent;\n      this.material.depthWrite = !isTransparent;\n      this.material.needsUpdate = true;\n    }\n\n    if (this.mesh.count === 0 && cubes.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.material.needsUpdate = true;\n    }\n    this.mesh.count = cubes.length;\n    this.outlineGeometry.instanceCount = cubes.length;\n    this.mesh.instanceMatrix.needsUpdate = true;\n    this.instanceOpacity.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 primitives\n    if (this.mesh.instanceColor) {\n      this.mesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.mesh.dispose();\n    this.geometry.dispose();\n    this.material.dispose();\n    this.outlineGeometry.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateMesh(entity.cubes);\n      this.outline.visible = settings.showOutlines ?? true;\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction createCubeGeometry(): THREE.BoxGeometry {\n  const cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\n  cubeGeometry.computeBoundingSphere();\n  return cubeGeometry;\n}\n\nfunction createEdgesGeometry(cubeGeometry: THREE.BoxGeometry): THREE.EdgesGeometry {\n  const cubeEdgesGeometry = new THREE.EdgesGeometry(cubeGeometry, 40);\n  cubeEdgesGeometry.computeBoundingSphere();\n  return cubeEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CylinderPrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { Renderer } from \"../../Renderer\";\nimport { DARK_OUTLINE, LIGHT_OUTLINE, makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableCylinders extends RenderablePrimitive {\n  // Each RenderableCylinders needs its own geometry because we attach additional custom attributes to it.\n  private mesh: THREE.InstancedMesh<\n    THREE.CylinderGeometry,\n    MeshStandardMaterialWithInstanceOpacity\n  >;\n  private geometry: THREE.CylinderGeometry;\n  // actual shared geometry across instances, only copy -- do not modify\n  // stored for ease of use\n  private sharedEdgesGeometry: THREE.EdgesGeometry<THREE.BufferGeometry>;\n  private instanceOpacity: THREE.InstancedBufferAttribute;\n  private instanceTopScale: THREE.InstancedBufferAttribute;\n  private instanceBottomScale: THREE.InstancedBufferAttribute;\n  private outlineMaterial = new CylinderOutlineMaterial();\n  private material = new CylinderMaterial();\n  private pickingMaterial = new CylinderPickingMaterial();\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  private maxInstances: number;\n\n  private outlineGeometry: THREE.InstancedBufferGeometry;\n  private outline: THREE.LineSegments;\n\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer);\n\n    this.geometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-cylinder`, createGeometry)\n      .clone() as THREE.CylinderGeometry;\n    this.maxInstances = 16;\n    this.mesh = new THREE.InstancedMesh(this.geometry, this.material, this.maxInstances);\n    this.mesh.userData.pickingMaterial = this.pickingMaterial;\n    this.instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.maxInstances),\n      1,\n    );\n    this.instanceBottomScale = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.maxInstances),\n      1,\n    );\n    this.instanceTopScale = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.maxInstances),\n      1,\n    );\n    this.geometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n    this.geometry.setAttribute(\"instanceBottomScale\", this.instanceBottomScale);\n    this.geometry.setAttribute(\"instanceTopScale\", this.instanceTopScale);\n    this.mesh.count = 0;\n    this.add(this.mesh);\n\n    this.sharedEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-edges`,\n      () => createEdgesGeometry(this.geometry),\n    );\n    this.outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.sharedEdgesGeometry);\n    this.outlineGeometry.setAttribute(\"instanceMatrix\", this.mesh.instanceMatrix);\n    this.outlineGeometry.setAttribute(\"instanceBottomScale\", this.instanceBottomScale);\n    this.outlineGeometry.setAttribute(\"instanceTopScale\", this.instanceTopScale);\n    this.outline = new THREE.LineSegments(this.outlineGeometry, this.outlineMaterial);\n    this.outline.frustumCulled = false;\n    this.outline.userData.picking = false;\n    this.add(this.outline);\n  }\n\n  public override setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    this.outlineMaterial.color.copy(colorScheme === \"dark\" ? DARK_OUTLINE : LIGHT_OUTLINE);\n    this.outlineMaterial.needsUpdate = true;\n  }\n\n  private _ensureCapacity(numCubes: number) {\n    if (numCubes > this.maxInstances) {\n      const newCapacity = Math.trunc(numCubes * 1.5) + 16;\n      this.maxInstances = newCapacity;\n\n      this.instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.maxInstances),\n        1,\n      );\n      this.instanceBottomScale = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.maxInstances),\n        1,\n      );\n      this.instanceTopScale = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.maxInstances),\n        1,\n      );\n      this.geometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n      this.geometry.setAttribute(\"instanceBottomScale\", this.instanceBottomScale);\n      this.geometry.setAttribute(\"instanceTopScale\", this.instanceTopScale);\n\n      this.mesh.removeFromParent();\n      this.mesh.dispose();\n      this.mesh = new THREE.InstancedMesh(this.geometry, this.material, this.maxInstances);\n      this.mesh.userData.pickingMaterial = this.pickingMaterial;\n      this.add(this.mesh);\n\n      // THREE.js doesn't correctly recompute the new max instance count when dynamically\n      // reassigning the attribute of InstancedBufferGeometry, so we just create a new geometry\n      this.outlineGeometry.dispose();\n      this.outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.sharedEdgesGeometry);\n      this.outlineGeometry.instanceCount = newCapacity;\n      this.outlineGeometry.setAttribute(\"instanceMatrix\", this.mesh.instanceMatrix);\n      this.outlineGeometry.setAttribute(\"instanceBottomScale\", this.instanceBottomScale);\n      this.outlineGeometry.setAttribute(\"instanceTopScale\", this.instanceTopScale);\n      this.outline.geometry = this.outlineGeometry;\n    }\n  }\n\n  private _updateMesh(cylinders: CylinderPrimitive[]) {\n    let isTransparent = false;\n\n    this._ensureCapacity(cylinders.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const cylinder of cylinders) {\n      const color = overrideColor ?? cylinder.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.mesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.instanceOpacity.setX(i, color.a);\n      this.instanceBottomScale.setX(i, cylinder.bottom_scale);\n      this.instanceTopScale.setX(i, cylinder.top_scale);\n      this.mesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(\n            cylinder.pose.position.x,\n            cylinder.pose.position.y,\n            cylinder.pose.position.z,\n          ),\n          tempQuat.set(\n            cylinder.pose.orientation.x,\n            cylinder.pose.orientation.y,\n            cylinder.pose.orientation.z,\n            cylinder.pose.orientation.w,\n          ),\n          tempVec3_2.set(cylinder.size.x, cylinder.size.y, cylinder.size.z),\n        ),\n      );\n      i++;\n    }\n\n    if (this.material.transparent !== isTransparent) {\n      this.material.transparent = isTransparent;\n      this.material.depthWrite = !isTransparent;\n      this.material.needsUpdate = true;\n    }\n\n    if (this.mesh.count === 0 && cylinders.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.material.needsUpdate = true;\n    }\n    this.mesh.count = cylinders.length;\n    this.outlineGeometry.instanceCount = cylinders.length;\n    this.mesh.instanceMatrix.needsUpdate = true;\n    this.instanceOpacity.needsUpdate = true;\n    this.instanceBottomScale.needsUpdate = true;\n    this.instanceTopScale.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 primitives\n    if (this.mesh.instanceColor) {\n      this.mesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.mesh.dispose();\n    this.geometry.dispose();\n    this.material.dispose();\n    this.pickingMaterial.dispose();\n    this.outlineMaterial.dispose();\n    this.outlineGeometry.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateMesh(entity.cylinders);\n      this.outline.visible = settings.showOutlines ?? true;\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\nfunction createGeometry() {\n  const cylinderGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, 16);\n  cylinderGeometry.rotateX(Math.PI / 2);\n  cylinderGeometry.computeBoundingSphere();\n  return cylinderGeometry;\n}\n\nfunction createEdgesGeometry(geometry: THREE.CylinderGeometry) {\n  const cylinderEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  cylinderEdgesGeometry.computeBoundingSphere();\n  return cylinderEdgesGeometry;\n}\n\n/** Modify the given vertex shader so it transforms positions to support bottom_scale and top_scale. */\nfunction makeCylinderVertexShader(source: string): string {\n  return source\n    .replace(\n      \"#include <color_pars_vertex>\",\n      `\n  #include <color_pars_vertex>\n  attribute float instanceBottomScale, instanceTopScale;\n  `,\n    )\n    .replace(\n      \"#include <begin_vertex>\",\n      `\n  #include <begin_vertex>\n  transformed.xy *= mix(instanceBottomScale, instanceTopScale, transformed.z + 0.5);\n  `,\n    );\n}\n\nclass CylinderMaterial extends MeshStandardMaterialWithInstanceOpacity {\n  public constructor() {\n    super({ metalness: 0, roughness: 1, dithering: true });\n  }\n\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.vertexShader = makeCylinderVertexShader(shader.vertexShader);\n  }\n}\n\nclass CylinderOutlineMaterial extends THREE.LineBasicMaterial {\n  public constructor() {\n    super();\n    this.defines ??= {};\n    this.defines.USE_INSTANCING = true;\n  }\n\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.vertexShader = makeCylinderVertexShader(shader.vertexShader);\n  }\n}\n\nclass CylinderPickingMaterial extends THREE.ShaderMaterial {\n  public constructor() {\n    super({\n      vertexShader: makeCylinderVertexShader(THREE.ShaderChunk.meshbasic_vert),\n      fragmentShader: `\n          uniform vec4 objectId;\n          void main() {\n            gl_FragColor = objectId;\n          }\n        `,\n      uniforms: {\n        objectId: { value: [NaN, NaN, NaN, NaN] },\n      },\n    });\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { LinePrimitive, LineType, SceneEntity } from \"@foxglove/schemas\";\nimport { LineMaterial } from \"@foxglove/studio-base/panels/ThreeDeeRender/LineMaterial\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { Renderer } from \"../../Renderer\";\nimport { makeRgba, rgbToThreeColor, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\n\nconst tempRgba = makeRgba();\n\nexport class RenderableLines extends RenderablePrimitive {\n  private _lines: LineSegments2[] = [];\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer);\n  }\n\n  private _updateLines(lines: LinePrimitive[]) {\n    this.clear();\n    this._lines.length = 0;\n\n    for (const primitive of lines) {\n      if (primitive.points.length === 0) {\n        continue;\n      }\n      const line = this._makeLine(primitive);\n      const group = new THREE.Group().add(line);\n      group.position.set(\n        primitive.pose.position.x,\n        primitive.pose.position.y,\n        primitive.pose.position.z,\n      );\n      group.quaternion.set(\n        primitive.pose.orientation.x,\n        primitive.pose.orientation.y,\n        primitive.pose.orientation.z,\n        primitive.pose.orientation.w,\n      );\n      this.add(group);\n      this._lines.push(line);\n    }\n  }\n\n  private _makeLine(primitive: LinePrimitive) {\n    let geometry: LineSegmentsGeometry;\n    const isSegments = primitive.type === LineType.LINE_LIST;\n    const isLoop = primitive.type === LineType.LINE_LOOP;\n\n    const transparent = true;\n    const material = new LineMaterial({\n      worldUnits: !primitive.scale_invariant,\n      linewidth: primitive.thickness,\n      transparent,\n      depthWrite: !transparent,\n      resolution: this.renderer.input.canvasSize,\n    });\n    material.lineWidth = primitive.thickness; // Fix for THREE.js type annotations\n\n    const pickingMaterial = new THREE.ShaderMaterial({\n      vertexShader: material.vertexShader,\n      fragmentShader: /* glsl */ `\n      uniform vec4 objectId;\n      void main() {\n        gl_FragColor = objectId;\n      }\n    `,\n      clipping: true,\n      uniforms: {\n        objectId: { value: [NaN, NaN, NaN, NaN] },\n        linewidth: { value: primitive.thickness },\n        resolution: { value: this.renderer.input.canvasSize },\n        dashOffset: { value: 0 },\n        dashScale: { value: 1 },\n        dashSize: { value: 1 },\n        gapSize: { value: 1 },\n      },\n      defines: !primitive.scale_invariant ? { WORLD_UNITS: \"\" } : {},\n    });\n\n    let line: LineSegments2;\n\n    switch (primitive.type) {\n      case LineType.LINE_STRIP:\n      case LineType.LINE_LOOP: {\n        const lineGeometry = new LineGeometry(); // separate variable to work around typescript refinement\n        geometry = lineGeometry;\n        line = new Line2(lineGeometry, material);\n        break;\n      }\n      case LineType.LINE_LIST: {\n        geometry = new LineSegmentsGeometry();\n        line = new LineSegments2(geometry, material);\n        break;\n      }\n    }\n\n    const positions = getPositions(primitive);\n    // setPosition requires the position array to be >= 6 length or else it will error\n    // we skip primitives with empty points before calling this function\n    geometry.setPositions(positions);\n\n    const singleColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : primitive.colors.length === 0\n      ? primitive.color\n      : undefined;\n    if (singleColor == undefined) {\n      material.vertexColors = true;\n      material.opacity = 1;\n      material.uniforms.opacity!.value = 1;\n      const colors = getColors(primitive);\n      const instanceColorBuffer = new THREE.InstancedInterleavedBuffer(\n        colors,\n        isSegments ? 8 : 4,\n        1,\n      );\n      geometry.setAttribute(\n        \"instanceColorStart\",\n        new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 0),\n      );\n      geometry.setAttribute(\n        \"instanceColorEnd\",\n        new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 4),\n      );\n    } else {\n      material.vertexColors = false;\n      material.color = rgbToThreeColor(new THREE.Color(), singleColor);\n      // material.opacity = singleColor.a; // does not work for some reason\n      material.uniforms.opacity!.value = singleColor.a;\n    }\n\n    // Set an explicit instance count, because three.js ignores attribute offsets when\n    // automatically computing the instance count (and results differ across browsers because they\n    // depend on the key iteration order, since three.js derives the count from the first\n    // instanced interleaved attribute it sees).\n    geometry.instanceCount = isSegments\n      ? primitive.points.length >>> 1\n      : isLoop\n      ? primitive.points.length\n      : Math.max(primitive.points.length - 1, 0);\n\n    line.userData.pickingMaterial = pickingMaterial;\n    return line;\n  }\n\n  public override dispose(): void {\n    for (const line of this._lines) {\n      line.geometry.dispose();\n      line.material.dispose();\n      line.userData.pickingMaterial.dispose();\n    }\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateLines(entity.lines);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\n/**\n * Converts (x,y,z) values specified in `primitive.points` (and possibly `primitive.indices`) into\n * vertices for LineGeometry or LineSegmentsGeometry.\n */\nfunction getPositions(primitive: LinePrimitive): Float32Array {\n  const isLoop = primitive.type === LineType.LINE_LOOP;\n  let positions: Float32Array;\n  const indices = primitive.indices;\n  if (indices.length > 0) {\n    positions = new Float32Array((indices.length + (isLoop ? 1 : 0)) * 3);\n\n    let i = 0;\n    for (const idx of indices) {\n      const { x, y, z } = primitive.points[idx]!;\n      positions[i++] = x;\n      positions[i++] = y;\n      positions[i++] = z;\n    }\n  } else {\n    positions = new Float32Array((primitive.points.length + (isLoop ? 1 : 0)) * 3);\n\n    let i = 0;\n    for (const { x, y, z } of primitive.points) {\n      positions[i++] = x;\n      positions[i++] = y;\n      positions[i++] = z;\n    }\n  }\n  if (isLoop && positions.length > 3) {\n    positions[positions.length - 3] = positions[0]!;\n    positions[positions.length - 2] = positions[1]!;\n    positions[positions.length - 1] = positions[2]!;\n  }\n  return positions;\n}\n\n/**\n * Converts RGBA colors specified in `primitive.colors` (and possibly `primitive.indices`) into\n * vertices for LineGeometry or LineSegmentsGeometry.\n */\nfunction getColors(primitive: LinePrimitive): Float32Array {\n  const isLoop = primitive.type === LineType.LINE_LOOP;\n  let colors: Float32Array;\n  const indices = primitive.indices;\n  if (indices.length > 0) {\n    colors = new Float32Array((indices.length + (isLoop ? 1 : 0)) * 4);\n\n    if (primitive.colors.length > 0) {\n      let i = 0;\n      for (const idx of indices) {\n        const { r, g, b, a } = primitive.colors[idx]!;\n        colors[i++] = SRGBToLinear(r);\n        colors[i++] = SRGBToLinear(g);\n        colors[i++] = SRGBToLinear(b);\n        colors[i++] = a;\n      }\n    } else {\n      throw new Error(\"invariant: expected not to be using vertex colors\");\n    }\n  } else {\n    colors = new Float32Array((primitive.points.length + (isLoop ? 1 : 0)) * 4);\n\n    if (primitive.colors.length > 0) {\n      let i = 0;\n      for (const { r, g, b, a } of primitive.colors) {\n        colors[i++] = SRGBToLinear(r);\n        colors[i++] = SRGBToLinear(g);\n        colors[i++] = SRGBToLinear(b);\n        colors[i++] = a;\n      }\n    } else {\n      throw new Error(\"invariant: expected not to be using vertex colors\");\n    }\n  }\n  if (isLoop && colors.length > 4) {\n    colors[colors.length - 4] = colors[0]!;\n    colors[colors.length - 3] = colors[1]!;\n    colors[colors.length - 2] = colors[2]!;\n    colors[colors.length - 1] = colors[3]!;\n  }\n  return colors;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nexport function disposeMaterial(material: THREE.Material): void {\n  if (material instanceof THREE.MeshStandardMaterial) {\n    material.map?.dispose();\n    material.lightMap?.dispose();\n    material.aoMap?.dispose();\n    material.emissiveMap?.dispose();\n    material.bumpMap?.dispose();\n    material.normalMap?.dispose();\n    material.displacementMap?.dispose();\n    material.roughnessMap?.dispose();\n    material.metalnessMap?.dispose();\n    material.alphaMap?.dispose();\n    material.envMap?.dispose();\n  }\n  material.dispose();\n}\n\nexport function disposeMeshesRecursive(object: THREE.Object3D): void {\n  object.traverse((child) => {\n    if (child instanceof THREE.Mesh) {\n      child.geometry.dispose();\n      if (Array.isArray(child.material)) {\n        for (const material of child.material) {\n          if (material instanceof THREE.Material) {\n            disposeMaterial(material);\n          }\n        }\n      } else if (child.material instanceof THREE.Material) {\n        disposeMaterial(child.material);\n      }\n    }\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { GltfMesh } from \"./markers/RenderableMeshResource\";\nimport { LoadedModel } from \"../ModelCache\";\n\nexport function removeLights(model: LoadedModel): void {\n  // Remove lights from the model\n  const lights: THREE.Light[] = [];\n  model.traverse((child: THREE.Object3D) => {\n    const maybeLight = child as Partial<THREE.Light>;\n    if (maybeLight.isLight === true) {\n      lights.push(maybeLight as THREE.Light);\n    }\n  });\n  for (const light of lights) {\n    light.dispose();\n    light.removeFromParent();\n  }\n}\n\nexport function replaceMaterials(model: LoadedModel, material: THREE.MeshStandardMaterial): void {\n  model.traverse((child: THREE.Object3D) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    // Dispose of any allocated textures and the material and swap it with\n    // our own material\n    const meshChild = child as GltfMesh;\n    if (Array.isArray(meshChild.material)) {\n      for (const embeddedMaterial of meshChild.material) {\n        disposeStandardMaterial(embeddedMaterial);\n      }\n    } else {\n      disposeStandardMaterial(meshChild.material);\n    }\n    meshChild.material = material;\n    if (!meshChild.geometry.attributes.normal) {\n      meshChild.geometry.computeVertexNormals();\n    }\n  });\n}\n\n/** Generic MeshStandardMaterial dispose function for materials loaded from an external source */\nfunction disposeStandardMaterial(material: THREE.MeshStandardMaterial): void {\n  material.map?.dispose();\n  material.lightMap?.dispose();\n  material.aoMap?.dispose();\n  material.emissiveMap?.dispose();\n  material.bumpMap?.dispose();\n  material.normalMap?.dispose();\n  material.displacementMap?.dispose();\n  material.roughnessMap?.dispose();\n  material.metalnessMap?.dispose();\n  material.alphaMap?.dispose();\n  material.envMap?.dispose();\n  material.dispose();\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { crc32 } from \"@foxglove/crc\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { ModelPrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport { EDGE_LINE_SEGMENTS_NAME, LoadedModel } from \"../../ModelCache\";\nimport type { Renderer } from \"../../Renderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { disposeMeshesRecursive } from \"../../dispose\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\nimport { removeLights, replaceMaterials } from \"../models\";\n\nconst tempRgba = makeRgba();\n\nconst MODEL_FETCH_FAILED = \"MODEL_FETCH_FAILED\";\n\ntype RenderableModel = {\n  /** Material used to override the model's colors when embedded_materials is false */\n  material?: THREE.MeshStandardMaterial;\n  /** Model wrapped in a Group to allow setting the group's position/orientation/scale without affecting the model */\n  model: THREE.Group;\n  /** Reference to the original model before modification so it can be re-cloned if necessary. */\n  cachedModel: LoadedModel;\n  /** Reference to the original message for checking whether this renderable can be reused */\n  primitive: ModelPrimitive;\n};\n\nfunction byteArraysEqual(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport class RenderableModels extends RenderablePrimitive {\n  /** Renderables loaded from embedded data */\n  private renderablesByDataCrc = new Map<number, RenderableModel[]>();\n  /** Renderables loaded from URLs */\n  private renderablesByUrl = new Map<string, RenderableModel[]>();\n  private updateCount = 0;\n\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer);\n  }\n\n  /**\n   * Reuse a renderable from `prevRenderables` if a matching one is found using `primitivesMatch()`, otherwise load a new one.\n   * @param getURL Called to retrieve the URL that should be used to load the primitive\n   * @param revokeURL Called with the URL returned by getURL after loading is complete\n   */\n  private async _createOrUpdateRenderable(\n    primitive: ModelPrimitive,\n    prevRenderables: RenderableModel[] | undefined,\n    primitivesMatch: (a: ModelPrimitive, b: ModelPrimitive) => boolean,\n    getURL: (_: ModelPrimitive) => string,\n    revokeURL: (_: string) => void,\n  ): Promise<RenderableModel | undefined> {\n    let renderable: RenderableModel | undefined;\n    if (prevRenderables) {\n      const idx = prevRenderables.findIndex((prev) => primitivesMatch(prev.primitive, primitive));\n      if (idx >= 0) {\n        renderable = prevRenderables.splice(idx, 1)[0]!;\n      }\n    }\n    if (renderable) {\n      this._updateModel(renderable, primitive);\n      return renderable;\n    }\n\n    const url = getURL(primitive);\n    try {\n      // Load the model if necessary\n      const cachedModel = await this._loadCachedModel(url, {\n        overrideMediaType: primitive.media_type.length > 0 ? primitive.media_type : undefined,\n      });\n      if (cachedModel) {\n        renderable = { model: cloneAndPrepareModel(cachedModel), cachedModel, primitive };\n        this._updateModel(renderable, primitive);\n      }\n    } finally {\n      revokeURL(url);\n    }\n    return renderable;\n  }\n\n  private _updateModels(models: ModelPrimitive[]) {\n    this.clear();\n\n    const originalUpdateCount = ++this.updateCount;\n\n    const prevRenderablesByUrl = this.renderablesByUrl;\n    this.renderablesByUrl = new Map();\n\n    const prevRenderablesByDataCrc = this.renderablesByDataCrc;\n    this.renderablesByDataCrc = new Map();\n\n    Promise.all(\n      models.map(async (primitive) => {\n        let prevRenderables: RenderableModel[] | undefined;\n        let newRenderables: RenderableModel[] | undefined;\n        let renderable: RenderableModel | undefined;\n        if (primitive.url.length === 0) {\n          const dataCrc = crc32(primitive.data);\n          prevRenderables = prevRenderablesByDataCrc.get(dataCrc);\n          newRenderables = this.renderablesByDataCrc.get(dataCrc);\n          if (!newRenderables) {\n            newRenderables = [];\n            this.renderablesByDataCrc.set(dataCrc, newRenderables);\n          }\n\n          try {\n            renderable = await this._createOrUpdateRenderable(\n              primitive,\n              prevRenderables,\n              (model1, model2) =>\n                model1.media_type === model2.media_type &&\n                byteArraysEqual(model1.data, model2.data),\n              (model) => URL.createObjectURL(new Blob([model.data], { type: model.media_type })),\n              (url) => URL.revokeObjectURL(url),\n            );\n          } catch (err) {\n            this.renderer.settings.errors.add(\n              this.userData.settingsPath,\n              MODEL_FETCH_FAILED,\n              `Unhandled error loading model from ${primitive.data.byteLength}-byte data: ${err.message}`,\n            );\n          }\n        } else {\n          prevRenderables = prevRenderablesByUrl.get(primitive.url);\n          newRenderables = this.renderablesByUrl.get(primitive.url);\n          if (!newRenderables) {\n            newRenderables = [];\n            this.renderablesByUrl.set(primitive.url, newRenderables);\n          }\n\n          try {\n            renderable = await this._createOrUpdateRenderable(\n              primitive,\n              prevRenderables,\n              (model1, model2) =>\n                model1.url === model2.url && model1.media_type === model2.media_type,\n              (model) => model.url,\n              (_url) => {},\n            );\n          } catch (err) {\n            this.renderer.settings.errors.add(\n              this.userData.settingsPath,\n              MODEL_FETCH_FAILED,\n              `Unhandled error loading model from \"${primitive.url}\": ${err.message}`,\n            );\n          }\n        }\n\n        if (originalUpdateCount !== this.updateCount) {\n          // another update has come in, bail before doing any mutations\n          return;\n        }\n        if (renderable) {\n          newRenderables.push(renderable);\n          this.add(renderable.model);\n\n          // Render a new frame now that the model is loaded\n          this.renderer.queueAnimationFrame();\n        }\n      }),\n    )\n      .then(() => {\n        // Remove any mesh fetch error message since loading was successful\n        this.renderer.settings.errors.remove(this.userData.settingsPath, MODEL_FETCH_FAILED);\n      })\n      .catch(console.error)\n      .finally(() => {\n        // remove remaining models that are no longer used\n        for (const renderables of prevRenderablesByUrl.values()) {\n          for (const renderable of renderables) {\n            renderable.model.removeFromParent();\n            this._disposeModel(renderable);\n          }\n        }\n        for (const renderables of prevRenderablesByDataCrc.values()) {\n          for (const renderable of renderables) {\n            renderable.model.removeFromParent();\n            this._disposeModel(renderable);\n          }\n        }\n        this.updateOutlineVisibility();\n        this.renderer.queueAnimationFrame();\n      });\n  }\n\n  public override dispose(): void {\n    for (const renderables of this.renderablesByUrl.values()) {\n      for (const renderable of renderables) {\n        this._disposeModel(renderable);\n      }\n    }\n    this.renderablesByUrl.clear();\n\n    for (const renderables of this.renderablesByDataCrc.values()) {\n      for (const renderable of renderables) {\n        this._disposeModel(renderable);\n      }\n    }\n    this.renderablesByDataCrc.clear();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateModels(entity.models);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n\n  private updateOutlineVisibility(): void {\n    const showOutlines = this.getSettings()?.showOutlines ?? true;\n    this.traverse((lineSegments) => {\n      // Want to avoid picking up the LineSegments from the model itself\n      // only update line segments that we've added with the special name\n      if (\n        lineSegments instanceof THREE.LineSegments &&\n        lineSegments.name === EDGE_LINE_SEGMENTS_NAME\n      ) {\n        lineSegments.visible = showOutlines;\n      }\n    });\n  }\n\n  private async _loadCachedModel(\n    url: string,\n    opts: { overrideMediaType?: string },\n  ): Promise<LoadedModel | undefined> {\n    const cachedModel = await this.renderer.modelCache.load(\n      url,\n      { overrideMediaType: opts.overrideMediaType },\n      (err) => {\n        this.renderer.settings.errors.add(\n          this.userData.settingsPath,\n          MODEL_FETCH_FAILED,\n          `Error loading model from \"${url}\": ${err.message}`,\n        );\n      },\n    );\n\n    if (!cachedModel) {\n      if (!this.renderer.settings.errors.hasError(this.userData.settingsPath, MODEL_FETCH_FAILED)) {\n        this.renderer.settings.errors.add(\n          this.userData.settingsPath,\n          MODEL_FETCH_FAILED,\n          `Failed to load model from \"${url}\"`,\n        );\n      }\n      return undefined;\n    }\n\n    return cachedModel;\n  }\n\n  private _updateModel(renderable: RenderableModel, primitive: ModelPrimitive) {\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : primitive.override_color\n      ? primitive.color\n      : undefined;\n    if (overrideColor) {\n      if (!renderable.material) {\n        renderable.material = new THREE.MeshStandardMaterial({\n          metalness: 0,\n          roughness: 1,\n          dithering: true,\n        });\n        replaceMaterials(renderable.model, renderable.material);\n      }\n      rgbToThreeColor(renderable.material.color, overrideColor);\n      const transparent = overrideColor.a < 1;\n      renderable.material.opacity = overrideColor.a;\n      renderable.material.transparent = transparent;\n      renderable.material.depthWrite = !transparent;\n      renderable.material.needsUpdate = true;\n    } else if (renderable.material) {\n      // We already discarded the original materials, need to re-clone them from the original model\n      renderable.model = cloneAndPrepareModel(renderable.cachedModel);\n      renderable.material = undefined;\n    }\n\n    renderable.model.scale.set(primitive.scale.x, primitive.scale.y, primitive.scale.z);\n    renderable.model.position.set(\n      primitive.pose.position.x,\n      primitive.pose.position.y,\n      primitive.pose.position.z,\n    );\n    renderable.model.quaternion.set(\n      primitive.pose.orientation.x,\n      primitive.pose.orientation.y,\n      primitive.pose.orientation.z,\n      primitive.pose.orientation.w,\n    );\n  }\n\n  private _disposeModel(renderable: RenderableModel) {\n    renderable.material?.dispose();\n    disposeMeshesRecursive(renderable.model);\n    disposeMeshesRecursive(renderable.cachedModel);\n  }\n}\n\nfunction cloneAndPrepareModel(cachedModel: LoadedModel) {\n  const model = cachedModel.clone(true);\n  removeLights(model);\n  return new THREE.Group().add(model);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SpherePrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { Renderer } from \"../../Renderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableSpheres extends RenderablePrimitive {\n  private geometry: THREE.SphereGeometry;\n  private mesh: THREE.InstancedMesh<THREE.SphereGeometry, MeshStandardMaterialWithInstanceOpacity>;\n  private instanceOpacity: THREE.InstancedBufferAttribute;\n  private material = new MeshStandardMaterialWithInstanceOpacity({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n  });\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  private maxInstances: number;\n\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer);\n\n    // Sphere mesh\n    this.geometry = renderer.sharedGeometry\n      .getGeometry(this.constructor.name, createGeometry)\n      .clone() as THREE.SphereGeometry;\n    this.maxInstances = 16;\n    this.mesh = new THREE.InstancedMesh(this.geometry, this.material, this.maxInstances);\n    this.instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.maxInstances),\n      1,\n    );\n    this.geometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n    this.mesh.count = 0;\n    this.add(this.mesh);\n  }\n\n  private _ensureCapacity(numInstances: number) {\n    if (numInstances > this.maxInstances) {\n      const newCapacity = Math.trunc(numInstances * 1.5) + 16;\n      this.maxInstances = newCapacity;\n\n      this.mesh.removeFromParent();\n      this.mesh.dispose();\n      this.mesh = new THREE.InstancedMesh(this.mesh.geometry, this.material, this.maxInstances);\n      this.instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.maxInstances),\n        1,\n      );\n      this.geometry.setAttribute(\"instanceOpacity\", this.instanceOpacity);\n      this.add(this.mesh);\n    }\n  }\n\n  private _updateMesh(spheres: SpherePrimitive[]) {\n    let isTransparent = false;\n\n    this._ensureCapacity(spheres.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const sphere of spheres) {\n      const color = overrideColor ?? sphere.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.mesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.instanceOpacity.setX(i, color.a);\n      this.mesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(sphere.pose.position.x, sphere.pose.position.y, sphere.pose.position.z),\n          tempQuat.set(\n            sphere.pose.orientation.x,\n            sphere.pose.orientation.y,\n            sphere.pose.orientation.z,\n            sphere.pose.orientation.w,\n          ),\n          tempVec3_2.set(sphere.size.x, sphere.size.y, sphere.size.z),\n        ),\n      );\n      i++;\n    }\n\n    if (this.material.transparent !== isTransparent) {\n      this.material.transparent = isTransparent;\n      this.material.depthWrite = !isTransparent;\n      this.material.needsUpdate = true;\n    }\n\n    if (this.mesh.count === 0 && spheres.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.material.needsUpdate = true;\n    }\n    this.mesh.count = spheres.length;\n    this.mesh.instanceMatrix.needsUpdate = true;\n    this.instanceOpacity.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 spheres\n    if (this.mesh.instanceColor) {\n      this.mesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.mesh.dispose();\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateMesh(entity.spheres);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction createGeometry(): THREE.SphereGeometry {\n  const sphereGeometry = new THREE.SphereGeometry(0.5, 16, 16);\n  sphereGeometry.computeBoundingSphere();\n  return sphereGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SceneEntity, TextPrimitive } from \"@foxglove/schemas\";\nimport { Label, LabelPool } from \"@foxglove/three-text\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { Renderer } from \"../../Renderer\";\nimport { getLuminance, makeRgba, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\n\nconst tempRgba = makeRgba();\n\nexport class RenderableTexts extends RenderablePrimitive {\n  private labelPool: LabelPool;\n  private labels: Label[] = [];\n\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer);\n\n    this.labelPool = renderer.labelPool;\n  }\n  private _ensureCapacity(newLength: number): void {\n    const oldLength = this.labels.length;\n    if (newLength > oldLength) {\n      for (let i = oldLength; i < newLength; i++) {\n        const newLabel = this.labelPool.acquire();\n        this.labels.push(newLabel);\n        this.add(newLabel);\n      }\n    }\n  }\n\n  private _updateTexts(texts: TextPrimitive[]) {\n    this._ensureCapacity(texts.length);\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const text of texts) {\n      const color = overrideColor ?? text.color;\n      const label = this.labels[i];\n\n      if (!label) {\n        throw new Error(\"invariant: labels array smaller than requested\");\n      }\n\n      label.setText(text.text);\n      label.setColor(SRGBToLinear(color.r), SRGBToLinear(color.g), SRGBToLinear(color.b));\n\n      const foregroundIsDark = getLuminance(color.r, color.g, color.b) < 0.5;\n      if (foregroundIsDark) {\n        label.setBackgroundColor(1, 1, 1);\n      } else {\n        label.setBackgroundColor(0, 0, 0);\n      }\n      label.setOpacity(color.a);\n      label.setLineHeight(text.font_size);\n      // note that billboard needs to be true for scale_invariant to work\n      label.setBillboard(text.billboard);\n      // attenuation -> size accounts for distance from camera\n      // scale_invariant negates this and should make it the same size always\n      label.setSizeAttenuation(!text.scale_invariant);\n      label.quaternion.set(\n        text.pose.orientation.x,\n        text.pose.orientation.y,\n        text.pose.orientation.z,\n        text.pose.orientation.w,\n      );\n\n      label.position.set(text.pose.position.x, text.pose.position.y, text.pose.position.z);\n      i++;\n    }\n    // need to release the no longer used labels so that they don't linger on the scene\n    if (i < this.labels.length) {\n      // cuts off remaining labels and loops through  them  release to from labelpool\n      for (const label of this.labels.splice(i)) {\n        this.labelPool.release(label);\n      }\n    }\n  }\n\n  public override dispose(): void {\n    for (const label of this.labels) {\n      this.labelPool.release(label);\n    }\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateTexts(entity.texts);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { Point3, SceneEntity, TriangleListPrimitive } from \"@foxglove/schemas\";\nimport { DynamicBufferGeometry } from \"@foxglove/studio-base/panels/ThreeDeeRender/DynamicBufferGeometry\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { Renderer } from \"../../Renderer\";\nimport { makeRgba, rgbToThreeColor, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../SceneEntities\";\n\nconst tempRgba = makeRgba();\nconst tempColor = new THREE.Color();\nconst missingColor = { r: 0, g: 1.0, b: 0, a: 1.0 };\n\nconst COLOR_LENGTH_ERROR_ID = \"INVALID_COLOR_LENGTH\";\nconst INVALID_POINT_ERROR_ID = \"INVALID_POINT\";\n\ntype TriangleMesh = THREE.Mesh<DynamicBufferGeometry, THREE.MeshStandardMaterial>;\nexport class RenderableTriangles extends RenderablePrimitive {\n  private _triangleMeshes: TriangleMesh[] = [];\n  public constructor(renderer: Renderer) {\n    super(\"\", renderer);\n  }\n\n  private _ensureCapacity(triCount: number) {\n    while (triCount > this._triangleMeshes.length) {\n      this._triangleMeshes.push(makeTriangleMesh());\n    }\n  }\n  private _updateTriangleMeshes(tris: TriangleListPrimitive[]) {\n    this._ensureCapacity(tris.length);\n    // removes all children so that meshes that are still in the _triangleMesh array\n    // but don't have a new corresponding primitive  won't be rendered\n    this.clear();\n\n    let triMeshIdx = 0;\n    for (const primitive of tris) {\n      const mesh = this._triangleMeshes[triMeshIdx];\n      if (!mesh) {\n        continue;\n      }\n      const { geometry, material } = mesh;\n      let transparent = false;\n\n      let vertChanged = false;\n      let colorChanged = false;\n\n      // note this sets the drawrange to the count\n      // we set the drawrange again for indexed geometries below\n      geometry.resize(primitive.points.length);\n\n      if (!geometry.attributes.position) {\n        geometry.createAttribute(\"position\", Float32Array, 3);\n      }\n      if (!geometry.attributes.normal) {\n        geometry.createAttribute(\"normal\", Float32Array, 3);\n      }\n      const vertices = geometry.attributes.position!;\n\n      const singleColor = this.userData.settings.color\n        ? stringToRgba(tempRgba, this.userData.settings.color)\n        : primitive.colors.length === 0\n        ? primitive.color\n        : undefined;\n\n      if (!singleColor && !geometry.attributes.color) {\n        geometry.createAttribute(\"color\", Uint8Array, 4, true);\n      }\n      const colors = geometry.attributes.color;\n\n      for (let i = 0; i < primitive.points.length; i++) {\n        const point = primitive.points[i]!;\n        if (!isPointValid(point)) {\n          this.addError(\n            `${this.name}-${INVALID_POINT_ERROR_ID}`,\n            `Entity: ${this.userData.entity?.id}.triangles[${triMeshIdx}](1st index) - Point definition at index ${i} is not finite`,\n          );\n          continue;\n        }\n        vertChanged =\n          vertChanged ||\n          vertices.getX(i) !== point.x ||\n          vertices.getY(i) !== point.y ||\n          vertices.getZ(i) !== point.z;\n        vertices.setXYZ(i, point.x, point.y, point.z);\n\n        if (!singleColor && colors && primitive.colors.length > 0) {\n          const color = primitive.colors[i] ?? missingColor;\n          // only trigger on last point index\n          if (i === primitive.points.length - 1 && color === missingColor) {\n            // will only show 1st triMeshIdx of issue -- addError prevents the adding of errors with duplicate errorIds\n            this.addError(\n              `${this.name}-${COLOR_LENGTH_ERROR_ID}`,\n              `Entity: ${this.userData.entity?.id}.triangles[${triMeshIdx}](1st index) - Colors array should be same size as points array, showing #00ff00 instead`,\n            );\n          }\n          const r = SRGBToLinear(color.r);\n          const g = SRGBToLinear(color.g);\n          const b = SRGBToLinear(color.b);\n          const a = color.a;\n          colorChanged =\n            colorChanged ||\n            colors.getX(i) !== r ||\n            colors.getY(i) !== g ||\n            colors.getZ(i) !== b ||\n            colors.getW(i) !== a;\n          colors.setXYZW(i, r, g, b, a);\n          if (!transparent && a < 1.0) {\n            transparent = true;\n          }\n        }\n      }\n      if (vertChanged) {\n        geometry.computeVertexNormals();\n        geometry.computeBoundingSphere();\n        geometry.attributes.position!.needsUpdate = true;\n      }\n\n      // covers the case where a geometry went from being defined by a single color to vertex colors\n      // but there was no difference in the vertex colors that already existed and the new ones\n      // we can tell this by checking the current vertexColors of the material, if false -> previously singleColor\n      colorChanged = !material.vertexColors && !singleColor && primitive.colors.length > 0;\n      if (colorChanged) {\n        material.vertexColors = true;\n        // need to set overall material color back or else it will blend them with the vertex colors\n        material.color.set(\"#ffffff\");\n        material.opacity = 1.0;\n        // can assume that color exists since colorchanged is true\n        geometry.attributes.color!.needsUpdate = true;\n        material.needsUpdate = true;\n      } else if (singleColor) {\n        transparent = singleColor.a < 1.0;\n        const newColor = rgbToThreeColor(tempColor, singleColor);\n        const materialNeedsUpdate =\n          material.vertexColors ||\n          !material.color.equals(newColor) ||\n          mesh.material.opacity !== singleColor.a;\n        if (materialNeedsUpdate) {\n          material.vertexColors = false;\n          material.color.copy(tempColor);\n          mesh.material.opacity = singleColor.a;\n          material.needsUpdate = true;\n        }\n      }\n\n      if (material.transparent !== transparent) {\n        material.transparent = transparent;\n        material.depthWrite = !transparent;\n        material.needsUpdate = true;\n      }\n\n      const indices = primitive.indices;\n      if (indices.length > 0) {\n        if (!geometry.index || geometry.index.count < indices.length) {\n          const array = new Uint32Array(Math.round(indices.length * 1.5) + 16);\n          array.set(indices);\n          geometry.index = new THREE.BufferAttribute(array, 1);\n          geometry.index.count = indices.length;\n        } else {\n          const array = geometry.index.array as Uint32Array;\n          let needsUpdate = false;\n          for (let i = 0; i < indices.length; i++) {\n            if (array[i] !== indices[i]) {\n              array[i] = indices[i]!;\n              needsUpdate = true;\n            }\n          }\n          geometry.index.needsUpdate = needsUpdate;\n        }\n\n        // this is set in `geometry.resize` to itemCount\n        // which works for non-indexed geometries but not for indexed geoms\n        geometry.setDrawRange(0, indices.length);\n      } else {\n        // eslint-disable-next-line no-restricted-syntax\n        geometry.index = null;\n      }\n\n      mesh.position.set(\n        primitive.pose.position.x,\n        primitive.pose.position.y,\n        primitive.pose.position.z,\n      );\n      mesh.quaternion.set(\n        primitive.pose.orientation.x,\n        primitive.pose.orientation.y,\n        primitive.pose.orientation.z,\n        primitive.pose.orientation.w,\n      );\n      this.add(mesh);\n      triMeshIdx++;\n    }\n  }\n\n  public override dispose(): void {\n    for (const mesh of this._triangleMeshes) {\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n    }\n    this.clear();\n    this._triangleMeshes.length = 0;\n    this.clearErrors();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this._updateTriangleMeshes(entity.triangles);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction makeTriangleMesh(): TriangleMesh {\n  return new THREE.Mesh(\n    new DynamicBufferGeometry(),\n    new THREE.MeshStandardMaterial({\n      metalness: 0,\n      roughness: 1,\n      flatShading: true,\n      side: THREE.DoubleSide,\n    }),\n  );\n}\n\nfunction isPointValid(pt: Point3): boolean {\n  return Number.isFinite(pt.x) && Number.isFinite(pt.y) && Number.isFinite(pt.z);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { RenderableArrows } from \"./RenderableArrows\";\nimport { RenderableCubes } from \"./RenderableCubes\";\nimport { RenderableCylinders } from \"./RenderableCylinders\";\nimport { RenderableLines } from \"./RenderableLines\";\nimport { RenderableModels } from \"./RenderableModels\";\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport { RenderableSpheres } from \"./RenderableSpheres\";\nimport { RenderableTexts } from \"./RenderableTexts\";\nimport { RenderableTriangles } from \"./RenderableTriangles\";\nimport { PrimitiveType } from \"./types\";\nimport type { Renderer } from \"../../Renderer\";\n\nconst CONSTRUCTORS = {\n  [PrimitiveType.CUBES]: RenderableCubes,\n  [PrimitiveType.MODELS]: RenderableModels,\n  [PrimitiveType.LINES]: RenderableLines,\n  [PrimitiveType.CYLINDERS]: RenderableCylinders,\n  [PrimitiveType.ARROWS]: RenderableArrows,\n  [PrimitiveType.SPHERES]: RenderableSpheres,\n  [PrimitiveType.TEXTS]: RenderableTexts,\n  [PrimitiveType.TRIANGLES]: RenderableTriangles,\n};\n\n/**\n * An object pool for RenderablePrimitive subclass objects.\n */\nexport class PrimitivePool {\n  private primitivesByType = new Map<PrimitiveType, RenderablePrimitive[]>();\n  private disposed = false;\n\n  public constructor(private renderer: Renderer) {}\n\n  public acquire<T extends PrimitiveType>(type: T): InstanceType<(typeof CONSTRUCTORS)[T]> {\n    if (this.disposed) {\n      throw new Error(`Attempt to acquire PrimitiveType.${type} after PrimitivePool was disposed`);\n    }\n    const primitive = this.primitivesByType.get(type)?.pop();\n    if (primitive) {\n      primitive.prepareForReuse();\n      return primitive as InstanceType<(typeof CONSTRUCTORS)[T]>;\n    }\n    // https://github.com/microsoft/TypeScript/issues/44049\n    return new CONSTRUCTORS[type](this.renderer) as InstanceType<(typeof CONSTRUCTORS)[T]>;\n  }\n\n  public release<T extends PrimitiveType>(\n    type: T,\n    primitive: InstanceType<(typeof CONSTRUCTORS)[T]>,\n  ): void {\n    if (this.disposed) {\n      primitive.dispose();\n      return;\n    }\n    const primitives = this.primitivesByType.get(type);\n    if (!primitives) {\n      this.primitivesByType.set(type, [primitive]);\n    } else {\n      primitives.push(primitive);\n    }\n  }\n\n  public dispose(): void {\n    for (const primitives of this.primitivesByType.values()) {\n      for (const primitive of primitives) {\n        primitive.dispose();\n      }\n    }\n    this.primitivesByType.clear();\n    this.disposed = true;\n  }\n\n  public setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    for (const primitives of this.primitivesByType.values()) {\n      for (const primitive of primitives) {\n        primitive.setColorScheme(colorScheme);\n      }\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport {\n  ArrowPrimitive,\n  CubePrimitive,\n  CylinderPrimitive,\n  LinePrimitive,\n  LineType,\n  ModelPrimitive,\n  SceneEntity,\n  SceneEntityDeletion,\n  SceneEntityDeletionType,\n  SceneUpdate,\n  SpherePrimitive,\n  TextPrimitive,\n  TriangleListPrimitive,\n} from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { TopicEntities } from \"./TopicEntities\";\nimport { PrimitivePool } from \"./primitives/PrimitivePool\";\nimport { SELECTED_ID_VARIABLE } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { SCENE_UPDATE_DATATYPES } from \"../foxglove\";\nimport {\n  normalizeColorRGBA,\n  normalizeColorRGBAs,\n  normalizePose,\n  normalizeTime,\n  normalizeVector3,\n  normalizeByteArray,\n} from \"../normalizeMessages\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nexport type LayerSettingsEntity = BaseSettings & {\n  showOutlines: boolean | undefined;\n  color: string | undefined;\n  selectedIdVariable: string | undefined;\n};\n\nconst SCENE_ENTITIES_DEFAULT_SETTINGS: LayerSettingsEntity = {\n  showOutlines: true,\n  visible: false,\n  color: undefined,\n  selectedIdVariable: undefined,\n};\n\nexport class FoxgloveSceneEntities extends SceneExtension<TopicEntities> {\n  private primitivePool = new PrimitivePool(this.renderer);\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.SceneEntities\", renderer);\n\n    renderer.addSchemaSubscriptions(SCENE_UPDATE_DATATYPES, this.handleSceneUpdate);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, SCENE_UPDATE_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsEntity>;\n\n      const node: SettingsTreeNodeWithActionHandler = {\n        label: topic.name,\n        icon: \"Shapes\",\n        order: topic.name.toLocaleLowerCase(),\n        fields: {\n          color: { label: \"Color\", input: \"rgba\", value: config.color },\n          showOutlines: {\n            label: \"Show outlines\",\n            input: \"boolean\",\n            value: config.showOutlines ?? SCENE_ENTITIES_DEFAULT_SETTINGS.showOutlines,\n          },\n          selectedIdVariable: {\n            label: \"Selection Variable\",\n            input: \"string\",\n            help: \"When selecting a SceneEntity, this global variable will be set to the entity ID\",\n            value: config.selectedIdVariable,\n            placeholder: SELECTED_ID_VARIABLE,\n          },\n        },\n        visible: config.visible ?? SCENE_ENTITIES_DEFAULT_SETTINGS.visible,\n        handler: this.handleSettingsAction,\n      };\n\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Don't use SceneExtension#startFrame() because our renderables represent one topic each with\n    // many entities. Instead, call startFrame on each renderable\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  public override setColorScheme(\n    colorScheme: \"dark\" | \"light\",\n    _backgroundColor: THREE.Color | undefined,\n  ): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.setColorScheme(colorScheme);\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the TopicEntities settings\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsEntity>\n        | undefined;\n      renderable.userData.settings = { ...SCENE_ENTITIES_DEFAULT_SETTINGS, ...settings };\n      renderable.updateSettings();\n    }\n  };\n\n  private handleSceneUpdate = (messageEvent: PartialMessageEvent<SceneUpdate>): void => {\n    const topic = messageEvent.topic;\n    const sceneUpdates = messageEvent.message;\n\n    for (const deletionMsg of sceneUpdates.deletions ?? []) {\n      if (deletionMsg) {\n        const deletion = normalizeSceneEntityDeletion(deletionMsg);\n        this._getTopicEntities(topic).deleteEntities(deletion);\n      }\n    }\n\n    for (const entityMsg of sceneUpdates.entities ?? []) {\n      if (entityMsg) {\n        const entity = normalizeSceneEntity(entityMsg);\n        this._getTopicEntities(topic).addOrUpdateEntity(\n          entity,\n          toNanoSec(messageEvent.receiveTime),\n        );\n      }\n    }\n  };\n\n  private _getTopicEntities(topic: string): TopicEntities {\n    let topicEntities = this.renderables.get(topic);\n    if (!topicEntities) {\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsEntity>\n        | undefined;\n\n      topicEntities = new TopicEntities(topic, this.primitivePool, this.renderer, {\n        receiveTime: -1n,\n        messageTime: -1n,\n        frameId: \"\",\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        topic,\n        settings: { ...SCENE_ENTITIES_DEFAULT_SETTINGS, ...userSettings },\n      });\n      this.renderables.set(topic, topicEntities);\n      this.add(topicEntities);\n    }\n    return topicEntities;\n  }\n\n  public override dispose(): void {\n    super.dispose();\n    this.primitivePool.dispose();\n  }\n}\n\nfunction normalizeSceneEntity(entity: PartialMessage<SceneEntity>): SceneEntity {\n  return {\n    timestamp: normalizeTime(entity.timestamp),\n    frame_id: entity.frame_id ?? \"\",\n    id: entity.id ?? \"\",\n    lifetime: normalizeTime(entity.lifetime),\n    frame_locked: entity.frame_locked ?? false,\n    metadata: entity.metadata?.map((kv) => ({ key: kv?.key ?? \"\", value: kv?.value ?? \"\" })) ?? [],\n    arrows: entity.arrows?.map(normalizeArrowPrimitive) ?? [],\n    cubes: entity.cubes?.map(normalizeCubePrimitive) ?? [],\n    spheres: entity.spheres?.map(normalizeSpherePrimitive) ?? [],\n    cylinders: entity.cylinders?.map(normalizeCylinderPrimitive) ?? [],\n    lines: entity.lines?.map(normalizeLinePrimitive) ?? [],\n    triangles: entity.triangles?.map(normalizeTriangleListPrimitive) ?? [],\n    texts: entity.texts?.map(normalizeTextPrimitive) ?? [],\n    models: entity.models?.map(normalizeModelPrimitive) ?? [],\n  };\n}\n\nfunction normalizeSceneEntityDeletion(\n  entity: PartialMessage<SceneEntityDeletion>,\n): SceneEntityDeletion {\n  return {\n    timestamp: normalizeTime(entity.timestamp),\n    type: entity.type ?? SceneEntityDeletionType.MATCHING_ID,\n    id: entity.id ?? \"\",\n  };\n}\n\nfunction normalizeArrowPrimitive(\n  arrow: PartialMessage<ArrowPrimitive> | undefined,\n): ArrowPrimitive {\n  return {\n    pose: normalizePose(arrow?.pose),\n    shaft_length: arrow?.shaft_length ?? 0.8,\n    shaft_diameter: arrow?.shaft_diameter ?? 0.1,\n    head_length: arrow?.head_length ?? 0.2,\n    head_diameter: arrow?.head_diameter ?? 0.2,\n    color: normalizeColorRGBA(arrow?.color),\n  };\n}\n\nfunction normalizeCubePrimitive(cube: PartialMessage<CubePrimitive> | undefined): CubePrimitive {\n  return {\n    pose: normalizePose(cube?.pose),\n    size: normalizeVector3(cube?.size),\n    color: normalizeColorRGBA(cube?.color),\n  };\n}\n\nfunction normalizeSpherePrimitive(\n  sphere: PartialMessage<SpherePrimitive> | undefined,\n): SpherePrimitive {\n  return {\n    pose: normalizePose(sphere?.pose),\n    size: normalizeVector3(sphere?.size),\n    color: normalizeColorRGBA(sphere?.color),\n  };\n}\n\nfunction normalizeCylinderPrimitive(\n  cylinder: PartialMessage<CylinderPrimitive> | undefined,\n): CylinderPrimitive {\n  return {\n    pose: normalizePose(cylinder?.pose),\n    size: normalizeVector3(cylinder?.size),\n    bottom_scale: cylinder?.bottom_scale ?? 1,\n    top_scale: cylinder?.top_scale ?? 1,\n    color: normalizeColorRGBA(cylinder?.color),\n  };\n}\n\nfunction normalizeLinePrimitive(line: PartialMessage<LinePrimitive> | undefined): LinePrimitive {\n  return {\n    type: line?.type ?? LineType.LINE_STRIP,\n    pose: normalizePose(line?.pose),\n    thickness: line?.thickness ?? 0.05,\n    scale_invariant: line?.scale_invariant ?? false,\n    points: line?.points?.map(normalizeVector3) ?? [],\n    color: normalizeColorRGBA(line?.color),\n    colors: normalizeColorRGBAs(line?.colors),\n    indices: line?.indices?.map((idx) => idx ?? NaN) ?? [],\n  };\n}\n\nfunction normalizeTriangleListPrimitive(\n  triangles: PartialMessage<TriangleListPrimitive> | undefined,\n): TriangleListPrimitive {\n  return {\n    pose: normalizePose(triangles?.pose),\n    points: triangles?.points?.map(normalizeVector3) ?? [],\n    color: normalizeColorRGBA(triangles?.color),\n    colors: normalizeColorRGBAs(triangles?.colors),\n    indices: triangles?.indices?.map((idx) => idx ?? NaN) ?? [],\n  };\n}\n\nfunction normalizeTextPrimitive(text: PartialMessage<TextPrimitive> | undefined): TextPrimitive {\n  return {\n    pose: normalizePose(text?.pose),\n    billboard: text?.billboard ?? true,\n    font_size: text?.font_size ?? (text?.scale_invariant ?? false ? 16 : 0.25),\n    scale_invariant: text?.scale_invariant ?? false,\n    color: normalizeColorRGBA(text?.color),\n    text: text?.text ?? \"\",\n  };\n}\n\nfunction normalizeModelPrimitive(\n  model: PartialMessage<ModelPrimitive> | undefined,\n): ModelPrimitive {\n  return {\n    pose: normalizePose(model?.pose),\n    scale: normalizeVector3(model?.scale),\n    color: normalizeColorRGBA(model?.color),\n    override_color: model?.override_color ?? false,\n    url: model?.url ?? \"\",\n    media_type: model?.media_type ?? \"\",\n    data: normalizeByteArray(model?.data),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport {\n  Color,\n  Inertia,\n  JointType,\n  Pose,\n  UrdfCollider,\n  UrdfGeometry,\n  UrdfInertial,\n  UrdfJoint,\n  UrdfLink,\n  UrdfMaterial,\n  UrdfRobot,\n  UrdfVisual,\n  Vector3,\n} from \"./types\";\n\nconst JOINT_TYPES = [\"fixed\", \"continuous\", \"revolute\", \"planar\", \"prismatic\", \"floating\"];\n\nexport function parseUrdf(xml: XMLDocument | string): UrdfRobot {\n  const parser = new DOMParser();\n  const urdf =\n    xml instanceof XMLDocument ? xml : (parser.parseFromString(xml, \"text/xml\") as XMLDocument);\n\n  for (let i = 0; i < urdf.children.length; i++) {\n    const child = urdf.children[i]!;\n    if (child.nodeName === \"robot\") {\n      return parseRobot(child);\n    }\n  }\n\n  throw new Error(`No robot found in URDF`);\n}\n\nfunction parseRobot(xml: Element): UrdfRobot {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  if (name == undefined) {\n    throw new Error(\"<robot> name is missing\");\n  }\n  const links = new Map<string, UrdfLink>();\n  const joints = new Map<string, UrdfJoint>();\n  const materials = new Map<string, UrdfMaterial>();\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    const childName = child.getAttribute(\"name\");\n    if (childName == undefined) {\n      continue;\n    }\n\n    switch (child.nodeName) {\n      case \"link\":\n        links.set(childName, parseLink(child));\n        break;\n      case \"joint\":\n        joints.set(childName, parseJoint(child));\n        break;\n      case \"material\":\n        materials.set(childName, parseMaterial(child));\n        break;\n    }\n  }\n\n  return { name, links, joints, materials };\n}\n\nfunction parseLink(xml: Element): UrdfLink {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  if (name == undefined) {\n    throw new Error(`missing attribute \"name\" in ${xml}`);\n  }\n\n  const link: UrdfLink = { name, visuals: [], colliders: [] };\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"inertial\":\n        link.inertial = parseInertial(child);\n        break;\n      case \"visual\":\n        link.visuals.push(parseVisual(child));\n        break;\n      case \"collision\":\n        link.colliders.push(parseCollision(child));\n        break;\n    }\n  }\n\n  return link;\n}\n\nfunction parseInertial(xml: Element): UrdfInertial {\n  let origin: Pose | undefined;\n  let mass: number | undefined;\n  let inertia: Inertia | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"mass\":\n        mass = parseFloatContent(child);\n        break;\n      case \"inertia\":\n        inertia = parseInertia(child);\n        break;\n    }\n  }\n\n  if (mass == undefined || inertia == undefined) {\n    throw new Error(\"<inertial> must have mass and inertia\");\n  }\n\n  return { origin: origin ?? defaultPose(), mass, inertia };\n}\n\nfunction parseJoint(xml: Element): UrdfJoint {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  const jointType = xml.getAttribute(\"type\") ?? undefined;\n  let origin: Pose | undefined;\n  let parentLink: string | undefined;\n  let childLink: string | undefined;\n  let axis: Vector3 | undefined;\n  let calibration: { rising?: number; falling?: number } | undefined;\n  let dynamics: { damping: number; friction: number } | undefined;\n  let limit: { lower: number; upper: number; effort: number; velocity: number } | undefined;\n  let mimic: { joint: string; multiplier: number; offset: number } | undefined;\n  let safetyController:\n    | {\n        softLowerLimit: number;\n        softUpperLimit: number;\n        kPosition: number;\n        kVelocity: number;\n      }\n    | undefined;\n\n  if (name == undefined) {\n    throw new Error(`missing attribute \"name\" in ${xml}`);\n  }\n  if (!JOINT_TYPES.includes(jointType ?? \"\")) {\n    throw new Error(`invalid joint type \"${jointType}\" in ${xml}`);\n  }\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"parent\":\n        parentLink = child.getAttribute(\"link\") ?? undefined;\n        break;\n      case \"child\":\n        childLink = child.getAttribute(\"link\") ?? undefined;\n        break;\n      case \"axis\":\n        axis = parseVec3Attribute(child, \"xyz\");\n        if (axis == undefined) {\n          throw new Error(`missing attribute \"xyz\" in ${child}`);\n        }\n        break;\n      case \"calibration\":\n        calibration = {\n          rising: parseFloatAttributeOptional(child, \"rising\"),\n          falling: parseFloatAttributeOptional(child, \"falling\"),\n        };\n        break;\n      case \"dynamics\":\n        dynamics = {\n          damping: parseFloatAttributeOptional(child, \"damping\") ?? 0,\n          friction: parseFloatAttributeOptional(child, \"friction\") ?? 0,\n        };\n        break;\n      case \"limit\":\n        limit = {\n          lower: parseFloatAttributeOptional(child, \"lower\") ?? 0,\n          upper: parseFloatAttributeOptional(child, \"upper\") ?? 0,\n          effort: parseFloatAttribute(child, \"effort\"),\n          velocity: parseFloatAttribute(child, \"velocity\"),\n        };\n        break;\n      case \"mimic\": {\n        const joint = child.getAttribute(\"joint\") ?? undefined;\n        if (joint == undefined) {\n          throw new Error(`missing attribute \"joint\" in ${child}`);\n        }\n        mimic = {\n          joint,\n          multiplier: parseFloatAttributeOptional(child, \"multiplier\") ?? 1,\n          offset: parseFloatAttributeOptional(child, \"offset\") ?? 0,\n        };\n        break;\n      }\n      case \"safety_controller\":\n        safetyController = {\n          softLowerLimit: parseFloatAttributeOptional(child, \"soft_lower_limit\") ?? 0,\n          softUpperLimit: parseFloatAttributeOptional(child, \"soft_upper_limit\") ?? 0,\n          kPosition: parseFloatAttributeOptional(child, \"k_position\") ?? 0,\n          kVelocity: parseFloatAttribute(child, \"k_velocity\"),\n        };\n        break;\n    }\n  }\n\n  if (parentLink == undefined || childLink == undefined) {\n    throw new Error(`missing parent or child in ${xml}`);\n  }\n\n  return {\n    name,\n    jointType: jointType as JointType,\n    origin: origin ?? defaultPose(),\n    parent: parentLink,\n    child: childLink,\n    axis: axis ?? { x: 1, y: 0, z: 0 },\n    calibration,\n    dynamics,\n    limit,\n    mimic,\n    safetyController,\n  };\n}\n\nfunction parseVisual(xml: Element): UrdfVisual {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  let origin: Pose | undefined;\n  let geometry: UrdfGeometry | undefined;\n  let material: UrdfMaterial | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"geometry\":\n        geometry = parseGeometry(child);\n        break;\n      case \"material\":\n        material = parseMaterial(child);\n        break;\n    }\n  }\n\n  if (geometry == undefined) {\n    throw new Error(\"<visual> must have geometry\");\n  }\n\n  return { name, origin: origin ?? defaultPose(), geometry, material };\n}\n\nfunction parseCollision(xml: Element): UrdfCollider {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  let origin: Pose | undefined;\n  let geometry: UrdfGeometry | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"geometry\":\n        geometry = parseGeometry(child);\n        break;\n    }\n  }\n\n  if (geometry == undefined) {\n    throw new Error(\"<collision> must have geometry\");\n  }\n\n  return { name, origin: origin ?? defaultPose(), geometry };\n}\n\nfunction parseMaterial(xml: Element): UrdfMaterial {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  let color: Color | undefined;\n  let texture: string | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"color\":\n        color = parseColorAttribute(child, \"rgba\");\n        break;\n      case \"texture\":\n        texture = child.getAttribute(\"filename\") ?? undefined;\n        break;\n    }\n  }\n\n  return { name, color, texture };\n}\n\nfunction parseInertia(xml: Element): Inertia {\n  const ixx = parseFloatAttribute(xml, \"ixx\");\n  const ixy = parseFloatAttribute(xml, \"ixy\");\n  const ixz = parseFloatAttribute(xml, \"ixz\");\n  const iyy = parseFloatAttribute(xml, \"iyy\");\n  const iyz = parseFloatAttribute(xml, \"iyz\");\n  const izz = parseFloatAttribute(xml, \"izz\");\n  return { ixx, ixy, ixz, iyy, iyz, izz };\n}\n\nfunction parseGeometry(xml: Element): UrdfGeometry {\n  if (xml.children.length < 1) {\n    throw new Error(\"<geometry> must contain box, cylinder, sphere, or mesh\");\n  }\n\n  const child = xml.children[0]!;\n  switch (child.nodeName) {\n    case \"box\": {\n      const size = parseVec3Attribute(child, \"size\");\n      if (size == undefined) {\n        throw new Error(`missing attribute \"size\" in ${xml}`);\n      }\n      return { geometryType: \"box\", size };\n    }\n    case \"cylinder\": {\n      const length = parseFloatAttribute(child, \"length\");\n      const radius = parseFloatAttribute(child, \"radius\");\n      return { geometryType: \"cylinder\", length, radius };\n    }\n    case \"sphere\": {\n      const radius = parseFloatAttribute(child, \"radius\");\n      return { geometryType: \"sphere\", radius };\n    }\n    case \"mesh\": {\n      const filename = child.getAttribute(\"filename\") ?? undefined;\n      const scale = parseVec3Attribute(child, \"scale\");\n      if (filename == undefined) {\n        throw new Error(`missing attribute \"filename\" in ${xml}`);\n      }\n      return { geometryType: \"mesh\", filename, scale };\n    }\n    default:\n      throw new Error(\"<geometry> must contain box, cylinder, sphere, or mesh\");\n  }\n}\n\nfunction parsePose(xml: Element): Pose {\n  const xyz = parseVec3Attribute(xml, \"xyz\") ?? { x: 0, y: 0, z: 0 };\n  const rpy = parseVec3Attribute(xml, \"rpy\") ?? { x: 0, y: 0, z: 0 };\n  return { xyz, rpy };\n}\n\nfunction parseVec3Attribute(xml: Element, attribName: string): Vector3 | undefined {\n  const parts = xml.getAttribute(attribName)?.trim().split(/\\s+/);\n  if (parts?.length !== 3) {\n    return undefined;\n  }\n\n  const [x, y, z] = parts as [string, string, string];\n  return { x: parseFloat(x), y: parseFloat(y), z: parseFloat(z) };\n}\n\nfunction parseColorAttribute(xml: Element, attribName: string): Color | undefined {\n  const parts = xml.getAttribute(attribName)?.trim().split(/\\s+/);\n  if (parts?.length !== 4) {\n    return undefined;\n  }\n\n  const [r, g, b, a] = parts as [string, string, string, string];\n  return { r: parseFloat(r), g: parseFloat(g), b: parseFloat(b), a: parseFloat(a) };\n}\n\nfunction parseFloatAttribute(xml: Element, attribName: string): number {\n  const value = xml.getAttribute(attribName);\n  if (value == undefined) {\n    throw new Error(`missing attribute \"${attribName}\" in ${xml}`);\n  }\n  return parseFloat(value);\n}\n\nfunction parseFloatAttributeOptional(xml: Element, attribName: string): number | undefined {\n  const value = xml.getAttribute(attribName);\n  if (value == undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n}\n\nfunction parseFloatContent(xml: Element): number {\n  if (xml.textContent == undefined) {\n    throw new Error(`expected float value in \"${xml}\"`);\n  }\n  return parseFloat(xml.textContent);\n}\n\nfunction defaultPose(): Pose {\n  return { xyz: { x: 0, y: 0, z: 0 }, rpy: { x: 0, y: 0, z: 0 } };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { XacroParser } from \"xacro-parser\";\n\nimport { parseUrdf } from \"./parser\";\nimport { UrdfRobot } from \"./types\";\n\nexport * from \"./types\";\n\nexport async function parseRobot(\n  urdfContents: string,\n  getFileContents: (url: string) => Promise<string>,\n): Promise<UrdfRobot> {\n  const xacroParser = new XacroParser();\n  xacroParser.rospackCommands = { find: (targetPkg) => `package://${targetPkg}` };\n  xacroParser.getFileContents = getFileContents;\n\n  const urdf = await xacroParser.parse(urdfContents);\n  return parseUrdf(urdf);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nexport type Point = { x: number; y: number; z: number };\n\nexport type Quaternion = { x: number; y: number; z: number; w: number };\n\nexport type Vector3 = { x: number; y: number; z: number };\n\nexport function eulerToQuaternion(rpy: Vector3): Quaternion {\n  const roll = rpy.x;\n  const pitch = rpy.y;\n  const yaw = rpy.z;\n\n  const cy = Math.cos(yaw * 0.5);\n  const sy = Math.sin(yaw * 0.5);\n  const cr = Math.cos(roll * 0.5);\n  const sr = Math.sin(roll * 0.5);\n  const cp = Math.cos(pitch * 0.5);\n  const sp = Math.sin(pitch * 0.5);\n\n  const w = cy * cr * cp + sy * sr * sp;\n  const x = cy * sr * cp - sy * cr * sp;\n  const y = cy * cr * sp + sy * sr * cp;\n  const z = sy * cr * cp - cy * sr * sp;\n\n  return { x, y, z, w };\n}\n\nexport function makeCovarianceArray(xDev: number, yDev: number, thetaDev: number): number[] {\n  const covariance = Array(36).fill(0);\n  covariance[6 * 0 + 0] = Math.pow(xDev, 2);\n  covariance[6 * 1 + 1] = Math.pow(yDev, 2);\n  covariance[6 * 5 + 5] = Math.pow(thetaDev, 2);\n  return covariance;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { Renderer } from \"../../Renderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableCube extends RenderableMarker {\n  private mesh: THREE.Mesh<THREE.BoxGeometry, THREE.MeshStandardMaterial>;\n  private outline: THREE.LineSegments;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Cube mesh\n    const cubeGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-cube`,\n      createGeometry,\n    );\n    const cubeEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-cube-edges`,\n      () => createEdgesGeometry(cubeGeometry),\n    );\n    this.mesh = new THREE.Mesh(cubeGeometry, makeStandardMaterial(marker.color));\n    this.mesh.castShadow = true;\n    this.mesh.receiveShadow = true;\n    this.add(this.mesh);\n\n    // Cube outline\n    this.outline = new THREE.LineSegments(cubeEdgesGeometry, renderer.outlineMaterial);\n    this.outline.userData.picking = false;\n    this.mesh.add(this.outline);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.mesh.material.transparent) {\n      this.mesh.material.transparent = transparent;\n      this.mesh.material.depthWrite = !transparent;\n      this.mesh.material.needsUpdate = true;\n    }\n\n    this.outline.visible = this.getSettings()?.showOutlines ?? true;\n\n    rgbToThreeColor(this.mesh.material.color, marker.color);\n    this.mesh.material.opacity = marker.color.a;\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n}\n\nexport function createGeometry(): THREE.BoxGeometry {\n  const cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\n  cubeGeometry.computeBoundingSphere();\n  return cubeGeometry;\n}\nfunction createEdgesGeometry(cubeGeometry: THREE.BoxGeometry): THREE.EdgesGeometry {\n  const cubeEdgesGeometry = new THREE.EdgesGeometry(cubeGeometry, 40);\n  cubeEdgesGeometry.computeBoundingSphere();\n  return cubeEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { Renderer } from \"../../Renderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { cylinderSubdivisions, DetailLevel } from \"../../lod\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableCylinder extends RenderableMarker {\n  private mesh: THREE.Mesh<THREE.CylinderGeometry, THREE.MeshStandardMaterial>;\n  private outline: THREE.LineSegments;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Cylinder mesh\n    const material = makeStandardMaterial(marker.color);\n    const cylinderGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-cylinder-${renderer.maxLod}`,\n      () => createGeometry(renderer.maxLod),\n    );\n    this.mesh = new THREE.Mesh(cylinderGeometry, material);\n    this.mesh.castShadow = true;\n    this.mesh.receiveShadow = true;\n    this.add(this.mesh);\n\n    // Cylinder outline\n    const edgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-edges-${renderer.maxLod}`,\n      () => createEdgesGeometry(cylinderGeometry),\n    );\n    this.outline = new THREE.LineSegments(edgesGeometry, renderer.outlineMaterial);\n    this.outline.userData.picking = false;\n    this.mesh.add(this.outline);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.mesh.material.transparent) {\n      this.mesh.material.transparent = transparent;\n      this.mesh.material.depthWrite = !transparent;\n      this.mesh.material.needsUpdate = true;\n    }\n\n    this.outline.visible = this.getSettings()?.showOutlines ?? true;\n\n    rgbToThreeColor(this.mesh.material.color, marker.color);\n    this.mesh.material.opacity = marker.color.a;\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n}\nfunction createGeometry(lod: DetailLevel): THREE.CylinderGeometry {\n  const subdivisions = cylinderSubdivisions(lod);\n  const cylinderGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, subdivisions);\n  cylinderGeometry.rotateX(Math.PI / 2); // Make the cylinder geometry stand upright\n  cylinderGeometry.computeBoundingSphere();\n  return cylinderGeometry;\n}\n\nfunction createEdgesGeometry(geometry: THREE.CylinderGeometry): THREE.EdgesGeometry {\n  const cylinderEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  cylinderEdgesGeometry.computeBoundingSphere();\n  return cylinderEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { EDGE_LINE_SEGMENTS_NAME } from \"@foxglove/studio-base/panels/ThreeDeeRender/ModelCache\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { Renderer } from \"../../Renderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { disposeMeshesRecursive } from \"../../dispose\";\nimport { Marker } from \"../../ros\";\nimport { removeLights, replaceMaterials } from \"../models\";\n\nexport type GltfMesh = THREE.Mesh<\n  THREE.BufferGeometry,\n  THREE.MeshStandardMaterial | THREE.MeshStandardMaterial[]\n>;\n\nconst MESH_FETCH_FAILED = \"MESH_FETCH_FAILED\";\n\nexport class RenderableMeshResource extends RenderableMarker {\n  private mesh: THREE.Group | THREE.Scene | undefined;\n  private material: THREE.MeshStandardMaterial;\n\n  /** Track updates to avoid race conditions when asynchronously loading models */\n  private updateId = 0;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.material = makeStandardMaterial(marker.color);\n    this.update(marker, receiveTime, true);\n  }\n\n  public override dispose(): void {\n    if (this.mesh) {\n      disposeMeshesRecursive(this.mesh);\n    }\n    this.material.dispose();\n  }\n\n  public override update(\n    newMarker: Marker,\n    receiveTime: bigint | undefined,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    forceLoad?: boolean,\n  ): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.material.transparent) {\n      this.material.transparent = transparent;\n      this.material.depthWrite = !transparent;\n      this.material.needsUpdate = true;\n    }\n\n    rgbToThreeColor(this.material.color, marker.color);\n    this.material.opacity = marker.color.a;\n\n    if (forceLoad === true || marker.mesh_resource !== prevMarker.mesh_resource) {\n      const curUpdateId = ++this.updateId;\n\n      const opts = { useEmbeddedMaterials: marker.mesh_use_embedded_materials };\n      const errors = this.renderer.settings.errors;\n      if (this.mesh) {\n        this.remove(this.mesh);\n        disposeMeshesRecursive(this.mesh);\n        this.mesh = undefined;\n      }\n      this._loadModel(marker.mesh_resource, opts)\n        .then((mesh) => {\n          if (!mesh) {\n            return;\n          }\n          if (this.updateId !== curUpdateId) {\n            // another update has started\n            disposeMeshesRecursive(mesh);\n            return;\n          }\n          this.mesh = mesh;\n          this.add(mesh);\n          this.updateOutlineVisibility();\n\n          // Remove any mesh fetch error message since loading was successful\n          this.renderer.settings.errors.remove(this.userData.settingsPath, MESH_FETCH_FAILED);\n          // Render a new frame now that the model is loaded\n          this.renderer.queueAnimationFrame();\n        })\n        .catch((err) => {\n          errors.add(\n            this.userData.settingsPath,\n            MESH_FETCH_FAILED,\n            `Unhandled error loading mesh from \"${marker.mesh_resource}\": ${err.message}`,\n          );\n        });\n    }\n    this.updateOutlineVisibility();\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n\n  private updateOutlineVisibility(): void {\n    const showOutlines = this.getSettings()?.showOutlines ?? true;\n    this.traverse((lineSegments) => {\n      // Want to avoid picking up the LineSegments from the model itself\n      // only update line segments that we've added with the special name\n      if (\n        lineSegments instanceof THREE.LineSegments &&\n        lineSegments.name === EDGE_LINE_SEGMENTS_NAME\n      ) {\n        lineSegments.visible = showOutlines;\n      }\n    });\n  }\n\n  private async _loadModel(\n    url: string,\n    opts: { useEmbeddedMaterials: boolean },\n  ): Promise<THREE.Group | THREE.Scene | undefined> {\n    const cachedModel = await this.renderer.modelCache.load(url, {}, (err) => {\n      this.renderer.settings.errors.add(\n        this.userData.settingsPath,\n        MESH_FETCH_FAILED,\n        `Error loading mesh from \"${url}\": ${err.message}`,\n      );\n    });\n\n    if (!cachedModel) {\n      if (!this.renderer.settings.errors.hasError(this.userData.settingsPath, MESH_FETCH_FAILED)) {\n        this.renderer.settings.errors.add(\n          this.userData.settingsPath,\n          MESH_FETCH_FAILED,\n          `Failed to load mesh from \"${url}\"`,\n        );\n      }\n      return undefined;\n    }\n\n    const mesh = cachedModel.clone(true);\n    removeLights(mesh);\n    if (!opts.useEmbeddedMaterials) {\n      replaceMaterials(mesh, this.material);\n    }\n\n    return mesh;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { vec3 } from \"gl-matrix\";\nimport i18next from \"i18next\";\nimport { maxBy } from \"lodash\";\nimport * as THREE from \"three\";\n\nimport { UrdfGeometryMesh, UrdfRobot, UrdfVisual, parseRobot, UrdfJoint } from \"@foxglove/den/urdf\";\nimport Logger from \"@foxglove/log\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction, SettingsTreeChildren, SettingsTreeFields } from \"@foxglove/studio\";\nimport { eulerToQuaternion } from \"@foxglove/studio-base/util/geometry\";\nimport isDesktopApp from \"@foxglove/studio-base/util/isDesktopApp\";\n\nimport { RenderableCube } from \"./markers/RenderableCube\";\nimport { RenderableCylinder } from \"./markers/RenderableCylinder\";\nimport { RenderableMeshResource } from \"./markers/RenderableMeshResource\";\nimport { RenderableSphere } from \"./markers/RenderableSphere\";\nimport { missingTransformMessage, MISSING_TRANSFORM } from \"./transforms\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Renderer } from \"../Renderer\";\nimport { PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport {\n  ColorRGBA,\n  JointState,\n  JOINTSTATE_DATATYPES,\n  Marker,\n  MarkerAction,\n  MarkerType,\n  Quaternion,\n  Vector3,\n} from \"../ros\";\nimport {\n  BaseSettings,\n  CustomLayerSettings,\n  PRECISION_DEGREES,\n  PRECISION_DISTANCE,\n} from \"../settings\";\nimport { Pose, makePose, TransformTree } from \"../transforms\";\nimport { updatePose } from \"../updatePose\";\n\nconst log = Logger.getLogger(__filename);\n\nconst LAYER_ID = \"foxglove.Urdf\";\nconst TOPIC_NAME = \"/robot_description\";\n\n/** ID of fake \"topic\" used to represent the /robot_description parameter */\nconst PARAM_KEY = \"param:/robot_description\";\n/** Standard parameter name used for URDF data in ROS */\nconst PARAM_NAME = \"/robot_description\";\nconst PARAM_DISPLAY_NAME = \"/robot_description (parameter)\";\n\nconst VALID_URL_ERR = \"ValidUrl\";\nconst FETCH_URDF_ERR = \"FetchUrdf\";\nconst PARSE_URDF_ERR = \"ParseUrdf\";\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\nconst DEFAULT_COLOR = { r: 1, g: 1, b: 1, a: 1 };\nconst VEC3_ONE = { x: 1, y: 1, z: 1 };\nconst XYZ_LABEL: [string, string, string] = [\"X\", \"Y\", \"Z\"];\nconst RPY_LABEL: [string, string, string] = [\"R\", \"P\", \"Y\"];\n\nexport type LayerSettingsUrdf = BaseSettings & {\n  instanceId: string; // This will be set to the topic name\n};\n\nexport type LayerSettingsCustomUrdf = CustomLayerSettings & {\n  layerId: \"foxglove.Urdf\";\n  url: string;\n};\n\nconst DEFAULT_SETTINGS: LayerSettingsUrdf = {\n  visible: false,\n  frameLocked: true,\n  instanceId: \"invalid\",\n};\n\nconst DEFAULT_CUSTOM_SETTINGS: LayerSettingsCustomUrdf = {\n  visible: true,\n  frameLocked: true,\n  label: \"URDF\",\n  instanceId: \"invalid\",\n  layerId: LAYER_ID,\n  url: \"\",\n};\n\nconst tempVec3a = new THREE.Vector3();\nconst tempVec3b = new THREE.Vector3();\nconst tempQuaternion1 = new THREE.Quaternion();\nconst tempQuaternion2 = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\n\nexport type UrdfUserData = BaseUserData & {\n  settings: LayerSettingsUrdf | LayerSettingsCustomUrdf;\n  fetching?: { url: string; control: AbortController };\n  url: string | undefined;\n  urdf: string | undefined;\n  renderables: Map<string, Renderable>;\n};\n\nenum EmbeddedMaterialUsage {\n  Use,\n  Ignore,\n}\n\ntype TransformData = {\n  parent: string;\n  child: string;\n  translation: Vector3;\n  rotation: Quaternion;\n  joint: UrdfJoint;\n};\n\ntype ParsedUrdf = {\n  robot: UrdfRobot;\n  frames: string[];\n  transforms: TransformData[];\n};\n\ntype JointPosition = {\n  timestamp: bigint;\n  position: number;\n};\n\n// One day we can think about using feature detection. Until that day comes we acknowledge the\n// realities of only having two platforms: web and desktop.\nconst supportsPackageUrl = isDesktopApp();\n\nexport class UrdfRenderable extends Renderable<UrdfUserData> {\n  public override dispose(): void {\n    this.removeChildren();\n    this.userData.urdf = undefined;\n    super.dispose();\n  }\n\n  public removeChildren(): void {\n    for (const childRenderable of this.userData.renderables.values()) {\n      childRenderable.dispose();\n    }\n    this.children.length = 0;\n    this.userData.renderables.clear();\n  }\n}\n\nexport class Urdfs extends SceneExtension<UrdfRenderable> {\n  private framesByInstanceId = new Map<string, string[]>();\n  private transformsByInstanceId = new Map<string, TransformData[]>();\n  private jointStates = new Map<string, JointPosition>();\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.Urdfs\", renderer);\n\n    renderer.addTopicSubscription(TOPIC_NAME, this.handleRobotDescription);\n    // Note that this subscription will never happen because it does not appear as a topic in the\n    // topic list that can have its visibility toggled on. The ThreeDeeRender subscription logic\n    // needs to become more flexible to make this possible\n    renderer.addSchemaSubscriptions(JOINTSTATE_DATATYPES, this.handleJointState);\n    renderer.on(\"parametersChange\", this.handleParametersChange);\n    renderer.addCustomLayerAction({\n      layerId: LAYER_ID,\n      label: i18next.t(\"threeDee:addURDF\"),\n      icon: \"PrecisionManufacturing\",\n      handler: this.handleAddUrdf,\n    });\n\n    // Load existing URDF layers from the config\n    for (const [instanceId, entry] of Object.entries(renderer.config.layers)) {\n      if (entry?.layerId === LAYER_ID) {\n        this._loadUrdf(instanceId, undefined);\n      }\n    }\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const entries: SettingsTreeEntry[] = [];\n\n    // /robot_description topic entry\n    const topic = this.renderer.topicsByName?.get(TOPIC_NAME);\n    if (topic != undefined) {\n      const config = (this.renderer.config.topics[TOPIC_NAME] ?? {}) as Partial<LayerSettingsUrdf>;\n      entries.push({\n        path: [\"topics\", TOPIC_NAME],\n        node: {\n          label: TOPIC_NAME,\n          icon: \"PrecisionManufacturing\",\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler: this.handleTopicSettingsAction,\n          children: urdfChildren(\n            this.transformsByInstanceId.get(TOPIC_NAME),\n            this.renderer.transformTree,\n            this.jointStates,\n          ),\n        },\n      });\n    }\n\n    // /robot_description parameter entry\n    const parameter = this.renderer.parameters?.get(PARAM_NAME);\n    if (parameter != undefined) {\n      const config = (this.renderer.config.topics[PARAM_KEY] ?? {}) as Partial<LayerSettingsUrdf>;\n\n      const fields: SettingsTreeFields = {};\n\n      entries.push({\n        path: [\"topics\", PARAM_KEY],\n        node: {\n          label: PARAM_DISPLAY_NAME,\n          icon: \"PrecisionManufacturing\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler: this.handleTopicSettingsAction,\n          children: urdfChildren(\n            this.transformsByInstanceId.get(PARAM_KEY),\n            this.renderer.transformTree,\n            this.jointStates,\n          ),\n        },\n      });\n    }\n\n    // Custom layer entries\n    for (const [instanceId, layerConfig] of Object.entries(this.renderer.config.layers)) {\n      if (layerConfig?.layerId === LAYER_ID) {\n        const config = layerConfig as Partial<LayerSettingsCustomUrdf>;\n        const placeholder = supportsPackageUrl ? \"package://\" : undefined;\n        const help = supportsPackageUrl\n          ? \"package:// URL or http(s) URL pointing to a Unified Robot Description Format (URDF) XML file\"\n          : \"http(s) URL pointing to a Unified Robot Description Format (URDF) XML file\";\n\n        const fields: SettingsTreeFields = {\n          url: { label: \"URL\", input: \"string\", placeholder, help, value: config.url ?? \"\" },\n        };\n\n        entries.push({\n          path: [\"layers\", instanceId],\n          node: {\n            label: config.label ?? \"Grid\",\n            icon: \"PrecisionManufacturing\",\n            fields,\n            visible: config.visible ?? DEFAULT_CUSTOM_SETTINGS.visible,\n            actions: [{ type: \"action\", id: \"delete\", label: \"Delete\" }],\n            order: layerConfig.order,\n            handler: this.handleLayerSettingsAction,\n            children: urdfChildren(\n              this.transformsByInstanceId.get(instanceId),\n              this.renderer.transformTree,\n              this.jointStates,\n            ),\n          },\n        });\n      }\n    }\n\n    return entries;\n  }\n\n  public override removeAllRenderables(): void {\n    // Re-add coordinate frames and transforms since the scene has been cleared\n    this._refreshTransforms();\n  }\n\n  /**\n   * Re-add coordinate frames and transforms corresponding to existing custom URDFs\n   */\n  private _refreshTransforms() {\n    for (const [instanceId, frames] of this.framesByInstanceId) {\n      this._loadFrames(instanceId, frames);\n    }\n    for (const [instanceId, transforms] of this.transformsByInstanceId) {\n      this._loadTransforms(instanceId, transforms);\n    }\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    for (const renderable of this.renderables.values()) {\n      const path = renderable.userData.settingsPath;\n      let hasTfError = false;\n\n      renderable.visible = renderable.userData.settings.visible;\n      if (!renderable.visible) {\n        this.renderer.settings.errors.clearPath(path);\n        continue;\n      }\n\n      // UrdfRenderables always stay at the origin. Their children renderables\n      // are individually updated since each child exists in a different frame\n      for (const childRenderable of renderable.userData.renderables.values()) {\n        const srcTime = currentTime;\n        const frameId = childRenderable.userData.frameId;\n        const updated = updatePose(\n          childRenderable,\n          this.renderer.transformTree,\n          renderFrameId,\n          fixedFrameId,\n          frameId,\n          currentTime,\n          srcTime,\n        );\n        if (!updated) {\n          const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n          this.renderer.settings.errors.add(path, MISSING_TRANSFORM, message);\n          hasTfError = true;\n        }\n      }\n\n      if (!hasTfError) {\n        this.renderer.settings.errors.remove(path, MISSING_TRANSFORM);\n      }\n    }\n  }\n\n  private handleTopicSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action === \"update\") {\n      this.handleSettingsUpdate(action);\n      return;\n    }\n  };\n\n  private handleLayerSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // Handle menu actions (delete)\n    if (action.action === \"perform-node-action\") {\n      if (path.length === 2 && action.payload.id === \"delete\") {\n        const instanceId = path[1]!;\n\n        // Remove this instance from the config\n        this.renderer.updateConfig((draft) => {\n          delete draft.layers[instanceId];\n        });\n\n        // Remove the renderable\n        const renderable = this.renderables.get(instanceId);\n        if (renderable) {\n          renderable.dispose();\n          this.remove(renderable);\n          this.renderables.delete(instanceId);\n        }\n\n        // Remove transforms from the TF tree\n        const transforms = this.transformsByInstanceId.get(instanceId);\n        if (transforms) {\n          for (const { parent, child } of transforms) {\n            this.renderer.removeTransform(child, parent, 0n);\n          }\n        }\n        this.framesByInstanceId.delete(instanceId);\n        this.transformsByInstanceId.delete(instanceId);\n\n        // Re-add coordinate frames in case the deleted URDF shared frame names with other URDFs\n        this._refreshTransforms();\n\n        // Update the settings tree\n        this.updateSettingsTree();\n        this.renderer.updateCustomLayersCount();\n      }\n      return;\n    } /* if (action.action === \"update\") */ else {\n      this.handleSettingsUpdate(action);\n    }\n  };\n\n  private handleSettingsUpdate = (action: { action: \"update\" } & SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    if (path.length === 5 && path[2] === \"joints\") {\n      // [\"layers\", instanceId, \"joints\", jointName, \"manual\"]\n      const instanceId = path[1]!;\n      const jointName = path[3]!;\n      const transforms = this.transformsByInstanceId.get(instanceId);\n      if (!transforms) {\n        return;\n      }\n\n      const transformData = transforms.find((t) => t.joint.name === jointName);\n      if (!transformData) {\n        return;\n      }\n\n      const joint = transformData.joint;\n      const frame = this.renderer.transformTree.getOrCreateFrame(transformData.child);\n      const frameKey = `frame:${frame.id}`;\n      const isAngular = joint.jointType === \"revolute\" || joint.jointType === \"continuous\";\n      const axis = tempVec3a.set(joint.axis.x, joint.axis.y, joint.axis.z);\n\n      if (isAngular) {\n        const degrees = action.payload.value as number;\n        const quaternion = tempQuaternion1.setFromAxisAngle(axis, degrees * DEG2RAD);\n        const euler = tempEuler.setFromQuaternion(quaternion);\n        frame.offsetEulerDegrees = [euler.x * RAD2DEG, euler.y * RAD2DEG, euler.z * RAD2DEG];\n        this.saveSetting([\"transforms\", frameKey, \"rpyOffset\"], frame.offsetEulerDegrees);\n      } else {\n        const scale = action.payload.value as number;\n        axis.multiplyScalar(scale);\n        frame.offsetPosition = [axis.x, axis.y, axis.z];\n        this.saveSetting([\"transforms\", frameKey, \"xyzOffset\"], frame.offsetPosition);\n      }\n    } else if (path.length === 3) {\n      // [\"layers\", instanceId, field]\n      this.saveSetting(path, action.payload.value);\n      const instanceId = path[1]!;\n      if (path[1] === PARAM_KEY) {\n        this._loadUrdf(instanceId, this.renderer.parameters?.get(PARAM_NAME) as string | undefined);\n      } else {\n        this._loadUrdf(instanceId, undefined);\n      }\n    }\n  };\n\n  private handleRobotDescription = (messageEvent: PartialMessageEvent<{ data: string }>): void => {\n    const robotDescription = messageEvent.message.data;\n    if (typeof robotDescription !== \"string\") {\n      return;\n    }\n    this._loadUrdf(TOPIC_NAME, robotDescription);\n  };\n\n  private handleJointState = (messageEvent: PartialMessageEvent<JointState>): void => {\n    const msg = messageEvent.message;\n    const names = msg.name ?? [];\n    const positions = msg.position ?? [];\n    const timestamp = toNanoSec(messageEvent.receiveTime);\n\n    for (let i = 0; i < names.length; i++) {\n      const name = names[i]!;\n      const position = positions[i] ?? 0;\n\n      const prevTimestamp = this.jointStates.get(name)?.timestamp;\n      if (prevTimestamp == undefined || timestamp >= prevTimestamp) {\n        this.jointStates.set(name, { timestamp, position });\n      }\n    }\n  };\n\n  private handleParametersChange = (parameters: ReadonlyMap<string, unknown> | undefined): void => {\n    const robotDescription = parameters?.get(PARAM_NAME);\n    if (typeof robotDescription !== \"string\") {\n      return;\n    }\n    this._loadUrdf(PARAM_KEY, robotDescription);\n  };\n\n  private handleAddUrdf = (instanceId: string): void => {\n    log.info(`Creating ${LAYER_ID} layer ${instanceId}`);\n\n    const config: LayerSettingsCustomUrdf = { ...DEFAULT_CUSTOM_SETTINGS, instanceId };\n\n    // Add this instance to the config\n    this.renderer.updateConfig((draft) => {\n      const maxOrderLayer = maxBy(Object.values(draft.layers), (layer) => layer?.order);\n      const order = 1 + (maxOrderLayer?.order ?? 0);\n      draft.layers[instanceId] = { ...config, order };\n    });\n\n    // Add the URDF renderable\n    this._loadUrdf(instanceId, undefined);\n\n    // Update the settings tree\n    this.updateSettingsTree();\n  };\n\n  private _fetchUrdf(instanceId: string, url: string): void {\n    const renderable = this.renderables.get(instanceId);\n    if (!renderable) {\n      throw new Error(`_fetchUrdf() should only be called for existing renderables`);\n    }\n\n    // Check if a valid URL was provided\n    if (!isValidUrl(url)) {\n      const path = renderable.userData.settingsPath;\n      this.renderer.settings.errors.add(path, VALID_URL_ERR, `Invalid URDF URL: \"${url}\"`);\n      return;\n    }\n    this.renderer.settings.errors.remove(renderable.userData.settingsPath, VALID_URL_ERR);\n\n    // Check if this URL has already been fetched\n    if (renderable.userData.url === url) {\n      return;\n    }\n\n    if (renderable.userData.fetching) {\n      // Check if this fetch is already in progress\n      if (renderable.userData.fetching.url === url) {\n        return;\n      }\n\n      // Cancel the previous fetch\n      renderable.userData.fetching.control.abort();\n    }\n\n    log.debug(`Fetching URDF from ${url}`);\n    renderable.userData.fetching = { url, control: new AbortController() };\n    fetch(url, { signal: renderable.userData.fetching.control.signal })\n      // eslint-disable-next-line @typescript-eslint/promise-function-async\n      .then((res) => res.text())\n      .then((urdf) => {\n        log.debug(`Fetched ${urdf.length} byte URDF from ${url}`);\n        this.renderer.settings.errors.remove([\"layers\", instanceId], FETCH_URDF_ERR);\n        this._loadUrdf(instanceId, urdf);\n      })\n      .catch((unknown) => {\n        const err = unknown as Error;\n        const hasError = !err.message.startsWith(\"Failed to fetch\");\n        const errMessage = `Failed to load URDF from \"${url}\"${hasError ? `: ${err.message}` : \"\"}`;\n        this.renderer.settings.errors.add([\"layers\", instanceId], FETCH_URDF_ERR, errMessage);\n      });\n  }\n\n  private _getCurrentSettings(instanceId: string) {\n    const isTopicOrParam = instanceId === TOPIC_NAME || instanceId === PARAM_KEY;\n    const baseSettings = isTopicOrParam ? DEFAULT_SETTINGS : DEFAULT_CUSTOM_SETTINGS;\n    const userSettings = isTopicOrParam\n      ? this.renderer.config.topics[instanceId]\n      : this.renderer.config.layers[instanceId];\n    const settings = { ...baseSettings, ...userSettings, instanceId };\n    return settings;\n  }\n\n  private _loadUrdf(instanceId: string, urdf: string | undefined): void {\n    let renderable = this.renderables.get(instanceId);\n    if (renderable && urdf != undefined && renderable.userData.urdf === urdf) {\n      const settings = this._getCurrentSettings(instanceId);\n      renderable.userData.settings = settings;\n      return;\n    }\n\n    // Clear any previous parsed data for this instanceId\n    this.transformsByInstanceId.delete(instanceId);\n    this.framesByInstanceId.delete(instanceId);\n    this.updateSettingsTree();\n\n    const isTopicOrParam = instanceId === TOPIC_NAME || instanceId === PARAM_KEY;\n    const frameId = this.renderer.fixedFrameId ?? \"\"; // Unused\n    const settingsPath = isTopicOrParam ? [\"topics\", instanceId] : [\"layers\", instanceId];\n    const settings = this._getCurrentSettings(instanceId);\n    const url = (settings as Partial<LayerSettingsCustomUrdf>).url;\n\n    // Create a UrdfRenderable if it does not already exist\n    if (!renderable) {\n      renderable = new UrdfRenderable(instanceId, this.renderer, {\n        urdf,\n        url: urdf != undefined ? url : undefined,\n        fetching: undefined,\n        renderables: new Map(),\n        receiveTime: 0n,\n        messageTime: 0n,\n        frameId,\n        pose: makePose(),\n        settingsPath,\n        settings,\n      });\n      this.add(renderable);\n      this.renderables.set(instanceId, renderable);\n    }\n\n    renderable.userData.urdf = urdf;\n    renderable.userData.url = urdf != undefined ? url : undefined;\n    renderable.userData.settings = settings;\n    renderable.userData.fetching = undefined;\n\n    if (!urdf) {\n      renderable.removeChildren();\n\n      // Fetch the URDF from the URL if we have one\n      if (url != undefined) {\n        this._fetchUrdf(instanceId, url);\n      }\n      return;\n    }\n\n    // Parse the URDF\n    const loadedRenderable = renderable;\n    parseUrdf(urdf)\n      .then((parsed) => {\n        this._loadRobot(loadedRenderable, parsed);\n        // the frame from the settings update is called before the robot is loaded\n        // need to queue another animation frame after robot has been loaded\n        this.renderer.queueAnimationFrame();\n      })\n      .catch((unknown) => {\n        const err = unknown as Error;\n        log.error(`Failed to parse URDF: ${err.message}`);\n        this.renderer.settings.errors.add(\n          settingsPath,\n          PARSE_URDF_ERR,\n          `Failed to parse URDF: ${err.message}`,\n        );\n      });\n  }\n\n  private _loadRobot(renderable: UrdfRenderable, { robot, frames, transforms }: ParsedUrdf): void {\n    const renderer = this.renderer;\n    const instanceId = renderable.userData.settings.instanceId;\n\n    this._loadFrames(instanceId, frames);\n    this._loadTransforms(instanceId, transforms);\n    this.updateSettingsTree();\n\n    // Dispose any existing renderables\n    renderable.removeChildren();\n\n    const createChild = (frameId: string, i: number, visual: UrdfVisual): void => {\n      const baseUrl = renderable.userData.url;\n      const childRenderable = createRenderable(visual, robot, i, frameId, renderer, baseUrl);\n      // Set the childRenderable settingsPath so errors route to the correct place\n      childRenderable.userData.settingsPath = renderable.userData.settingsPath;\n      renderable.userData.renderables.set(childRenderable.name, childRenderable);\n      renderable.add(childRenderable);\n    };\n\n    // Create a renderable for each link\n    for (const link of robot.links.values()) {\n      const frameId = link.name;\n\n      for (let i = 0; i < link.visuals.length; i++) {\n        createChild(frameId, i, link.visuals[i]!);\n      }\n\n      if (link.visuals.length === 0 && link.colliders.length > 0) {\n        // If there are no visuals, but there are colliders, render those instead\n        for (let i = 0; i < link.colliders.length; i++) {\n          createChild(frameId, i, link.colliders[i]!);\n        }\n      }\n    }\n  }\n\n  private _loadFrames(instanceId: string, frames: string[]): void {\n    this.framesByInstanceId.set(instanceId, frames);\n\n    // Import all coordinate frames from the URDF into the scene\n    for (const frameId of frames) {\n      this.renderer.addCoordinateFrame(frameId);\n    }\n  }\n\n  private _loadTransforms(instanceId: string, transforms: TransformData[]): void {\n    this.transformsByInstanceId.set(instanceId, transforms);\n\n    // Import all transforms from the URDF into the scene\n    const isTopicOrParam = instanceId === TOPIC_NAME || instanceId === PARAM_KEY;\n    const settingsPath = isTopicOrParam ? [\"topics\", instanceId] : [\"layers\", instanceId];\n    for (const { parent, child, translation, rotation } of transforms) {\n      this.renderer.addTransform(parent, child, 0n, translation, rotation, settingsPath);\n    }\n  }\n}\n\nasync function parseUrdf(text: string): Promise<ParsedUrdf> {\n  const fileFetcher = getFileFetch();\n\n  try {\n    log.debug(`Parsing ${text.length} byte URDF`);\n    const robot = await parseRobot(text, fileFetcher);\n\n    const frames = Array.from(robot.links.values(), (link) => link.name);\n    const transforms = Array.from(robot.joints.values(), (joint) => {\n      const translation = joint.origin.xyz;\n      const rotation = eulerToQuaternion(joint.origin.rpy);\n      const transform: TransformData = {\n        parent: joint.parent,\n        child: joint.child,\n        translation,\n        rotation,\n        joint,\n      };\n      return transform;\n    });\n\n    return { robot, frames, transforms };\n  } catch (err) {\n    throw new Error(`Failed to parse ${text.length} byte URDF: ${err}`);\n  }\n}\n\nfunction getFileFetch(): (url: string) => Promise<string> {\n  return async (url: string) => {\n    try {\n      log.debug(`fetch(${url}) requested`);\n      const res = await fetch(url);\n      return await res.text();\n    } catch (err) {\n      throw new Error(`Failed to fetch \"${url}\": ${err}`);\n    }\n  };\n}\n\nfunction createRenderable(\n  visual: UrdfVisual,\n  robot: UrdfRobot,\n  id: number,\n  frameId: string,\n  renderer: Renderer,\n  baseUrl: string | undefined,\n): Renderable {\n  const name = `${frameId}-${id}-${visual.geometry.geometryType}`;\n  const orientation = eulerToQuaternion(visual.origin.rpy);\n  const pose = { position: visual.origin.xyz, orientation };\n  const color = getColor(visual, robot);\n  const type = visual.geometry.geometryType;\n  switch (type) {\n    case \"box\": {\n      const scale = visual.geometry.size;\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableCube(name, marker, undefined, renderer);\n    }\n    case \"cylinder\": {\n      const cylinder = visual.geometry;\n      const scale = { x: cylinder.radius * 2, y: cylinder.radius * 2, z: cylinder.length };\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableCylinder(name, marker, undefined, renderer);\n    }\n    case \"sphere\": {\n      const sphere = visual.geometry;\n      const scale = { x: sphere.radius * 2, y: sphere.radius * 2, z: sphere.radius * 2 };\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableSphere(name, marker, undefined, renderer);\n    }\n    case \"mesh\": {\n      // Use embedded materials only when no override material is defined in the URDF\n      const embedded = !visual.material ? EmbeddedMaterialUsage.Use : EmbeddedMaterialUsage.Ignore;\n      const marker = createMeshMarker(frameId, pose, embedded, visual.geometry, baseUrl, color);\n      return new RenderableMeshResource(name, marker, undefined, renderer);\n    }\n    default:\n      throw new Error(`Unrecognized visual geometryType: ${type}`);\n  }\n}\n\nfunction getColor(visual: UrdfVisual, robot: UrdfRobot): ColorRGBA {\n  if (!visual.material) {\n    return DEFAULT_COLOR;\n  }\n  if (visual.material.color) {\n    return visual.material.color;\n  }\n  if (visual.material.name) {\n    return robot.materials.get(visual.material.name)?.color ?? DEFAULT_COLOR;\n  }\n  return DEFAULT_COLOR;\n}\n\nfunction createMarker(\n  frameId: string,\n  type: MarkerType,\n  pose: Pose,\n  scale: Vector3,\n  color: ColorRGBA,\n): Marker {\n  return {\n    header: { frame_id: frameId, stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type,\n    action: MarkerAction.ADD,\n    pose,\n    scale,\n    color,\n    lifetime: { sec: 0, nsec: 0 },\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction createMeshMarker(\n  frameId: string,\n  pose: Pose,\n  embeddedMaterialUsage: EmbeddedMaterialUsage,\n  mesh: UrdfGeometryMesh,\n  baseUrl: string | undefined,\n  color: ColorRGBA,\n): Marker {\n  const scale = mesh.scale ?? VEC3_ONE;\n  return {\n    header: { frame_id: frameId, stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.MESH_RESOURCE,\n    action: MarkerAction.ADD,\n    pose,\n    scale,\n    color,\n    lifetime: { sec: 0, nsec: 0 },\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: new URL(mesh.filename, baseUrl).toString(),\n    mesh_use_embedded_materials: embeddedMaterialUsage === EmbeddedMaterialUsage.Use,\n  };\n}\n\nconst VALID_PROTOCOLS = [\"https:\", \"http:\", \"file:\", \"data:\"];\n\nfunction isValidUrl(str: string): boolean {\n  try {\n    const url = new URL(str);\n    return (\n      (supportsPackageUrl && url.protocol === \"package:\") || VALID_PROTOCOLS.includes(url.protocol)\n    );\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction urdfChildren(\n  transforms: TransformData[] | undefined,\n  transformTree: TransformTree,\n  jointStates: Map<string, JointPosition>,\n): SettingsTreeChildren {\n  if (!transforms) {\n    return {};\n  }\n\n  const jointChildren: SettingsTreeChildren = {};\n  for (const { joint } of transforms) {\n    const frameId = joint.child;\n    const frame = transformTree.getOrCreateFrame(frameId);\n\n    const { x, y, z } = joint.origin.xyz;\n    const { x: roll, y: pitch, z: yaw } = joint.origin.rpy;\n    const { x: aX, y: aY, z: aZ } = joint.axis;\n    const fields: SettingsTreeFields = {};\n    fields.jointType = {\n      label: \"Type\",\n      input: \"string\",\n      readonly: true,\n      value: joint.jointType,\n    };\n\n    switch (joint.jointType) {\n      case \"fixed\":\n        break;\n      case \"continuous\":\n      case \"revolute\": {\n        const min = joint.limit ? joint.limit.lower * RAD2DEG : -180;\n        const max = joint.limit ? joint.limit.upper * RAD2DEG : 180;\n        let manualDegrees: number | undefined;\n        const jointStateRadians = jointStates.get(joint.name)?.position;\n\n        if (frame.offsetEulerDegrees) {\n          // Convert the Euler degrees to a quaternion\n          const quaternion = eulerDegreesToQuaternion(frame.offsetEulerDegrees);\n          const radians = signedAngleAroundAxis(quaternion, joint.axis);\n          manualDegrees = radians * RAD2DEG;\n        }\n\n        fields.manual = {\n          label: \"Manual angle\",\n          input: \"number\",\n          precision: PRECISION_DEGREES,\n          step: 1,\n          min,\n          max,\n          value: manualDegrees,\n        };\n\n        if (jointStateRadians != undefined) {\n          fields.jointState = {\n            label: \"JointState angle\",\n            input: \"number\",\n            precision: PRECISION_DEGREES,\n            min,\n            max,\n            readonly: true,\n            value: jointStateRadians * RAD2DEG,\n          };\n        }\n        break;\n      }\n      case \"prismatic\": {\n        const min = joint.limit?.lower;\n        const max = joint.limit?.upper;\n        const manualPosition = frame.offsetPosition\n          ? signedDistanceAlongAxis(frame.offsetPosition, joint.axis)\n          : undefined;\n        const jointStatePosition = jointStates.get(joint.name)?.position;\n\n        fields.manual = {\n          label: \"Manual position\",\n          input: \"number\",\n          precision: PRECISION_DISTANCE,\n          step: 0.01,\n          min,\n          max,\n          value: manualPosition,\n        };\n        if (jointStatePosition != undefined) {\n          fields.jointState = {\n            label: \"JointState position\",\n            input: \"number\",\n            precision: PRECISION_DISTANCE,\n            min,\n            max,\n            readonly: true,\n            value: jointStatePosition,\n          };\n        }\n        break;\n      }\n      case \"floating\":\n      case \"planar\":\n        // Motion could be supported for these types in the future\n        break;\n    }\n\n    fields.position = {\n      label: \"Position\",\n      input: \"vec3\",\n      labels: XYZ_LABEL,\n      precision: PRECISION_DISTANCE,\n      readonly: true,\n      value: [x, y, z],\n    };\n    fields.rotation = {\n      label: \"Rotation\",\n      input: \"vec3\",\n      labels: RPY_LABEL,\n      precision: PRECISION_DEGREES,\n      readonly: true,\n      value: [roll * RAD2DEG, pitch * RAD2DEG, yaw * RAD2DEG],\n    };\n    fields.parent = {\n      label: \"Parent\",\n      input: \"string\",\n      readonly: true,\n      value: joint.parent,\n    };\n    fields.child = {\n      label: \"Child\",\n      input: \"string\",\n      readonly: true,\n      value: joint.child,\n    };\n    if (joint.jointType !== \"fixed\") {\n      fields.axis = {\n        label: \"Axis\",\n        input: \"vec3\",\n        labels: XYZ_LABEL,\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: [aX, aY, aZ],\n      };\n    }\n    if (joint.calibration) {\n      const { rising, falling } = joint.calibration;\n      fields.calibration = {\n        label: \"Calibration\",\n        input: \"vec2\",\n        labels: [\"↑\", \"↓\"],\n        readonly: true,\n        value: [rising, falling],\n      };\n    }\n    if (joint.dynamics) {\n      const { damping, friction } = joint.dynamics;\n      fields.damping = {\n        label: \"Damping\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: damping,\n      };\n      fields.friction = {\n        label: \"Friction\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: friction,\n      };\n    }\n    if (joint.limit) {\n      const { effort, velocity } = joint.limit;\n      if (joint.jointType !== \"continuous\" && joint.jointType !== \"fixed\") {\n        const { upper, lower } = joint.limit;\n        const isAngular = joint.jointType === \"revolute\";\n        const upperValue = isAngular ? upper * RAD2DEG : upper;\n        const lowerValue = isAngular ? lower * RAD2DEG : lower;\n        fields.limit = {\n          label: \"Limit\",\n          input: \"vec2\",\n          labels: [\"↑\", \"↓\"],\n          readonly: true,\n          precision: isAngular ? PRECISION_DEGREES : PRECISION_DISTANCE,\n          value: [upperValue, lowerValue],\n        };\n      }\n      fields.effort = {\n        label: \"Limit effort\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: effort,\n      };\n      fields.velocity = {\n        label: \"Limit velocity\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: velocity,\n      };\n    }\n    if (joint.mimic) {\n      const { joint: mimicJoint, multiplier, offset } = joint.mimic;\n      fields.mimicJoint = {\n        label: \"Mimic joint\",\n        input: \"string\",\n        readonly: true,\n        value: mimicJoint,\n      };\n      fields.mimicMultiplier = {\n        label: \"Mimic multiplier\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: multiplier,\n      };\n      fields.mimicOffset = {\n        label: \"Mimic offset\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: offset,\n      };\n    }\n    if (joint.safetyController) {\n      const { softUpperLimit, softLowerLimit, kPosition, kVelocity } = joint.safetyController;\n      fields.softLimit = {\n        label: \"Soft limit\",\n        input: \"vec2\",\n        labels: [\"↑\", \"↓\"],\n        readonly: true,\n        value: [softUpperLimit, softLowerLimit],\n      };\n      fields.kPosition = {\n        label: \"k_position\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: kPosition,\n      };\n      fields.kVelocity = {\n        label: \"k_velocity\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: kVelocity,\n      };\n    }\n    jointChildren[joint.name] = { label: joint.name, fields, defaultExpansionState: \"collapsed\" };\n  }\n\n  const children: SettingsTreeChildren = {\n    joints: {\n      label: \"Joints\",\n      defaultExpansionState: \"collapsed\",\n      children: jointChildren,\n    },\n  };\n  return children;\n}\n\nfunction eulerDegreesToQuaternion(eulerDegrees: vec3): THREE.Quaternion {\n  tempEuler.set(eulerDegrees[0] * DEG2RAD, eulerDegrees[1] * DEG2RAD, eulerDegrees[2] * DEG2RAD);\n  return tempQuaternion1.setFromEuler(tempEuler);\n}\n\nfunction signedDistanceAlongAxis(position: Readonly<vec3>, axis: Readonly<Vector3>): number {\n  const p = tempVec3a.set(position[0], position[1], position[2]);\n  const targetAxis = tempVec3b.set(axis.x, axis.y, axis.z);\n\n  // Project the position on to axis\n  p.projectOnVector(targetAxis);\n  const distance = p.length();\n\n  // Calculate the sign\n  const dotProduct = p.dot(targetAxis);\n  const sign = dotProduct < 0 ? -1 : 1;\n\n  return sign * distance;\n}\n\n// Find the signed angle of a rotation around a given axis\nfunction signedAngleAroundAxis(rotation: Readonly<Quaternion>, axis: Readonly<Vector3>): number {\n  const rotationAxis = tempVec3a.set(rotation.x, rotation.y, rotation.z);\n  const targetAxis = tempVec3b.set(axis.x, axis.y, axis.z);\n\n  // Project the rotation axis onto the given axis\n  const p = rotationAxis.projectOnVector(targetAxis);\n\n  // Create a twist quaternion from the projected axis and original rotation angle\n  const twist = tempQuaternion2.set(p.x, p.y, p.z, rotation.w);\n  twist.normalize();\n\n  // Calculate the twist angle ([0, PI])\n  const angle = 2 * Math.acos(twist.w);\n\n  // Calculate the sign of the twist angle\n  const dotProduct = tempVec3a.set(twist.x, twist.y, twist.z).dot(targetAxis);\n  const sign = dotProduct < 0 ? -1 : 1;\n\n  return sign * angle;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec, toSec } from \"@foxglove/rostime\";\nimport { NumericType, PointCloud as FoxglovePointCloud } from \"@foxglove/schemas\";\nimport { MessageEvent, SettingsTreeAction } from \"@foxglove/studio\";\nimport {\n  createStixelMaterial,\n  PointCloudRenderable,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/PointClouds\";\nimport type { RosObject } from \"@foxglove/studio-base/players/types\";\nimport { VelodynePacket, VelodyneScan } from \"@foxglove/studio-base/types/Messages\";\nimport {\n  Calibration,\n  Model,\n  PointCloud,\n  PointFieldDataType,\n  RawPacket,\n  Transformer,\n} from \"@foxglove/velodyne-cloud\";\n\nimport {\n  autoSelectColorField,\n  createInstancePickingMaterial,\n  createPickingMaterial,\n  DEFAULT_POINT_SETTINGS,\n  LayerSettingsPointExtension,\n  pointSettingsNode,\n  pointCloudMaterial,\n  POINT_CLOUD_REQUIRED_FIELDS,\n} from \"./pointExtensionUtils\";\nimport { Renderer } from \"../Renderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { VELODYNE_SCAN_DATATYPES } from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\ntype LayerSettingsVelodyneScans = LayerSettingsPointExtension & {\n  stixelsEnabled: boolean;\n};\nconst DEFAULT_SETTINGS = { ...DEFAULT_POINT_SETTINGS, stixelsEnabled: false };\n\nexport function pointFieldDataTypeToNumericType(type: PointFieldDataType): NumericType {\n  switch (type) {\n    case PointFieldDataType.UINT8:\n      return NumericType.UINT8;\n    case PointFieldDataType.INT8:\n      return NumericType.INT8;\n    case PointFieldDataType.UINT16:\n      return NumericType.UINT16;\n    case PointFieldDataType.INT16:\n      return NumericType.INT16;\n    case PointFieldDataType.UINT32:\n      return NumericType.UINT32;\n    case PointFieldDataType.INT32:\n      return NumericType.INT32;\n    case PointFieldDataType.FLOAT32:\n      return NumericType.FLOAT32;\n    case PointFieldDataType.FLOAT64:\n      return NumericType.FLOAT64;\n    default:\n      return NumericType.UNKNOWN;\n  }\n}\n\n// Converts `velodyne_msgs/VelodyneScan` messages into `VelodyneScanDecoded`\n// objects which are an amalgamation of VelodyneScan and PointCloud2 ROS\n// messages plus marker-like SceneBuilder annotations\nclass VelodyneCloudConverter {\n  private _transformers = new Map<Model, Transformer>();\n\n  public decode(scan: VelodyneScan): FoxglovePointCloud | undefined {\n    if (scan.packets.length === 0) {\n      return undefined;\n    }\n\n    const firstPacketData = scan.packets[0] as VelodynePacket;\n    const model = RawPacket.InferModel(firstPacketData.data);\n    if (model == undefined) {\n      return undefined;\n    }\n\n    const stamp = toSec(scan.header.stamp);\n    const maxPoints = RawPacket.MAX_POINTS_PER_PACKET * scan.packets.length;\n    const cloud = new PointCloud({ stamp, maxPoints });\n    const transformer = this.getTransformer(model);\n\n    for (const packet of scan.packets) {\n      transformer.unpack(new RawPacket(packet.data), stamp, toSec(packet.stamp), cloud);\n    }\n\n    cloud.trim();\n\n    if (cloud.width === 0 || cloud.height === 0) {\n      return undefined;\n    }\n\n    return {\n      timestamp: scan.header.stamp,\n      frame_id: scan.header.frame_id,\n      pose: makePose(),\n      point_stride: cloud.point_step,\n      fields: cloud.fields.map((field) => ({\n        name: field.name,\n        offset: field.offset,\n        type: pointFieldDataTypeToNumericType(field.datatype),\n      })),\n      data: cloud.data,\n    };\n  }\n\n  public getTransformer(model: Model): Transformer {\n    let transformer = this._transformers.get(model);\n    if (transformer != undefined) {\n      return transformer;\n    }\n\n    transformer = new Transformer(new Calibration(model));\n    this._transformers.set(model, transformer);\n    return transformer;\n  }\n}\n\nexport class VelodyneScans extends SceneExtension<PointCloudRenderable> {\n  private _pointCloudFieldsByTopic = new Map<string, string[]>();\n  private _velodyneCloudConverter = new VelodyneCloudConverter();\n\n  public constructor(renderer: Renderer) {\n    super(\"foxglove.VelodyneScans\", renderer);\n\n    renderer.addSchemaSubscriptions(VELODYNE_SCAN_DATATYPES, this.handleVelodyneScan);\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, VELODYNE_SCAN_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsVelodyneScans>;\n      const messageFields =\n        this._pointCloudFieldsByTopic.get(topic.name) ?? POINT_CLOUD_REQUIRED_FIELDS;\n      const node: SettingsTreeNodeWithActionHandler = pointSettingsNode(\n        topic,\n        messageFields,\n        config,\n      );\n      node.fields!.stixelsEnabled = {\n        label: \"Stixel view\",\n        input: \"boolean\",\n        value: config.stixelsEnabled ?? DEFAULT_SETTINGS.stixelsEnabled,\n      };\n      node.handler = handler;\n      node.icon = \"Points\";\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevSettings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsVelodyneScans>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...prevSettings };\n      renderable.updatePointCloud(\n        renderable.userData.pointCloud,\n        renderable.userData.originalMessage,\n        settings,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Do not call super.startFrame() since we handle updatePose() manually.\n    // Instead of updating the pose for each Renderable in this.renderables, we\n    // update the pose of each THREE.Points object in the pointsHistory of each\n    // renderable\n\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  private handleVelodyneScan = (messageEvent: MessageEvent<VelodyneScan>): void => {\n    const { topic } = messageEvent;\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const pointCloud = this._velodyneCloudConverter.decode(messageEvent.message);\n    if (!pointCloud) {\n      return;\n    }\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsVelodyneScans>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      if (settings.colorField == undefined) {\n        autoSelectColorField(settings, pointCloud, { supportsPackedRgbModes: false });\n\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      const material = pointCloudMaterial(settings);\n      const pickingMaterial = createPickingMaterial(settings);\n      const instancePickingMaterial = createInstancePickingMaterial(settings);\n      const stixelMaterial = createStixelMaterial(settings);\n\n      const messageTime = toNanoSec(pointCloud.timestamp);\n      renderable = new PointCloudRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId: this.renderer.normalizeFrameId(pointCloud.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        pointCloud,\n        originalMessage: messageEvent.message as RosObject,\n        material,\n        pickingMaterial,\n        instancePickingMaterial,\n        stixelMaterial,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    // Update the mapping of topic to point cloud field names if necessary\n    let fields = this._pointCloudFieldsByTopic.get(messageEvent.topic);\n    if (!fields || fields.length !== pointCloud.fields.length) {\n      fields = pointCloud.fields.map((field) => field.name);\n      this._pointCloudFieldsByTopic.set(messageEvent.topic, fields);\n      this.updateSettingsTree();\n    }\n\n    renderable.updatePointCloud(\n      pointCloud,\n      messageEvent.message as RosObject,\n      renderable.userData.settings,\n      receiveTime,\n    );\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { ColorRGBA, Vector3 } from \"./ros\";\n\nconst INITIAL_CAPACITY = 4;\n\nconst tempMat4 = new THREE.Matrix4();\n\n/**\n * Extends InstancedMesh with a set() method that takes a list of points and\n * colors and dynamically resizes the buffer attributes.\n */\nexport class DynamicInstancedMesh<\n  TGeometry extends THREE.BufferGeometry = THREE.BufferGeometry,\n  TMaterial extends THREE.Material | THREE.Material[] = THREE.Material | THREE.Material[],\n> extends THREE.InstancedMesh<TGeometry, TMaterial> {\n  // Total size of the buffer attributes, which can be larger than .count (instances in use)\n  private _capacity: number;\n\n  public constructor(geometry: TGeometry, material: TMaterial, initialCapacity = INITIAL_CAPACITY) {\n    super(geometry, material, 0);\n\n    this._capacity = initialCapacity;\n    this._resize();\n  }\n\n  public set(\n    points: Vector3[],\n    scale: Vector3,\n    colors: ColorRGBA[],\n    defaultColor: ColorRGBA,\n  ): void {\n    const count = points.length;\n    this._setCount(count);\n\n    const colorArray = this.instanceColor!.array as Uint8ClampedArray;\n    for (let i = 0; i < count; i++) {\n      const point = points[i]!;\n      const color = colors[i] ?? defaultColor;\n\n      tempMat4.makeTranslation(point.x, point.y, point.z);\n      tempMat4.scale(scale as THREE.Vector3);\n      this.setMatrixAt(i, tempMat4);\n\n      colorArray[i * 3 + 0] = (color.r * 255) | 0;\n      colorArray[i * 3 + 1] = (color.g * 255) | 0;\n      colorArray[i * 3 + 2] = (color.b * 255) | 0;\n    }\n    this.instanceMatrix.needsUpdate = true;\n    if (this.instanceColor) {\n      this.instanceColor.needsUpdate = true;\n    }\n  }\n\n  private _setCount(count: number) {\n    while (count >= this._capacity) {\n      this._expand();\n    }\n    this.count = count;\n    this.instanceMatrix.count = count;\n    this.instanceColor!.count = count;\n  }\n\n  private _expand() {\n    this._capacity = this._capacity + Math.trunc(this._capacity / 2) + 16;\n    this._resize();\n  }\n\n  private _resize() {\n    const oldMatrixArray = this.instanceMatrix.array as Float32Array;\n    const oldColorArray = this.instanceColor?.array as Uint8ClampedArray | undefined;\n\n    const newMatrixArray = new Float32Array(this._capacity * 16);\n    const newColorArray = new Uint8ClampedArray(this._capacity * 3);\n\n    if (oldMatrixArray.length > 0) {\n      newMatrixArray.set(oldMatrixArray);\n    }\n    if (oldColorArray && oldColorArray.length > 0) {\n      newColorArray.set(oldColorArray);\n    }\n\n    this.instanceMatrix = new THREE.InstancedBufferAttribute(newMatrixArray, 16);\n    this.instanceColor = new THREE.InstancedBufferAttribute(newColorArray, 3, true);\n\n    this.instanceMatrix.setUsage(THREE.DynamicDrawUsage);\n    this.instanceColor.setUsage(THREE.DynamicDrawUsage);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { createGeometry as createCubeGeometry } from \"./RenderableCube\";\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { markerHasTransparency, makeStandardInstancedMaterial } from \"./materials\";\nimport { DynamicInstancedMesh } from \"../../DynamicInstancedMesh\";\nimport type { Renderer } from \"../../Renderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableCubeList extends RenderableMarker {\n  private mesh: DynamicInstancedMesh<THREE.BoxGeometry, THREE.MeshStandardMaterial>;\n  // outline: THREE.LineSegments | undefined;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Cube instanced mesh\n    const material = makeStandardInstancedMaterial(marker);\n    const geometry = renderer.sharedGeometry.getGeometry(\"RenderableCube\", createCubeGeometry);\n    this.mesh = new DynamicInstancedMesh(geometry, material, marker.points.length);\n    this.mesh.castShadow = true;\n    this.mesh.receiveShadow = true;\n    this.add(this.mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.mesh.material.transparent = transparent;\n      this.mesh.material.depthWrite = !transparent;\n      this.mesh.material.needsUpdate = true;\n    }\n\n    this.mesh.set(marker.points, marker.scale, marker.colors, marker.color);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { markerHasTransparency, makePointsMaterial } from \"./materials\";\nimport { DynamicBufferGeometry } from \"../../DynamicBufferGeometry\";\nimport type { Renderer } from \"../../Renderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderablePoints extends RenderableMarker {\n  private geometry: DynamicBufferGeometry;\n  private points: THREE.Points<DynamicBufferGeometry, THREE.PointsMaterial>;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.geometry = new DynamicBufferGeometry();\n    this.geometry.createAttribute(\"position\", Float32Array, 3);\n    this.geometry.createAttribute(\"color\", Uint8Array, 4, true);\n\n    this.points = new THREE.Points(this.geometry, makePointsMaterial(marker));\n    this.add(this.points);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.points.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.points.material.transparent = transparent;\n      this.points.material.depthWrite = !transparent;\n      this.points.material.needsUpdate = true;\n    }\n\n    this.points.material.size = marker.scale.x;\n\n    const pointsLength = marker.points.length;\n    this.geometry.resize(pointsLength);\n    this._setPositions(marker, pointsLength);\n    this._setColors(marker, pointsLength);\n  }\n\n  private _setPositions(marker: Marker, pointsLength: number): void {\n    const attribute = this.geometry.getAttribute(\"position\") as THREE.BufferAttribute;\n    const positions = attribute.array as Float32Array;\n    for (let i = 0; i < pointsLength; i++) {\n      const point = marker.points[i]!;\n      positions[i * 3 + 0] = point.x;\n      positions[i * 3 + 1] = point.y;\n      positions[i * 3 + 2] = point.z;\n    }\n    attribute.needsUpdate = true;\n  }\n\n  private _setColors(marker: Marker, pointsLength: number): void {\n    // Converts color-per-point to a flattened typed array\n    const attribute = this.geometry.getAttribute(\"color\") as THREE.BufferAttribute;\n    const rgbaData = attribute.array as Uint8Array;\n    this._markerColorsToLinear(marker, pointsLength, (color, i) => {\n      rgbaData[4 * i + 0] = (color[0] * 255) | 0;\n      rgbaData[4 * i + 1] = (color[1] * 255) | 0;\n      rgbaData[4 * i + 2] = (color[2] * 255) | 0;\n      rgbaData[4 * i + 3] = (color[3] * 255) | 0;\n    });\n    attribute.needsUpdate = true;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { createGeometry as createSphereGeometry } from \"./RenderableSphere\";\nimport { markerHasTransparency, makeStandardInstancedMaterial } from \"./materials\";\nimport { DynamicInstancedMesh } from \"../../DynamicInstancedMesh\";\nimport type { Renderer } from \"../../Renderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableSphereList extends RenderableMarker {\n  private mesh: DynamicInstancedMesh<THREE.SphereGeometry, THREE.MeshStandardMaterial>;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Sphere instanced mesh\n    const geometry = renderer.sharedGeometry.getGeometry(\n      `RenderableSphere-${renderer.maxLod}`,\n      () => createSphereGeometry(renderer.maxLod),\n    );\n    const material = makeStandardInstancedMaterial(marker);\n    this.mesh = new DynamicInstancedMesh(geometry, material, marker.points.length);\n    this.mesh.castShadow = true;\n    this.mesh.receiveShadow = true;\n    this.add(this.mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.mesh.material.transparent = transparent;\n      this.mesh.material.depthWrite = !transparent;\n      this.mesh.material.needsUpdate = true;\n    }\n\n    this.mesh.set(marker.points, marker.scale, marker.colors, marker.color);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Label } from \"@foxglove/three-text\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport type { Renderer } from \"../../Renderer\";\nimport { getLuminance, SRGBToLinear } from \"../../color\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableTextViewFacing extends RenderableMarker {\n  private label: Label;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.label = renderer.labelPool.acquire();\n    this.label.setBillboard(true);\n\n    this.add(this.label);\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.renderer.labelPool.release(this.label);\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    this.label.setText(marker.text);\n    this.label.setColor(\n      SRGBToLinear(marker.color.r),\n      SRGBToLinear(marker.color.g),\n      SRGBToLinear(marker.color.b),\n    );\n\n    const foregroundIsDark = getLuminance(marker.color.r, marker.color.g, marker.color.b) < 0.5;\n    if (foregroundIsDark) {\n      this.label.setBackgroundColor(1, 1, 1);\n    } else {\n      this.label.setBackgroundColor(0, 0, 0);\n    }\n    this.label.setOpacity(marker.color.a);\n    this.label.setLineHeight(marker.scale.z);\n    this.label.userData.pose = marker.pose;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { markerHasTransparency, makeStandardVertexColorMaterial } from \"./materials\";\nimport type { Renderer } from \"../../Renderer\";\nimport { rgbaToLinear } from \"../../color\";\nimport { Marker, Vector3 } from \"../../ros\";\n\nconst NOT_DIVISIBLE_ERR = \"NOT_DIVISIBLE\";\nconst EMPTY_ERR = \"EMPTY\";\nconst COLORS_MISMATCH_ERR = \"COLORS_MISMATCH\";\nconst INVALID_POINT_ERR = \"INVALID_POINT\";\nconst EMPTY_FLOAT32 = new Float32Array();\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\n\nexport class RenderableTriangleList extends RenderableMarker {\n  private mesh: THREE.Mesh<THREE.BufferGeometry, THREE.MeshStandardMaterial>;\n  private vertices: Float32Array;\n  private colors: Float32Array;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.vertices = new Float32Array(marker.points.length * 3);\n    this.colors = new Float32Array(marker.colors.length * 4);\n\n    this.mesh = new THREE.Mesh(new THREE.BufferGeometry(), makeStandardVertexColorMaterial(marker));\n    this.mesh.castShadow = true;\n    this.mesh.receiveShadow = true;\n    this.add(this.mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.mesh.material.dispose();\n    this.mesh.geometry.dispose();\n    this.vertices = new Float32Array();\n    this.colors = new Float32Array();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    let vertexCount = marker.points.length;\n    if (vertexCount === 0) {\n      this.renderer.settings.errors.addToTopic(\n        this.userData.topic,\n        EMPTY_ERR,\n        `TRIANGLE_LIST: points is empty`,\n      );\n      this.mesh.geometry.setAttribute(\"position\", new THREE.BufferAttribute(EMPTY_FLOAT32, 3));\n      return;\n    }\n    if (vertexCount % 3 !== 0) {\n      const markerId = `${marker.ns.length > 0 ? marker.ns + \":\" : \"\"}${marker.id}`;\n      this.renderer.settings.errors.addToTopic(\n        this.userData.topic,\n        NOT_DIVISIBLE_ERR,\n        `TRIANGLE_LIST: points.length ${vertexCount} is not divisible by 3 for marker ${markerId}`,\n      );\n      vertexCount = Math.floor(vertexCount / 3) * 3;\n    }\n    if (marker.colors.length !== 0 && marker.colors.length !== vertexCount) {\n      const markerId = `${marker.ns.length > 0 ? marker.ns + \":\" : \"\"}${marker.id}`;\n      this.renderer.settings.errors.addToTopic(\n        this.userData.topic,\n        COLORS_MISMATCH_ERR,\n        `TRIANGLE_LIST: colors.length ${marker.colors.length} != points.length ${vertexCount} for marker ${markerId}`,\n      );\n      // Non-critical, we'll fall back to the default color if needed\n    }\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.mesh.material.transparent = transparent;\n      this.mesh.material.depthWrite = !transparent;\n      this.mesh.material.needsUpdate = true;\n    }\n\n    let dataChanged = false;\n\n    const count = vertexCount * 3;\n    if (count !== this.vertices.length) {\n      this.vertices = new Float32Array(count);\n      dataChanged = true;\n    }\n    if (vertexCount * 4 !== this.colors.length) {\n      this.colors = new Float32Array(vertexCount * 4);\n      dataChanged = true;\n    }\n    const { vertices, colors } = this;\n\n    // Update position/color buffers with the new marker data\n    for (let i = 0; i < vertexCount; i++) {\n      const point = marker.points[i]!;\n      if (!isPointValid(point)) {\n        this.renderer.settings.errors.addToTopic(\n          this.userData.topic,\n          INVALID_POINT_ERR,\n          `TRIANGLE_LIST: point at index ${i} is not finite`,\n        );\n        continue;\n      }\n      dataChanged =\n        dataChanged ||\n        vertices[i * 3] !== point.x ||\n        vertices[i * 3 + 1] !== point.y ||\n        vertices[i * 3 + 2] !== point.z;\n      vertices[i * 3] = point.x;\n      vertices[i * 3 + 1] = point.y;\n      vertices[i * 3 + 2] = point.z;\n\n      rgbaToLinear(tempColor, marker.colors[i] ?? marker.color);\n      dataChanged =\n        dataChanged ||\n        colors[i * 4] !== tempColor.r ||\n        colors[i * 4 + 1] !== tempColor.g ||\n        colors[i * 4 + 2] !== tempColor.b ||\n        colors[i * 4 + 3] !== tempColor.a;\n      colors[i * 4] = tempColor.r;\n      colors[i * 4 + 1] = tempColor.g;\n      colors[i * 4 + 2] = tempColor.b;\n      colors[i * 4 + 3] = tempColor.a;\n    }\n\n    if (dataChanged) {\n      const geometry = this.mesh.geometry;\n      geometry.setAttribute(\"position\", new THREE.BufferAttribute(vertices, 3));\n      geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 4));\n      // Explicitly tell three.js to send position and color buffers to the GPU\n      geometry.attributes.position!.needsUpdate = true;\n      geometry.attributes.color!.needsUpdate = true;\n      // Build the vertex normal attribute from the position buffer (averaging face normals)\n      geometry.computeVertexNormals();\n      geometry.computeBoundingSphere();\n    }\n  }\n}\n\nfunction isPointValid(pt: Vector3): boolean {\n  return Number.isFinite(pt.x) && Number.isFinite(pt.y) && Number.isFinite(pt.z);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { RenderableArrow } from \"./RenderableArrow\";\nimport { RenderableCube } from \"./RenderableCube\";\nimport { RenderableCubeList } from \"./RenderableCubeList\";\nimport { RenderableCylinder } from \"./RenderableCylinder\";\nimport { RenderableLineList } from \"./RenderableLineList\";\nimport { RenderableLineStrip } from \"./RenderableLineStrip\";\nimport { RenderableMarker, getMarkerId } from \"./RenderableMarker\";\nimport { RenderableMeshResource } from \"./RenderableMeshResource\";\nimport { RenderablePoints } from \"./RenderablePoints\";\nimport { RenderableSphere } from \"./RenderableSphere\";\nimport { RenderableSphereList } from \"./RenderableSphereList\";\nimport { RenderableTextViewFacing } from \"./RenderableTextViewFacing\";\nimport { RenderableTriangleList } from \"./RenderableTriangleList\";\nimport type { Renderer } from \"../../Renderer\";\nimport { MarkerType, Marker } from \"../../ros\";\n\nconst CONSTRUCTORS = {\n  [MarkerType.ARROW]: RenderableArrow,\n  [MarkerType.CUBE]: RenderableCube,\n  [MarkerType.SPHERE]: RenderableSphere,\n  [MarkerType.CYLINDER]: RenderableCylinder,\n  [MarkerType.LINE_STRIP]: RenderableLineStrip,\n  [MarkerType.LINE_LIST]: RenderableLineList,\n  [MarkerType.CUBE_LIST]: RenderableCubeList,\n  [MarkerType.SPHERE_LIST]: RenderableSphereList,\n  [MarkerType.POINTS]: RenderablePoints,\n  [MarkerType.TEXT_VIEW_FACING]: RenderableTextViewFacing,\n  [MarkerType.MESH_RESOURCE]: RenderableMeshResource,\n  [MarkerType.TRIANGLE_LIST]: RenderableTriangleList,\n};\n\n/**\n * An object pool for RenderableMarker subclass objects.\n */\nexport class MarkerPool {\n  private renderablesByType = new Map<MarkerType, RenderableMarker[]>();\n\n  public constructor(private renderer: Renderer) {}\n\n  public acquire<T extends MarkerType>(\n    type: T,\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n  ): RenderableMarker {\n    const renderables = this.renderablesByType.get(type);\n    if (renderables) {\n      const renderable = renderables.pop();\n      if (renderable) {\n        renderable.userData.settingsPath = [\"topics\", topic];\n        renderable.userData.settings = { visible: true, frameLocked: marker.frame_locked };\n        renderable.userData.topic = topic;\n        renderable.name = getMarkerId(topic, marker.ns, marker.id);\n        renderable.update(marker, receiveTime);\n        return renderable;\n      }\n    }\n    const renderable = new CONSTRUCTORS[type](topic, marker, receiveTime, this.renderer);\n    return renderable;\n  }\n\n  public release(renderable: RenderableMarker): void {\n    const type = renderable.userData.marker.type as MarkerType;\n    const renderables = this.renderablesByType.get(type);\n    if (!renderables) {\n      this.renderablesByType.set(type, [renderable]);\n    } else {\n      renderables.push(renderable);\n    }\n  }\n\n  public dispose(): void {\n    for (const renderables of this.renderablesByType.values()) {\n      for (const renderable of renderables) {\n        renderable.dispose();\n      }\n    }\n    this.renderablesByType.clear();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport i18next from \"i18next\";\nimport { Immutable, produce } from \"immer\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Logger from \"@foxglove/log\";\nimport { Time, fromNanoSec, isLessThan, toNanoSec } from \"@foxglove/rostime\";\nimport type { FrameTransform, FrameTransforms, SceneUpdate } from \"@foxglove/schemas\";\nimport {\n  MessageEvent,\n  ParameterValue,\n  SettingsIcon,\n  SettingsTreeAction,\n  SettingsTreeNodeActionItem,\n  SettingsTreeNodes,\n  Topic,\n  VariableValue,\n} from \"@foxglove/studio\";\nimport { FoxgloveGrid } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/FoxgloveGrid\";\nimport { light, dark } from \"@foxglove/studio-base/theme/palette\";\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\nimport { LabelMaterial, LabelPool } from \"@foxglove/three-text\";\n\nimport { Input } from \"./Input\";\nimport { LineMaterial } from \"./LineMaterial\";\nimport { ModelCache, MeshUpAxis, DEFAULT_MESH_UP_AXIS } from \"./ModelCache\";\nimport { PickedRenderable, Picker } from \"./Picker\";\nimport type { Renderable } from \"./Renderable\";\nimport { SceneExtension } from \"./SceneExtension\";\nimport { ScreenOverlay } from \"./ScreenOverlay\";\nimport { SettingsManager, SettingsTreeEntry } from \"./SettingsManager\";\nimport { SharedGeometry } from \"./SharedGeometry\";\nimport { CameraState } from \"./camera\";\nimport { DARK_OUTLINE, LIGHT_OUTLINE, stringToRgb } from \"./color\";\nimport { FRAME_TRANSFORMS_DATATYPES, FRAME_TRANSFORM_DATATYPES } from \"./foxglove\";\nimport { DetailLevel, msaaSamples } from \"./lod\";\nimport {\n  normalizeFrameTransform,\n  normalizeFrameTransforms,\n  normalizeTFMessage,\n  normalizeTransformStamped,\n} from \"./normalizeMessages\";\nimport { CameraStateSettings } from \"./renderables/CameraStateSettings\";\nimport { Cameras } from \"./renderables/Cameras\";\nimport { FrameAxes, LayerSettingsTransform } from \"./renderables/FrameAxes\";\nimport { FrameSettings } from \"./renderables/FrameSettings\";\nimport { Grids } from \"./renderables/Grids\";\nimport { ImageMode } from \"./renderables/ImageMode\";\nimport { Images } from \"./renderables/Images\";\nimport { LaserScans } from \"./renderables/LaserScans\";\nimport { Markers } from \"./renderables/Markers\";\nimport { MeasurementTool } from \"./renderables/MeasurementTool\";\nimport { OccupancyGrids } from \"./renderables/OccupancyGrids\";\nimport { PointClouds } from \"./renderables/PointClouds\";\nimport { Polygons } from \"./renderables/Polygons\";\nimport { PoseArrays } from \"./renderables/PoseArrays\";\nimport { Poses } from \"./renderables/Poses\";\nimport { PublishClickTool, PublishClickType } from \"./renderables/PublishClickTool\";\nimport { PublishSettings } from \"./renderables/PublishSettings\";\nimport { FoxgloveSceneEntities } from \"./renderables/SceneEntities\";\nimport { SceneSettings } from \"./renderables/SceneSettings\";\nimport { Urdfs } from \"./renderables/Urdfs\";\nimport { VelodyneScans } from \"./renderables/VelodyneScans\";\nimport { MarkerPool } from \"./renderables/markers/MarkerPool\";\nimport {\n  Header,\n  MarkerArray,\n  Quaternion,\n  TFMessage,\n  TF_DATATYPES,\n  TransformStamped,\n  TRANSFORM_STAMPED_DATATYPES,\n  Vector3,\n} from \"./ros\";\nimport { BaseSettings, CustomLayerSettings, SelectEntry } from \"./settings\";\nimport {\n  AddTransformResult,\n  CoordinateFrame,\n  makePose,\n  Pose,\n  Transform,\n  TransformTree,\n} from \"./transforms\";\nimport { InterfaceMode } from \"./types\";\n\nconst log = Logger.getLogger(__filename);\n\nexport type RendererEvents = {\n  startFrame: (currentTime: bigint, renderer: Renderer) => void;\n  endFrame: (currentTime: bigint, renderer: Renderer) => void;\n  cameraMove: (renderer: Renderer) => void;\n  renderablesClicked: (\n    selections: PickedRenderable[],\n    cursorCoords: { x: number; y: number },\n    renderer: Renderer,\n  ) => void;\n  selectedRenderable: (selection: PickedRenderable | undefined, renderer: Renderer) => void;\n  parametersChange: (\n    parameters: ReadonlyMap<string, ParameterValue> | undefined,\n    renderer: Renderer,\n  ) => void;\n  variablesChange: (\n    variables: ReadonlyMap<string, VariableValue> | undefined,\n    renderer: Renderer,\n  ) => void;\n  transformTreeUpdated: (renderer: Renderer) => void;\n  settingsTreeChange: (renderer: Renderer) => void;\n  configChange: (renderer: Renderer) => void;\n  schemaHandlersChanged: (renderer: Renderer) => void;\n  topicHandlersChanged: (renderer: Renderer) => void;\n};\n\nexport type FollowMode = \"follow-pose\" | \"follow-position\" | \"follow-none\";\n\n/** Legacy Image panel settings that occur at the root level */\nexport type LegacyImageConfig = {\n  cameraTopic: string;\n  enabledMarkerTopics: string[];\n  synchronize: boolean;\n  flipHorizontal: boolean;\n  flipVertical: boolean;\n  maxValue: number;\n  minValue: number;\n  mode: \"fit\" | \"fill\" | \"other\";\n  pan: { x: number; y: number };\n  rotation: number;\n  smooth: boolean;\n  transformMarkers: boolean;\n  zoom: number;\n  zoomPercentage: number;\n};\n\n/** Settings pertaining to Image mode */\nexport type ImageModeConfig = {\n  /** Image topic to display */\n  imageTopic?: string;\n  /** Topic containing CameraCalibration or CameraInfo */\n  calibrationTopic?: string;\n};\n\nexport type RendererConfig = {\n  /** Camera settings for the currently rendering scene */\n  cameraState: CameraState;\n  /** Coordinate frameId of the rendering frame */\n  followTf: string | undefined;\n  /** Camera follow mode */\n  followMode: FollowMode;\n  scene: {\n    /** Show rendering metrics in a DOM overlay */\n    enableStats?: boolean;\n    /** Background color override for the scene, sent to `glClearColor()` */\n    backgroundColor?: string;\n    /* Scale factor to apply to all labels */\n    labelScaleFactor?: number;\n    /** Ignore the <up_axis> tag in COLLADA files (matching rviz behavior) */\n    ignoreColladaUpAxis?: boolean;\n    meshUpAxis?: MeshUpAxis;\n    transforms?: {\n      /** Toggles translation and rotation offset controls for frames */\n      editable?: boolean;\n      /** Toggles visibility of frame axis labels */\n      showLabel?: boolean;\n      /** Size of frame axis labels */\n      labelSize?: number;\n      /** Size of coordinate frame axes */\n      axisScale?: number;\n      /** Width of the connecting line between child and parent frames */\n      lineWidth?: number;\n      /** Color of the connecting line between child and parent frames */\n      lineColor?: string;\n      /** Enable transform preloading */\n      enablePreloading?: boolean;\n    };\n    /** Sync camera with other 3d panels */\n    syncCamera?: boolean;\n    /** Toggles visibility of all topics */\n    topicsVisible?: boolean;\n  };\n  publish: {\n    /** The type of message to publish when clicking in the scene */\n    type: PublishClickType;\n    /** The topic on which to publish poses */\n    poseTopic: string;\n    /** The topic on which to publish points */\n    pointTopic: string;\n    /** The topic on which to publish pose estimates */\n    poseEstimateTopic: string;\n    /** The X standard deviation to publish with poses */\n    poseEstimateXDeviation: number;\n    /** The Y standard deviation to publish with poses */\n    poseEstimateYDeviation: number;\n    /** The theta standard deviation to publish with poses */\n    poseEstimateThetaDeviation: number;\n  };\n  /** frameId -> settings */\n  transforms: Record<string, Partial<LayerSettingsTransform> | undefined>;\n  /** topicName -> settings */\n  topics: Record<string, Partial<BaseSettings> | undefined>;\n  /** instanceId -> settings */\n  layers: Record<string, Partial<CustomLayerSettings> | undefined>;\n\n  /** Settings pertaining to Image mode */\n  imageMode: ImageModeConfig;\n};\n\n/** Callback for handling a message received on a topic */\nexport type MessageHandler<T = unknown> = (messageEvent: MessageEvent<T>) => void;\n\nexport type RendererSubscription<T = unknown> = {\n  /** Preload the full history of topic messages as a best effort */\n  preload?: boolean;\n  /**\n   * By default, topic subscriptions are only created when the topic visibility\n   * has been toggled on by the user in the settings sidebar. Override this\n   * behavior with a custom shouldSubscribe callback. This callback will be\n   * called whenever the list of available topics changes or when any 3D panel\n   * settings are changed.\n   */\n  shouldSubscribe?: (topic: string) => boolean;\n  /** Callback that will be fired for each matching incoming message */\n  handler: MessageHandler<T>;\n};\n\n/** Menu item entry and callback for the \"Custom Layers\" menu */\nexport type CustomLayerAction = {\n  action: SettingsTreeNodeActionItem;\n  handler: (instanceId: string) => void;\n};\n\n// Enable this to render the hitmap to the screen after clicking\nconst DEBUG_PICKING: boolean = false;\n\n// Maximum number of objects to present as selection options in a single click\nconst MAX_SELECTIONS = 10;\n\n// NOTE: These do not use .convertSRGBToLinear() since background color is not\n// affected by gamma correction\nconst LIGHT_BACKDROP = new THREE.Color(light.background?.default);\nconst DARK_BACKDROP = new THREE.Color(dark.background?.default);\n\n// Define rendering layers for multipass rendering used for the selection effect\nconst LAYER_DEFAULT = 0;\nconst LAYER_SELECTED = 1;\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst PI_2 = Math.PI / 2;\n\n// Coordinate frames named in [REP-105](https://www.ros.org/reps/rep-0105.html)\nconst DEFAULT_FRAME_IDS = [\"base_link\", \"odom\", \"map\", \"earth\"];\n\nconst FOLLOW_TF_PATH = [\"general\", \"followTf\"];\nconst NO_FRAME_SELECTED = \"NO_FRAME_SELECTED\";\nconst FRAME_NOT_FOUND = \"FRAME_NOT_FOUND\";\nconst TF_OVERFLOW = \"TF_OVERFLOW\";\nconst CYCLE_DETECTED = \"CYCLE_DETECTED\";\n\n// An extensionId for creating the top-level settings nodes such as \"Topics\" and\n// \"Custom Layers\"\nconst RENDERER_ID = \"foxglove.Renderer\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec2 = new THREE.Vector2();\nconst tempSpherical = new THREE.Spherical();\nconst tempEuler = new THREE.Euler();\n\n// used for holding unfollowPoseSnapshot in render frame every new frame\nconst snapshotInRenderFrame = makePose();\n\n// We use a patched version of THREE.js where the internal WebGLShaderCache class has been\n// modified to allow caching based on `vertexShaderKey` and/or `fragmentShaderKey` instead of\n// using the full shader source as a Map key\nObject.defineProperty(LabelMaterial.prototype, \"vertexShaderKey\", {\n  get() {\n    return \"LabelMaterial-VertexShader\";\n  },\n  enumerable: true,\n  configurable: true,\n});\nObject.defineProperty(LabelMaterial.prototype, \"fragmentShaderKey\", {\n  get() {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    return this.picking ? \"LabelMaterial-FragmentShader-picking\" : \"LabelMaterial-FragmentShader\";\n  },\n  enumerable: true,\n  configurable: true,\n});\n\nclass InstancedLineMaterial extends THREE.LineBasicMaterial {\n  public constructor(...args: ConstructorParameters<typeof THREE.LineBasicMaterial>) {\n    super(...args);\n    this.defines ??= {};\n    this.defines.USE_INSTANCING = true;\n  }\n}\n\n/**\n * An extensible 3D renderer attached to a `HTMLCanvasElement`,\n * `WebGLRenderingContext`, and `SettingsTree`.\n */\nexport class Renderer extends EventEmitter<RendererEvents> {\n  public readonly interfaceMode: InterfaceMode;\n  private canvas: HTMLCanvasElement;\n  public readonly gl: THREE.WebGLRenderer;\n  public maxLod = DetailLevel.High;\n  public config: Immutable<RendererConfig>;\n  public settings: SettingsManager;\n  // [{ name, datatype }]\n  public topics: ReadonlyArray<Topic> | undefined;\n  // topicName -> { name, datatype }\n  public topicsByName: ReadonlyMap<string, Topic> | undefined;\n  // parameterKey -> parameterValue\n  public parameters: ReadonlyMap<string, ParameterValue> | undefined;\n  // variableName -> variableValue\n  public variables: ReadonlyMap<string, VariableValue> = new Map();\n  // extensionId -> SceneExtension\n  public sceneExtensions = new Map<string, SceneExtension>();\n  // datatype -> RendererSubscription[]\n  public schemaHandlers = new Map<string, RendererSubscription[]>();\n  // topicName -> RendererSubscription[]\n  public topicHandlers = new Map<string, RendererSubscription[]>();\n  // layerId -> { action, handler }\n  private customLayerActions = new Map<string, CustomLayerAction>();\n  private scene: THREE.Scene;\n  private dirLight: THREE.DirectionalLight;\n  private hemiLight: THREE.HemisphereLight;\n  public input: Input;\n  public readonly outlineMaterial = new THREE.LineBasicMaterial({ dithering: true });\n  public readonly instancedOutlineMaterial = new InstancedLineMaterial({ dithering: true });\n\n  private cameraStateSettings: CameraStateSettings;\n  public measurementTool: MeasurementTool;\n  public publishClickTool: PublishClickTool;\n\n  private perspectiveCamera: THREE.PerspectiveCamera;\n  private orthographicCamera: THREE.OrthographicCamera;\n  // This group is used to transform the cameras based on the Frame follow mode\n  // quaternion is affected in stationary and position-only follow modes\n  // both position and quaternion of the group are affected in stationary mode\n  private cameraGroup: THREE.Group;\n  private aspect: number;\n  private controls: OrbitControls;\n  public followMode: FollowMode;\n  // The pose of the render frame in the fixed frame when following was disabled\n  public unfollowPoseSnapshot: Pose | undefined;\n\n  // Are we connected to a ROS data source? Normalize coordinate frames if so by\n  // stripping any leading \"/\" prefix. See `normalizeFrameId()` for details.\n  public ros = false;\n\n  private picker: Picker;\n  private selectionBackdrop: ScreenOverlay;\n  private selectedRenderable: PickedRenderable | undefined;\n  public colorScheme: \"dark\" | \"light\" = \"light\";\n  public modelCache: ModelCache;\n  public transformTree = new TransformTree();\n  public coordinateFrameList: SelectEntry[] = [];\n  public currentTime = 0n;\n  public fixedFrameId: string | undefined;\n  public renderFrameId: string | undefined;\n  public followFrameId: string | undefined;\n\n  public labelPool = new LabelPool({ fontFamily: fonts.MONOSPACE });\n  public markerPool = new MarkerPool(this);\n  public sharedGeometry = new SharedGeometry();\n\n  private _prevResolution = new THREE.Vector2();\n  private _pickingEnabled = false;\n  private _isUpdatingCameraState = false;\n  private _animationFrame?: number;\n  private _cameraSyncError: undefined | string;\n  private _devicePixelRatioMediaQuery?: MediaQueryList;\n\n  public constructor(\n    canvas: HTMLCanvasElement,\n    config: Immutable<RendererConfig>,\n    interfaceMode: InterfaceMode,\n  ) {\n    super();\n    // NOTE: Global side effect\n    THREE.Object3D.DEFAULT_UP = new THREE.Vector3(0, 0, 1);\n\n    this.interfaceMode = interfaceMode;\n    this.canvas = canvas;\n    this.config = config;\n\n    this.settings = new SettingsManager(baseSettingsTree(this.interfaceMode));\n    this.settings.on(\"update\", () => this.emit(\"settingsTreeChange\", this));\n    // Add the top-level nodes first so merging happens in the correct order.\n    // Another approach would be to modify SettingsManager to allow merging parent\n    // nodes in after their children\n    this.settings.setNodesForKey(RENDERER_ID, []);\n    this.updateCustomLayersCount();\n\n    this.gl = new THREE.WebGLRenderer({\n      canvas,\n      alpha: true,\n      antialias: true,\n    });\n    if (!this.gl.capabilities.isWebGL2) {\n      throw new Error(\"WebGL2 is not supported\");\n    }\n    this.gl.outputEncoding = THREE.sRGBEncoding;\n    this.gl.toneMapping = THREE.NoToneMapping;\n    this.gl.autoClear = false;\n    this.gl.info.autoReset = false;\n    this.gl.shadowMap.enabled = false;\n    this.gl.shadowMap.type = THREE.VSMShadowMap;\n    this.gl.sortObjects = true;\n    this.gl.setPixelRatio(window.devicePixelRatio);\n\n    let width = canvas.width;\n    let height = canvas.height;\n    if (canvas.parentElement) {\n      width = canvas.parentElement.clientWidth;\n      height = canvas.parentElement.clientHeight;\n      this.gl.setSize(width, height);\n    }\n\n    this.modelCache = new ModelCache({\n      ignoreColladaUpAxis: config.scene.ignoreColladaUpAxis ?? false,\n      meshUpAxis: config.scene.meshUpAxis ?? DEFAULT_MESH_UP_AXIS,\n      edgeMaterial: this.outlineMaterial,\n    });\n\n    this.scene = new THREE.Scene();\n\n    this.dirLight = new THREE.DirectionalLight();\n    this.dirLight.position.set(1, 1, 1);\n    this.dirLight.castShadow = true;\n    this.dirLight.layers.enableAll();\n\n    this.dirLight.shadow.mapSize.width = 2048;\n    this.dirLight.shadow.mapSize.height = 2048;\n    this.dirLight.shadow.camera.near = 0.5;\n    this.dirLight.shadow.camera.far = 500;\n    this.dirLight.shadow.bias = -0.00001;\n\n    this.hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\n    this.hemiLight.layers.enableAll();\n\n    this.scene.add(this.dirLight);\n    this.scene.add(this.hemiLight);\n\n    this.perspectiveCamera = new THREE.PerspectiveCamera();\n    this.orthographicCamera = new THREE.OrthographicCamera();\n    this.cameraGroup = new THREE.Group();\n\n    this.cameraGroup.add(this.perspectiveCamera);\n    this.cameraGroup.add(this.orthographicCamera);\n    this.scene.add(this.cameraGroup);\n\n    this.controls = new OrbitControls(this.perspectiveCamera, this.canvas);\n    this.controls.screenSpacePanning = false; // only allow panning in the XY plane\n    this.controls.mouseButtons.LEFT = THREE.MOUSE.PAN;\n    this.controls.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n    this.controls.touches.ONE = THREE.TOUCH.PAN;\n    this.controls.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n    this.controls.addEventListener(\"change\", () => {\n      if (!this._isUpdatingCameraState) {\n        this.emit(\"cameraMove\", this);\n      }\n    });\n\n    // Make the canvas able to receive keyboard events and setup WASD controls\n    canvas.tabIndex = 1000;\n    this.controls.keys = { LEFT: \"KeyA\", RIGHT: \"KeyD\", UP: \"KeyW\", BOTTOM: \"KeyS\" };\n    this.controls.listenToKeyEvents(canvas);\n\n    this.input = new Input(canvas, () => this.activeCamera());\n    this.input.on(\"resize\", (size) => this.resizeHandler(size));\n    this.input.on(\"click\", (cursorCoords) => this.clickHandler(cursorCoords));\n\n    this.picker = new Picker(this.gl, this.scene, { debug: DEBUG_PICKING });\n\n    this.selectionBackdrop = new ScreenOverlay(this);\n    this.selectionBackdrop.visible = false;\n    this.scene.add(this.selectionBackdrop);\n\n    this.followFrameId = config.followTf;\n    this.followMode = config.followMode;\n\n    const samples = msaaSamples(this.gl.capabilities);\n    const renderSize = this.gl.getDrawingBufferSize(tempVec2);\n    this.aspect = renderSize.width / renderSize.height;\n    log.debug(`Initialized ${renderSize.width}x${renderSize.height} renderer (${samples}x MSAA)`);\n\n    this.measurementTool = new MeasurementTool(this);\n    this.publishClickTool = new PublishClickTool(this);\n    this.cameraStateSettings = new CameraStateSettings(this);\n\n    // Internal handlers for TF messages to update the transform tree\n    this.addSchemaSubscriptions(FRAME_TRANSFORM_DATATYPES, {\n      handler: this.handleFrameTransform,\n      shouldSubscribe: () => true,\n      preload: config.scene.transforms?.enablePreloading ?? true,\n    });\n    this.addSchemaSubscriptions(FRAME_TRANSFORMS_DATATYPES, {\n      handler: this.handleFrameTransforms,\n      shouldSubscribe: () => true,\n      preload: config.scene.transforms?.enablePreloading ?? true,\n    });\n    this.addSchemaSubscriptions(TF_DATATYPES, {\n      handler: this.handleTFMessage,\n      shouldSubscribe: () => true,\n      preload: config.scene.transforms?.enablePreloading ?? true,\n    });\n    this.addSchemaSubscriptions(TRANSFORM_STAMPED_DATATYPES, {\n      handler: this.handleTransformStamped,\n      shouldSubscribe: () => true,\n      preload: config.scene.transforms?.enablePreloading ?? true,\n    });\n\n    switch (interfaceMode) {\n      case \"image\":\n        this.addSceneExtension(new ImageMode(this));\n        break;\n      case \"3d\":\n        this.addSceneExtension(this.cameraStateSettings);\n        this.addSceneExtension(new PublishSettings(this));\n        this.addSceneExtension(new FrameSettings(this));\n        break;\n    }\n\n    this.addSceneExtension(new SceneSettings(this));\n    this.addSceneExtension(new Cameras(this));\n    this.addSceneExtension(new FrameAxes(this));\n    this.addSceneExtension(new Grids(this));\n    this.addSceneExtension(new Images(this));\n    this.addSceneExtension(new Markers(this));\n    this.addSceneExtension(new FoxgloveSceneEntities(this));\n    this.addSceneExtension(new FoxgloveGrid(this));\n    this.addSceneExtension(new LaserScans(this));\n    this.addSceneExtension(new OccupancyGrids(this));\n    this.addSceneExtension(new PointClouds(this));\n    this.addSceneExtension(new Polygons(this));\n    this.addSceneExtension(new Poses(this));\n    this.addSceneExtension(new PoseArrays(this));\n    this.addSceneExtension(new Urdfs(this));\n    this.addSceneExtension(new VelodyneScans(this));\n    this.addSceneExtension(this.measurementTool);\n    this.addSceneExtension(this.publishClickTool);\n\n    this._watchDevicePixelRatio();\n\n    this._updateCameras(config.cameraState);\n    this.animationFrame();\n  }\n\n  private _onDevicePixelRatioChange = () => {\n    log.debug(`devicePixelRatio changed to ${window.devicePixelRatio}`);\n    this.resizeHandler(this.input.canvasSize);\n    this._watchDevicePixelRatio();\n  };\n\n  private _watchDevicePixelRatio() {\n    this._devicePixelRatioMediaQuery = window.matchMedia(\n      `(resolution: ${window.devicePixelRatio}dppx)`,\n    );\n    this._devicePixelRatioMediaQuery.addEventListener(\"change\", this._onDevicePixelRatioChange, {\n      once: true,\n    });\n  }\n\n  public dispose(): void {\n    log.warn(`Disposing renderer`);\n    this._devicePixelRatioMediaQuery?.removeEventListener(\"change\", this._onDevicePixelRatioChange);\n    this.removeAllListeners();\n\n    this.settings.removeAllListeners();\n    this.input.removeAllListeners();\n\n    this.controls.dispose();\n\n    for (const extension of this.sceneExtensions.values()) {\n      extension.dispose();\n    }\n    this.sceneExtensions.clear();\n    this.sharedGeometry.dispose();\n    this.modelCache.dispose();\n\n    this.labelPool.dispose();\n    this.markerPool.dispose();\n    this.picker.dispose();\n    this.input.dispose();\n    this.gl.dispose();\n  }\n\n  public cameraSyncError(): undefined | string {\n    return this._cameraSyncError;\n  }\n\n  public setCameraSyncError(error: undefined | string): void {\n    this._cameraSyncError = error;\n    // Updates the settings tree for camera state settings to account for any changes in the config.\n    this.cameraStateSettings.updateSettingsTree();\n  }\n\n  public getPixelRatio(): number {\n    return this.gl.getPixelRatio();\n  }\n\n  /**\n   *\n   * @param currentTime what renderer.currentTime will be set to\n   */\n  public setCurrentTime(newTimeNs: bigint): void {\n    this.currentTime = newTimeNs;\n  }\n  /**\n   * Updates renderer state according to seek delta. Handles clearing of future state and resetting of allFrames cursor if seeked backwards\n   * Should be called after `setCurrentTime` as been called\n   * @param oldTime used to determine if seeked backwards\n   */\n  public handleSeek(oldTimeNs: bigint): void {\n    const movedBack = this.currentTime < oldTimeNs;\n    // want to clear transforms and reset the cursor if we seek backwards\n    this.clear({ clearTransforms: movedBack, resetAllFramesCursor: movedBack });\n  }\n\n  /**\n   * Clears:\n   *  - Rendered objects (a backfill is performed to ensure that they are regenerated with new messages from current frame)\n   *  - Errors in settings. Messages that caused errors in the past are cleared, but will be re-added if they are still causing errors when read in.\n   *  - [Optional] Transform tree. This should be set to true when a seek to a previous time is performed in order to flush potential future state to the newly set time.\n   *  - [Optional] allFramesCursor. This is the cursor that iterates through allFrames up to currentTime. It should be reset when seeking backwards to avoid keeping future state.\n   * @param {Object} params - modifiers to the clear operation\n   * @param {boolean} params.clearTransforms - whether to clear the transform tree. This should be set to true when a seek to a previous time is performed in order\n   * order to flush potential future state to the newly set time.\n   * @param {boolean} params.resetAllFramesCursor - whether to reset the cursor for the allFrames array.\n   */\n  public clear(\n    {\n      clearTransforms,\n      resetAllFramesCursor,\n    }: { clearTransforms?: boolean; resetAllFramesCursor?: boolean } = {\n      clearTransforms: false,\n      resetAllFramesCursor: false,\n    },\n  ): void {\n    if (clearTransforms === true) {\n      this.transformTree.clear();\n    }\n    if (resetAllFramesCursor === true) {\n      this._resetAllFramesCursor();\n    }\n    this.settings.errors.clear();\n\n    for (const extension of this.sceneExtensions.values()) {\n      extension.removeAllRenderables();\n    }\n  }\n\n  private _allFramesCursor: {\n    // index represents where the last read message is in allFrames\n    index: number;\n    cursorTimeReached?: Time;\n  } = {\n    index: -1,\n    cursorTimeReached: undefined,\n  };\n\n  private _resetAllFramesCursor() {\n    this._allFramesCursor = {\n      index: -1,\n      cursorTimeReached: undefined,\n    };\n  }\n\n  /**\n   * Iterates through allFrames and handles messages with a receiveTime <= currentTime\n   * @param allFrames - array of all preloaded messages\n   * @returns {boolean} - whether the allFramesCursor has been updated and new messages were read in\n   */\n  public handleAllFramesMessages(allFrames?: readonly MessageEvent<unknown>[]): boolean {\n    const currentTime = fromNanoSec(this.currentTime);\n    const allFramesCursor = this._allFramesCursor;\n    // index always indicates last read-in message\n    let cursor = allFramesCursor.index;\n    let cursorTimeReached = allFramesCursor.cursorTimeReached;\n\n    if (!allFrames || allFrames.length === 0) {\n      // when tf preloading is disabled\n      if (cursor > -1) {\n        this._resetAllFramesCursor();\n      }\n      return false;\n    }\n\n    /**\n     * Assumptions about allFrames needed by allFramesCursor:\n     *  - always sorted by receiveTime\n     *  - preloaded topics/schemas are only ever all removed or all added at once, otherwise it is not stable and would need to be reset\n     *  - allFrame chunks are only ever loaded from beginning to end and does not have any eviction\n     */\n\n    // cursor should never be over allFramesLength, if it some how is, it means the cursor was at the end of `allFrames` prior to eviction and eviction shortened allframes\n    // in this case we should set the cursor to the end of allFrames\n    cursor = Math.min(cursor, allFrames.length - 1);\n    let message;\n\n    let hasAddedMessageEvents = false;\n    // load preloaded messages up to current time\n    while (cursor < allFrames.length - 1) {\n      cursor++;\n      message = allFrames[cursor]!;\n      // read messages until we reach the current time\n      if (isLessThan(currentTime, message.receiveTime)) {\n        cursorTimeReached = currentTime;\n        // reset cursor to last read message index\n        cursor--;\n        break;\n      }\n      if (!hasAddedMessageEvents) {\n        hasAddedMessageEvents = true;\n      }\n\n      this.addMessageEvent(message);\n      if (cursor === allFrames.length - 1) {\n        cursorTimeReached = message.receiveTime;\n      }\n    }\n\n    // want to avoid setting anything if nothing has changed\n    if (!hasAddedMessageEvents) {\n      return false;\n    }\n\n    this._allFramesCursor = { index: cursor, cursorTimeReached };\n    return true;\n  }\n\n  private addSceneExtension(extension: SceneExtension): void {\n    if (this.sceneExtensions.has(extension.extensionId)) {\n      throw new Error(`Attempted to add duplicate extensionId \"${extension.extensionId}\"`);\n    }\n    this.sceneExtensions.set(extension.extensionId, extension);\n    this.scene.add(extension);\n  }\n\n  public updateConfig(updateHandler: (draft: RendererConfig) => void): void {\n    this.config = produce(this.config, updateHandler);\n    this.emit(\"configChange\", this);\n  }\n\n  public addSchemaSubscriptions<T>(\n    schemaNames: Iterable<string>,\n    subscription: RendererSubscription<T> | MessageHandler<T>,\n  ): void {\n    const genericSubscription =\n      subscription instanceof Function\n        ? { handler: subscription as MessageHandler<unknown> }\n        : (subscription as RendererSubscription);\n    for (const schemaName of schemaNames) {\n      let handlers = this.schemaHandlers.get(schemaName);\n      if (!handlers) {\n        handlers = [];\n        this.schemaHandlers.set(schemaName, handlers);\n      }\n      if (!handlers.includes(genericSubscription)) {\n        handlers.push(genericSubscription);\n      }\n    }\n    this.emit(\"schemaHandlersChanged\", this);\n  }\n\n  public addTopicSubscription<T>(\n    topic: string,\n    subscription: RendererSubscription<T> | MessageHandler<T>,\n  ): void {\n    const genericSubscription =\n      subscription instanceof Function\n        ? { handler: subscription as MessageHandler<unknown> }\n        : (subscription as RendererSubscription);\n    let handlers = this.topicHandlers.get(topic);\n    if (!handlers) {\n      handlers = [];\n      this.topicHandlers.set(topic, handlers);\n    }\n    if (!handlers.includes(genericSubscription)) {\n      handlers.push(genericSubscription);\n    }\n    this.emit(\"topicHandlersChanged\", this);\n  }\n\n  public addCustomLayerAction(options: {\n    layerId: string;\n    label: string;\n    icon?: SettingsIcon;\n    handler: (instanceId: string) => void;\n  }): void {\n    const handler = options.handler;\n    // A unique id is assigned to each action to deduplicate selection events\n    // The layerId is used to map selection events back to their handlers\n    const instanceId = uuidv4();\n    const action: SettingsTreeNodeActionItem = {\n      type: \"action\",\n      id: `${options.layerId}-${instanceId}`,\n      label: options.label,\n      icon: options.icon,\n    };\n    this.customLayerActions.set(options.layerId, { action, handler });\n\n    // \"Topics\" settings tree node\n    const topics: SettingsTreeEntry = {\n      path: [\"topics\"],\n      node: {\n        enableVisibilityFilter: true,\n        label: i18next.t(\"threeDee:topics\"),\n        defaultExpansionState: \"expanded\",\n        actions: [\n          { id: \"show-all\", type: \"action\", label: i18next.t(\"threeDee:showAll\") },\n          { id: \"hide-all\", type: \"action\", label: i18next.t(\"threeDee:hideAll\") },\n        ],\n        children: this.settings.tree()[\"topics\"]?.children,\n        handler: this.handleTopicsAction,\n      },\n    };\n\n    // \"Custom Layers\" settings tree node\n    const layerCount = Object.keys(this.config.layers).length;\n    const customLayers: SettingsTreeEntry = {\n      path: [\"layers\"],\n      node: {\n        label: `${i18next.t(\"threeDee:customLayers\")}${layerCount > 0 ? ` (${layerCount})` : \"\"}`,\n        children: this.settings.tree()[\"layers\"]?.children,\n        actions: Array.from(this.customLayerActions.values()).map((entry) => entry.action),\n        handler: this.handleCustomLayersAction,\n      },\n    };\n\n    this.settings.setNodesForKey(RENDERER_ID, [topics, customLayers]);\n  }\n\n  private defaultFrameId(): string | undefined {\n    const allFrames = this.transformTree.frames();\n    if (allFrames.size === 0) {\n      return undefined;\n    }\n\n    // Top priority is the followFrameId\n    if (this.followFrameId != undefined) {\n      return this.transformTree.hasFrame(this.followFrameId) ? this.followFrameId : undefined;\n    }\n\n    // Prefer frames from [REP-105](https://www.ros.org/reps/rep-0105.html)\n    for (const frameId of DEFAULT_FRAME_IDS) {\n      const frame = this.transformTree.frame(frameId);\n      if (frame) {\n        return frame.id;\n      }\n    }\n\n    // Choose the root frame with the most children\n    const rootsToCounts = new Map<string, number>();\n    for (const frame of allFrames.values()) {\n      const root = frame.root();\n      const rootId = root.id;\n\n      rootsToCounts.set(rootId, (rootsToCounts.get(rootId) ?? 0) + 1);\n    }\n    const rootsArray = Array.from(rootsToCounts.entries());\n    const rootId = rootsArray.sort((a, b) => b[1] - a[1])[0]?.[0];\n    return rootId;\n  }\n\n  /** Enable or disable object selection mode */\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  public setPickingEnabled(enabled: boolean): void {\n    this._pickingEnabled = enabled;\n    if (!enabled) {\n      this.setSelectedRenderable(undefined);\n    }\n  }\n\n  /** Update the color scheme and background color, rebuilding any materials as necessary */\n  public setColorScheme(colorScheme: \"dark\" | \"light\", backgroundColor: string | undefined): void {\n    this.colorScheme = colorScheme;\n\n    const bgColor = backgroundColor ? stringToRgb(tempColor, backgroundColor) : undefined;\n\n    for (const extension of this.sceneExtensions.values()) {\n      extension.setColorScheme(colorScheme, bgColor);\n    }\n\n    if (colorScheme === \"dark\") {\n      this.gl.setClearColor(bgColor ?? DARK_BACKDROP);\n      this.outlineMaterial.color.set(DARK_OUTLINE);\n      this.outlineMaterial.needsUpdate = true;\n      this.instancedOutlineMaterial.color.set(DARK_OUTLINE);\n      this.instancedOutlineMaterial.needsUpdate = true;\n      this.selectionBackdrop.setColor(DARK_BACKDROP, 0.8);\n    } else {\n      this.gl.setClearColor(bgColor ?? LIGHT_BACKDROP);\n      this.outlineMaterial.color.set(LIGHT_OUTLINE);\n      this.outlineMaterial.needsUpdate = true;\n      this.instancedOutlineMaterial.color.set(LIGHT_OUTLINE);\n      this.instancedOutlineMaterial.needsUpdate = true;\n      this.selectionBackdrop.setColor(LIGHT_BACKDROP, 0.8);\n    }\n  }\n\n  /** Update the list of topics and rebuild all settings nodes when the identity\n   * of the topics list changes */\n  public setTopics(topics: ReadonlyArray<Topic> | undefined): void {\n    const changed = this.topics !== topics;\n    this.topics = topics;\n    if (changed) {\n      // Rebuild topicsByName\n      this.topicsByName = topics ? new Map(topics.map((topic) => [topic.name, topic])) : undefined;\n\n      // Rebuild the settings nodes for all scene extensions\n      for (const extension of this.sceneExtensions.values()) {\n        this.settings.setNodesForKey(extension.extensionId, extension.settingsNodes());\n      }\n    }\n  }\n\n  public setParameters(parameters: ReadonlyMap<string, ParameterValue> | undefined): void {\n    const changed = this.parameters !== parameters;\n    this.parameters = parameters;\n    if (changed) {\n      this.emit(\"parametersChange\", parameters, this);\n    }\n  }\n\n  public setVariables(variables: ReadonlyMap<string, VariableValue>): void {\n    const changed = this.variables !== variables;\n    this.variables = variables;\n    if (changed) {\n      this.emit(\"variablesChange\", variables, this);\n    }\n  }\n\n  public updateCustomLayersCount(): void {\n    const layerCount = Object.keys(this.config.layers).length;\n    const label = `Custom Layers${layerCount > 0 ? ` (${layerCount})` : \"\"}`;\n    this.settings.setLabel([\"layers\"], label);\n  }\n\n  /** Translate a CameraState to the three.js coordinate system */\n  private _updateCameras(cameraState: CameraState): void {\n    const targetOffset = tempVec3;\n    targetOffset.fromArray(cameraState.targetOffset);\n\n    const phi = THREE.MathUtils.degToRad(cameraState.phi);\n    const theta = -THREE.MathUtils.degToRad(cameraState.thetaOffset);\n\n    // Always update the perspective camera even if the current mode is orthographic. This is needed\n    // to make the OrbitControls work properly since they track the perspective camera.\n    // https://github.com/foxglove/studio/issues/4138\n\n    // Convert the camera spherical coordinates (radius, phi, theta) to Cartesian (X, Y, Z)\n    tempSpherical.set(cameraState.distance, phi, theta);\n    this.perspectiveCamera.position.setFromSpherical(tempSpherical).applyAxisAngle(UNIT_X, PI_2);\n    this.perspectiveCamera.position.add(targetOffset);\n\n    // Convert the camera spherical coordinates (phi, theta) to a quaternion rotation\n    this.perspectiveCamera.quaternion.setFromEuler(tempEuler.set(phi, 0, theta, \"ZYX\"));\n    this.perspectiveCamera.fov = cameraState.fovy;\n    this.perspectiveCamera.near = cameraState.near;\n    this.perspectiveCamera.far = cameraState.far;\n    this.perspectiveCamera.aspect = this.aspect;\n    this.perspectiveCamera.updateProjectionMatrix();\n\n    this.controls.target.copy(targetOffset);\n\n    if (cameraState.perspective) {\n      // Unlock the polar angle (pitch axis)\n      this.controls.minPolarAngle = 0;\n      this.controls.maxPolarAngle = Math.PI;\n    } else {\n      // Lock the polar angle during 2D mode\n      const curPolarAngle = THREE.MathUtils.degToRad(this.config.cameraState.phi);\n      this.controls.minPolarAngle = this.controls.maxPolarAngle = curPolarAngle;\n\n      this.orthographicCamera.position.set(targetOffset.x, targetOffset.y, cameraState.far / 2);\n      this.orthographicCamera.quaternion.setFromAxisAngle(UNIT_Z, theta);\n      this.orthographicCamera.left = (-cameraState.distance / 2) * this.aspect;\n      this.orthographicCamera.right = (cameraState.distance / 2) * this.aspect;\n      this.orthographicCamera.top = cameraState.distance / 2;\n      this.orthographicCamera.bottom = -cameraState.distance / 2;\n      this.orthographicCamera.near = cameraState.near;\n      this.orthographicCamera.far = cameraState.far;\n      this.orthographicCamera.updateProjectionMatrix();\n    }\n  }\n\n  public setCameraState(cameraState: CameraState): void {\n    this._isUpdatingCameraState = true;\n    this._updateCameras(cameraState);\n    // only active for follow pose mode because it introduces strange behavior into the other modes\n    // due to the fact that they are manipulating the camera after update with the `cameraGroup`\n    if (this.followMode === \"follow-pose\") {\n      this.controls.update();\n    }\n    this._isUpdatingCameraState = false;\n  }\n\n  public getCameraState(): CameraState {\n    return {\n      perspective: this.config.cameraState.perspective,\n      distance: this.controls.getDistance(),\n      phi: THREE.MathUtils.radToDeg(this.controls.getPolarAngle()),\n      thetaOffset: THREE.MathUtils.radToDeg(-this.controls.getAzimuthalAngle()),\n      targetOffset: [this.controls.target.x, this.controls.target.y, this.controls.target.z],\n      target: this.config.cameraState.target,\n      targetOrientation: this.config.cameraState.targetOrientation,\n      fovy: this.config.cameraState.fovy,\n      near: this.config.cameraState.near,\n      far: this.config.cameraState.far,\n    };\n  }\n\n  public setSelectedRenderable(selection: PickedRenderable | undefined): void {\n    if (this.selectedRenderable === selection) {\n      return;\n    }\n\n    const prevSelected = this.selectedRenderable;\n    if (prevSelected) {\n      // Deselect the previously selected renderable\n      deselectObject(prevSelected.renderable);\n      log.debug(`Deselected ${prevSelected.renderable.id} (${prevSelected.renderable.name})`);\n    }\n\n    this.selectedRenderable = selection;\n\n    if (selection) {\n      // Select the newly selected renderable\n      selectObject(selection.renderable);\n      log.debug(\n        `Selected ${selection.renderable.id} (${selection.renderable.name}) (instance=${selection.instanceIndex})`,\n      );\n    }\n\n    this.emit(\"selectedRenderable\", selection, this);\n\n    if (!DEBUG_PICKING) {\n      this.animationFrame();\n    }\n  }\n\n  private activeCamera(): THREE.PerspectiveCamera | THREE.OrthographicCamera {\n    return this.config.cameraState.perspective ? this.perspectiveCamera : this.orthographicCamera;\n  }\n\n  public addMessageEvent(messageEvent: Readonly<MessageEvent<unknown>>): void {\n    const { message } = messageEvent;\n\n    const maybeHasHeader = message as DeepPartial<{ header: Header }>;\n    const maybeHasMarkers = message as DeepPartial<MarkerArray>;\n    const maybeHasEntities = message as DeepPartial<SceneUpdate>;\n    const maybeHasFrameId = message as DeepPartial<Header>;\n\n    // Extract coordinate frame IDs from all incoming messages\n    if (maybeHasHeader.header) {\n      // If this message has a Header, scrape the frame_id from it\n      const frameId = maybeHasHeader.header.frame_id ?? \"\";\n      this.addCoordinateFrame(frameId);\n    } else if (Array.isArray(maybeHasMarkers.markers)) {\n      // If this message has an array called markers, scrape frame_id from all markers\n      for (const marker of maybeHasMarkers.markers) {\n        if (marker) {\n          const frameId = marker.header?.frame_id ?? \"\";\n          this.addCoordinateFrame(frameId);\n        }\n      }\n    } else if (Array.isArray(maybeHasEntities.entities)) {\n      // If this message has an array called entities, scrape frame_id from all entities\n      for (const entity of maybeHasEntities.entities) {\n        if (entity) {\n          const frameId = entity.frame_id ?? \"\";\n          this.addCoordinateFrame(frameId);\n        }\n      }\n    } else if (typeof maybeHasFrameId.frame_id === \"string\") {\n      // If this message has a top-level frame_id, scrape it\n      this.addCoordinateFrame(maybeHasFrameId.frame_id);\n    }\n\n    handleMessage(messageEvent, this.topicHandlers.get(messageEvent.topic));\n    handleMessage(messageEvent, this.schemaHandlers.get(messageEvent.schemaName));\n  }\n\n  /** Match the behavior of `tf::Transformer` by stripping leading slashes from\n   * frame_ids. This preserves compatibility with earlier versions of ROS while\n   * not breaking any current versions where:\n   * > tf2 does not accept frame_ids starting with \"/\"\n   * Source: <http://wiki.ros.org/tf2/Migration#tf_prefix_backwards_compatibility>\n   */\n  public normalizeFrameId(frameId: string): string {\n    if (!this.ros || !frameId.startsWith(\"/\")) {\n      return frameId;\n    }\n    return frameId.slice(1);\n  }\n\n  public addCoordinateFrame(frameId: string): void {\n    const normalizedFrameId = this.normalizeFrameId(frameId);\n    if (!this.transformTree.hasFrame(normalizedFrameId)) {\n      this.transformTree.getOrCreateFrame(normalizedFrameId);\n      this.coordinateFrameList = this.transformTree.frameList();\n      // log.debug(`Added coordinate frame \"${normalizedFrameId}\"`);\n      this.emit(\"transformTreeUpdated\", this);\n    }\n  }\n\n  private addFrameTransform(transform: FrameTransform): void {\n    const parentId = transform.parent_frame_id;\n    const childId = transform.child_frame_id;\n    const stamp = toNanoSec(transform.timestamp);\n    const t = transform.translation;\n    const q = transform.rotation;\n\n    this.addTransform(parentId, childId, stamp, t, q);\n  }\n\n  private addTransformMessage(tf: TransformStamped): void {\n    const normalizedParentId = this.normalizeFrameId(tf.header.frame_id);\n    const normalizedChildId = this.normalizeFrameId(tf.child_frame_id);\n    const stamp = toNanoSec(tf.header.stamp);\n    const t = tf.transform.translation;\n    const q = tf.transform.rotation;\n\n    this.addTransform(normalizedParentId, normalizedChildId, stamp, t, q);\n  }\n\n  // Create a new transform and add it to the renderer's TransformTree\n  public addTransform(\n    parentFrameId: string,\n    childFrameId: string,\n    stamp: bigint,\n    translation: Vector3,\n    rotation: Quaternion,\n    errorSettingsPath?: string[],\n  ): void {\n    const t = translation;\n    const q = rotation;\n\n    const transform = new Transform([t.x, t.y, t.z], [q.x, q.y, q.z, q.w]);\n    const status = this.transformTree.addTransform(childFrameId, parentFrameId, stamp, transform);\n\n    if (status === AddTransformResult.UPDATED) {\n      this.coordinateFrameList = this.transformTree.frameList();\n      this.emit(\"transformTreeUpdated\", this);\n    }\n\n    if (status === AddTransformResult.CYCLE_DETECTED) {\n      this.settings.errors.add(\n        [\"transforms\", `frame:${childFrameId}`],\n        CYCLE_DETECTED,\n        `Transform tree cycle detected: Received transform with parent \"${parentFrameId}\" and child \"${childFrameId}\", but \"${childFrameId}\" is already an ancestor of \"${parentFrameId}\". Transform message dropped.`,\n      );\n      if (errorSettingsPath) {\n        this.settings.errors.add(\n          errorSettingsPath,\n          CYCLE_DETECTED,\n          `Attempted to add cyclical transform: Frame \"${parentFrameId}\" cannot be the parent of frame \"${childFrameId}\". Transform message dropped.`,\n        );\n      }\n    }\n\n    // Check if the transform history for this frame is at capacity and show an error if so. This\n    // error can't be cleared until the scene is reloaded\n    const frame = this.transformTree.getOrCreateFrame(childFrameId);\n    if (frame.transformsSize() === frame.maxCapacity) {\n      this.settings.errors.add(\n        [\"transforms\", `frame:${childFrameId}`],\n        TF_OVERFLOW,\n        `[Warning] Transform history is at capacity (${frame.maxCapacity}), old TFs will be dropped`,\n      );\n    }\n  }\n\n  public removeTransform(childFrameId: string, parentFrameId: string, stamp: bigint): void {\n    this.transformTree.removeTransform(childFrameId, parentFrameId, stamp);\n    this.coordinateFrameList = this.transformTree.frameList();\n    this.emit(\"transformTreeUpdated\", this);\n  }\n\n  // Callback handlers\n\n  public animationFrame = (): void => {\n    this._animationFrame = undefined;\n    this.frameHandler(this.currentTime);\n  };\n\n  public queueAnimationFrame(): void {\n    if (this._animationFrame == undefined) {\n      this._animationFrame = requestAnimationFrame(this.animationFrame);\n    }\n  }\n\n  private frameHandler = (currentTime: bigint): void => {\n    this.currentTime = currentTime;\n    this._updateFrames(currentTime);\n    this._updateResolution();\n\n    this.gl.clear();\n    this.emit(\"startFrame\", currentTime, this);\n\n    const camera = this.activeCamera();\n    camera.layers.set(LAYER_DEFAULT);\n    this.selectionBackdrop.visible = this.selectedRenderable != undefined;\n\n    // use the FALLBACK_FRAME_ID if renderFrame is undefined and there are no options for transforms\n    const renderFrameId = this.renderFrameId ?? CoordinateFrame.FALLBACK_FRAME_ID;\n    const fixedFrameId = this.fixedFrameId ?? CoordinateFrame.FALLBACK_FRAME_ID;\n\n    const renderFrame = this.transformTree.frame(renderFrameId);\n    const fixedFrame = this.transformTree.frame(fixedFrameId);\n\n    // If in stationary or follow-position modes\n    if (\n      this.followMode !== \"follow-pose\" &&\n      this.unfollowPoseSnapshot &&\n      renderFrame &&\n      fixedFrame\n    ) {\n      renderFrame.applyLocal(\n        snapshotInRenderFrame,\n        this.unfollowPoseSnapshot,\n        fixedFrame,\n        currentTime,\n      );\n      /**\n       * the application of the unfollowPoseSnapshot position and orientation\n       * components makes the camera position and rotation static relative to the fixed frame.\n       * So when the display frame changes the angle of the camera relative\n       * to the scene will not change because only the snapshotPose orientation is applied\n       */\n      if (this.followMode === \"follow-position\") {\n        // only make orientation static/stationary in this mode\n        // the position still follows the frame\n        this.cameraGroup.position.set(0, 0, 0);\n      } else {\n        this.cameraGroup.position.set(\n          snapshotInRenderFrame.position.x,\n          snapshotInRenderFrame.position.y,\n          snapshotInRenderFrame.position.z,\n        );\n      }\n      // this negates the rotation of the changes in renderFrame\n      this.cameraGroup.quaternion.set(\n        snapshotInRenderFrame.orientation.x,\n        snapshotInRenderFrame.orientation.y,\n        snapshotInRenderFrame.orientation.z,\n        snapshotInRenderFrame.orientation.w,\n      );\n    }\n\n    for (const sceneExtension of this.sceneExtensions.values()) {\n      sceneExtension.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n\n    this.gl.render(this.scene, camera);\n\n    if (this.selectedRenderable) {\n      this.gl.clearDepth();\n      camera.layers.set(LAYER_SELECTED);\n      this.selectionBackdrop.visible = false;\n      this.gl.render(this.scene, camera);\n    }\n\n    this.emit(\"endFrame\", currentTime, this);\n\n    this.gl.info.reset();\n  };\n\n  private resizeHandler = (size: THREE.Vector2): void => {\n    this.gl.setPixelRatio(window.devicePixelRatio);\n    this.gl.setSize(size.width, size.height);\n\n    const renderSize = this.gl.getDrawingBufferSize(tempVec2);\n    this.aspect = renderSize.width / renderSize.height;\n    this._updateCameras(this.config.cameraState);\n\n    log.debug(`Resized renderer to ${renderSize.width}x${renderSize.height}`);\n    this.animationFrame();\n  };\n\n  private clickHandler = (cursorCoords: THREE.Vector2): void => {\n    if (!this._pickingEnabled) {\n      this.setSelectedRenderable(undefined);\n      return;\n    }\n\n    // Disable picking while a tool is active\n    if (this.measurementTool.state !== \"idle\" || this.publishClickTool.state !== \"idle\") {\n      return;\n    }\n\n    // Deselect the currently selected object, if one is selected and re-render\n    // the scene to update the render lists\n    this.setSelectedRenderable(undefined);\n\n    // Pick a single renderable, hide it, re-render, and run picking again until\n    // the backdrop is hit or we exceed MAX_SELECTIONS\n    const camera = this.activeCamera();\n    const selections: PickedRenderable[] = [];\n    let curSelection: PickedRenderable | undefined;\n    while (\n      (curSelection = this._pickSingleObject(cursorCoords)) &&\n      selections.length < MAX_SELECTIONS\n    ) {\n      selections.push(curSelection);\n      curSelection.renderable.visible = false;\n      this.gl.render(this.scene, camera);\n    }\n\n    // Put everything back to normal and render one last frame\n    for (const selection of selections) {\n      selection.renderable.visible = true;\n    }\n    if (!DEBUG_PICKING) {\n      this.animationFrame();\n    }\n\n    log.debug(`Clicked ${selections.length} renderable(s)`);\n    this.emit(\"renderablesClicked\", selections, cursorCoords, this);\n  };\n\n  private handleFrameTransform = ({ message }: MessageEvent<DeepPartial<FrameTransform>>): void => {\n    // foxglove.FrameTransform - Ingest this single transform into our TF tree\n    const transform = normalizeFrameTransform(message);\n    this.addFrameTransform(transform);\n  };\n\n  private handleFrameTransforms = ({\n    message,\n  }: MessageEvent<DeepPartial<FrameTransforms>>): void => {\n    // foxglove.FrameTransforms - Ingest the list of transforms into our TF tree\n    const frameTransforms = normalizeFrameTransforms(message);\n    for (const transform of frameTransforms.transforms) {\n      this.addFrameTransform(transform);\n    }\n  };\n\n  private handleTFMessage = ({ message }: MessageEvent<DeepPartial<TFMessage>>): void => {\n    // tf2_msgs/TFMessage - Ingest the list of transforms into our TF tree\n    const tfMessage = normalizeTFMessage(message);\n    for (const tf of tfMessage.transforms) {\n      this.addTransformMessage(tf);\n    }\n  };\n\n  private handleTransformStamped = ({\n    message,\n  }: MessageEvent<DeepPartial<TransformStamped>>): void => {\n    // geometry_msgs/TransformStamped - Ingest this single transform into our TF tree\n    const tf = normalizeTransformStamped(message);\n    this.addTransformMessage(tf);\n  };\n\n  private handleTopicsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"perform-node-action\" || path.length !== 1 || path[0] !== \"topics\") {\n      return;\n    }\n    log.debug(`handleTopicsAction(${action.payload.id})`);\n\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    const toggleTopicVisibility = (value: boolean) => {\n      for (const extension of this.sceneExtensions.values()) {\n        for (const node of extension.settingsNodes()) {\n          if (node.path[0] === \"topics\") {\n            extension.handleSettingsAction({\n              action: \"update\",\n              payload: { path: [...node.path, \"visible\"], input: \"boolean\", value },\n            });\n          }\n        }\n      }\n    };\n\n    if (action.payload.id === \"show-all\") {\n      // Show all topics\n      toggleTopicVisibility(true);\n    } else if (action.payload.id === \"hide-all\") {\n      // Hide all topics\n      toggleTopicVisibility(false);\n    }\n  };\n\n  private handleCustomLayersAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"perform-node-action\" || path.length !== 1 || path[0] !== \"layers\") {\n      return;\n    }\n    log.debug(`handleCustomLayersAction(${action.payload.id})`);\n\n    // Remove `-{uuid}` from the actionId to get the layerId\n    const actionId = action.payload.id;\n    const layerId = actionId.slice(0, -37);\n    const instanceId = actionId.slice(-36);\n\n    const entry = this.customLayerActions.get(layerId);\n    if (!entry) {\n      throw new Error(`No custom layer action found for \"${layerId}\"`);\n    }\n\n    // Regenerate the action menu entry with a new instanceId. The unique instanceId is generated\n    // here so we can deduplicate multiple callbacks for the same menu click event\n    const { label, icon } = entry.action;\n    this.addCustomLayerAction({ layerId, label, icon, handler: entry.handler });\n\n    // Trigger the add custom layer action handler\n    entry.handler(instanceId);\n\n    // Update the Custom Layers node label with the number of custom layers\n    this.updateCustomLayersCount();\n  };\n\n  private _pickSingleObject(cursorCoords: THREE.Vector2): PickedRenderable | undefined {\n    // Render a single pixel using a fragment shader that writes object IDs as\n    // colors, then read the value of that single pixel back\n    const objectId = this.picker.pick(cursorCoords.x, cursorCoords.y, this.activeCamera());\n    if (objectId === -1) {\n      return undefined;\n    }\n\n    // Traverse the scene looking for this objectId\n    const pickedObject = this.scene.getObjectById(objectId);\n\n    // Find the highest ancestor of the picked object that is a Renderable\n    let renderable: Renderable | undefined;\n    let maybeRenderable = pickedObject as Partial<Renderable> | undefined;\n    while (maybeRenderable) {\n      if (maybeRenderable.pickable === true) {\n        renderable = maybeRenderable as Renderable;\n      }\n      maybeRenderable = (maybeRenderable.parent ?? undefined) as Partial<Renderable> | undefined;\n    }\n\n    if (!renderable) {\n      log.warn(\n        `No Renderable found for objectId ${objectId} (name=\"${pickedObject?.name}\" uuid=${pickedObject?.uuid})`,\n      );\n      return undefined;\n    }\n\n    let instanceIndex: number | undefined;\n    if (renderable.pickableInstances) {\n      instanceIndex = this.picker.pickInstance(\n        cursorCoords.x,\n        cursorCoords.y,\n        this.activeCamera(),\n        renderable,\n      );\n      instanceIndex = instanceIndex === -1 ? undefined : instanceIndex;\n    }\n\n    return { renderable, instanceIndex };\n  }\n\n  /** Tracks the number of frames so we can recompute the defaultFrameId when frames are added. */\n  private _lastTransformFrameCount = 0;\n\n  private _updateFrames(currentTime: bigint): void {\n    if (\n      this.followFrameId != undefined &&\n      this.renderFrameId !== this.followFrameId &&\n      this.transformTree.hasFrame(this.followFrameId)\n    ) {\n      // followFrameId is set and is a valid frame, use it\n      this.renderFrameId = this.followFrameId;\n    } else if (\n      this.renderFrameId == undefined ||\n      this.transformTree.frames().size !== this._lastTransformFrameCount ||\n      !this.transformTree.hasFrame(this.renderFrameId)\n    ) {\n      // No valid renderFrameId set, or new frames have been added, fall back to selecting the\n      // heuristically most valid frame (if any frames are present)\n      this.renderFrameId = this.defaultFrameId();\n      this._lastTransformFrameCount = this.transformTree.frames().size;\n\n      if (this.renderFrameId == undefined) {\n        if (this.followFrameId != undefined) {\n          this.settings.errors.add(\n            FOLLOW_TF_PATH,\n            FRAME_NOT_FOUND,\n            i18next.t(\"threeDee:frameNotFound\", {\n              followFrameId: this.followFrameId,\n            }),\n          );\n        } else {\n          this.settings.errors.add(\n            FOLLOW_TF_PATH,\n            NO_FRAME_SELECTED,\n            i18next.t(\"threeDee:noCoordinateFramesFound\"),\n          );\n        }\n        this.fixedFrameId = undefined;\n        return;\n      } else {\n        log.debug(`Setting render frame to ${this.renderFrameId}`);\n        this.settings.errors.remove(FOLLOW_TF_PATH, NO_FRAME_SELECTED);\n      }\n    }\n\n    const frame = this.transformTree.frame(this.renderFrameId);\n    if (!frame) {\n      this.renderFrameId = undefined;\n      this.fixedFrameId = undefined;\n      this.settings.errors.add(\n        FOLLOW_TF_PATH,\n        FRAME_NOT_FOUND,\n        i18next.t(\"threeDee:frameNotFound\", {\n          followFrameId: this.renderFrameId,\n        }),\n      );\n      return;\n    } else {\n      this.settings.errors.remove(FOLLOW_TF_PATH, FRAME_NOT_FOUND);\n    }\n\n    const fixedFrame = frame.root();\n    const fixedFrameId = fixedFrame.id;\n    if (this.fixedFrameId !== fixedFrameId) {\n      if (this.fixedFrameId == undefined) {\n        log.debug(`Setting fixed frame to ${fixedFrameId}`);\n      } else {\n        log.debug(`Changing fixed frame from \"${this.fixedFrameId}\" to \"${fixedFrameId}\"`);\n      }\n      // Set the unfollowPoseSnapshot to undefined because there is a new fixed frame for the snapshot\n      // This keeps the camera settings offsets based off of the display frame rather than old fixed frame.\n      this.unfollowPoseSnapshot = undefined;\n      this.fixedFrameId = fixedFrameId;\n    }\n\n    // Should only occur on reload when the saved followMode is not follow\n    if (this.followMode !== \"follow-pose\" && !this.unfollowPoseSnapshot) {\n      // Snapshot the current pose of the render frame in the fixed frame\n      this.unfollowPoseSnapshot = makePose();\n      fixedFrame.applyLocal(\n        this.unfollowPoseSnapshot,\n        this.unfollowPoseSnapshot,\n        frame,\n        currentTime,\n      );\n    }\n    this.settings.errors.clearPath(FOLLOW_TF_PATH);\n  }\n\n  // This should not be called on initialization only on settings changes\n  public updateFollowMode(newFollowMode: FollowMode): void {\n    if (this.followMode === newFollowMode) {\n      return;\n    }\n\n    if (!this.renderFrameId || !this.fixedFrameId) {\n      this.followMode = newFollowMode;\n      return;\n    }\n\n    const renderFrame = this.transformTree.frame(this.renderFrameId);\n    const fixedFrame = this.transformTree.frame(this.fixedFrameId);\n\n    if (!renderFrame || !fixedFrame) {\n      // if this happens it will be set on initialization in _updateFrames\n      this.followMode = newFollowMode;\n      return;\n    }\n\n    // always create a new snapshot when changing frames to minimize old snapshots causing camera jumps\n    this.unfollowPoseSnapshot = makePose();\n    fixedFrame.applyLocal(\n      this.unfollowPoseSnapshot,\n      this.unfollowPoseSnapshot,\n      renderFrame,\n      this.currentTime,\n    );\n\n    // reset any applied cameraGroup settings so that they aren't applied in follow mode\n    this.cameraGroup.position.set(0, 0, 0);\n    this.cameraGroup.quaternion.set(0, 0, 0, 1);\n    this.followMode = newFollowMode;\n  }\n\n  private _updateResolution(): void {\n    const resolution = this.input.canvasSize;\n    if (this._prevResolution.equals(resolution)) {\n      return;\n    }\n    this._prevResolution.copy(resolution);\n\n    this.scene.traverse((object) => {\n      if ((object as Partial<THREE.Mesh>).material) {\n        const mesh = object as THREE.Mesh;\n        const material = mesh.material as Partial<LineMaterial>;\n\n        // Update render resolution uniforms\n        if (material.resolution) {\n          material.resolution.copy(resolution);\n        }\n        if (material.uniforms?.resolution) {\n          material.uniforms.resolution.value = resolution;\n        }\n      }\n    });\n  }\n}\n\nfunction handleMessage(\n  messageEvent: Readonly<MessageEvent<unknown>>,\n  subscriptions: RendererSubscription[] | undefined,\n): void {\n  if (subscriptions) {\n    for (const subscription of subscriptions) {\n      subscription.handler(messageEvent);\n    }\n  }\n}\n\nfunction selectObject(object: THREE.Object3D) {\n  object.layers.set(LAYER_SELECTED);\n  object.traverse((child) => {\n    child.layers.set(LAYER_SELECTED);\n  });\n}\n\nfunction deselectObject(object: THREE.Object3D) {\n  object.layers.set(LAYER_DEFAULT);\n  object.traverse((child) => {\n    child.layers.set(LAYER_DEFAULT);\n  });\n}\n\n/**\n * Creates a skeleton settings tree. The tree contents are filled in by scene extensions.\n * This dictates the order in which groups appear in the settings editor.\n */\nfunction baseSettingsTree(interfaceMode: InterfaceMode): SettingsTreeNodes {\n  const keys: string[] = [];\n  keys.push(interfaceMode === \"image\" ? \"imageMode\" : \"general\", \"scene\");\n  if (interfaceMode === \"3d\") {\n    keys.push(\"cameraState\");\n  }\n  keys.push(\"transforms\", \"topics\", \"layers\");\n  if (interfaceMode === \"3d\") {\n    keys.push(\"publish\");\n  }\n  return Object.fromEntries(keys.map((key) => [key, {}]));\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { useEffect, useState } from \"react\";\n\nimport { Renderer } from \"./Renderer\";\nimport { useRendererEvent } from \"./RendererContext\";\n\nlet stats: THREEStats | undefined;\nlet drawCallsPanel: Panel | undefined;\nlet trianglesPanel: Panel | undefined;\nlet texturesPanel: Panel | undefined;\nlet geometriesPanel: Panel | undefined;\nlet maxDrawCalls = 0;\nlet maxTriangles = 0;\nlet maxTextures = 0;\nlet maxGeometries = 0;\n\nfunction update(renderer: Renderer) {\n  maxDrawCalls = Math.max(maxDrawCalls, renderer.gl.info.render.calls);\n  maxTriangles = Math.max(maxTriangles, renderer.gl.info.render.triangles);\n  maxTextures = Math.max(maxTextures, renderer.gl.info.memory.textures);\n  maxGeometries = Math.max(maxGeometries, renderer.gl.info.memory.geometries);\n\n  drawCallsPanel?.update(renderer.gl.info.render.calls, maxDrawCalls);\n  trianglesPanel?.update(renderer.gl.info.render.triangles, maxTriangles);\n  texturesPanel?.update(renderer.gl.info.memory.textures, maxTextures);\n  geometriesPanel?.update(renderer.gl.info.memory.geometries, maxGeometries);\n  stats?.update();\n}\n\nexport function Stats(): JSX.Element {\n  const [div, setDiv] = useState<HTMLDivElement | ReactNull>(ReactNull);\n\n  useRendererEvent(\"endFrame\", (_curTime, curRenderer) => update(curRenderer));\n\n  useEffect(() => {\n    if (!div) {\n      return;\n    }\n\n    stats = new THREEStats();\n    stats.dom.style.position = \"relative\";\n    stats.dom.style.zIndex = \"auto\";\n    drawCallsPanel = new Panel(\"draws\", \"red\", \"black\");\n    trianglesPanel = new Panel(\"tris\", \"cyan\", \"black\");\n    texturesPanel = new Panel(\"textures\", \"yellow\", \"black\");\n    geometriesPanel = new Panel(\"geometries\", \"green\", \"black\");\n    stats.addPanel(drawCallsPanel);\n    stats.addPanel(trianglesPanel);\n    stats.addPanel(texturesPanel);\n    stats.addPanel(geometriesPanel);\n    div.appendChild(stats.dom);\n    stats.showPanel(0);\n    return () => {\n      if (stats) {\n        try {\n          div.removeChild(stats.dom);\n        } catch (ex) {\n          // ignore\n        }\n      }\n    };\n  }, [div]);\n\n  return <div ref={setDiv} />;\n}\n\n// Adapted from <https://github.com/mrdoob/stats.js/>. The frame time panel is\n// modified to use a maximum value of ~33ms instead of the default 200ms and\n// the FPS panel is removed\nclass THREEStats {\n  private mode = 0;\n  private container: HTMLDivElement;\n  public dom: HTMLDivElement;\n  private beginTime: number;\n  private prevTime: number;\n  private msPanel: Panel;\n  // fpsPanel: Panel;\n  private memPanel: Panel;\n\n  public constructor() {\n    this.container = document.createElement(\"div\");\n    this.container.style.cssText =\n      \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n    this.container.addEventListener(\n      \"click\",\n      (event) => {\n        event.preventDefault();\n        this.showPanel(++this.mode % this.container.children.length);\n      },\n      false,\n    );\n    this.dom = this.container;\n\n    this.beginTime = performance.now();\n    this.prevTime = this.beginTime;\n\n    this.msPanel = this.addPanel(new Panel(\"MS\", \"#9480ed\", \"#1e1a2f\"));\n    // this.fpsPanel = this.addPanel(new Panel(\"FPS\", \"#0ff\", \"#002\"));\n    this.memPanel = this.addPanel(new Panel(\"MB\", \"#f08\", \"#201\"));\n\n    this.showPanel(0);\n  }\n\n  public addPanel(panel: Panel) {\n    this.container.appendChild(panel.dom);\n    return panel;\n  }\n\n  public showPanel(id: number) {\n    for (let i = 0; i < this.container.children.length; i++) {\n      const child = this.container.children[i] as HTMLElement;\n      child.style.display = i === id ? \"block\" : \"none\";\n    }\n\n    this.mode = id;\n  }\n\n  public begin = () => {\n    this.beginTime = performance.now();\n  };\n\n  public end = () => {\n    const time = performance.now();\n\n    this.msPanel.update(time - this.beginTime, 1000 / 30);\n\n    if (time >= this.prevTime + 1000) {\n      // this.fpsPanel.update((this.frames * 1000) / (time - this.prevTime), 100);\n\n      this.prevTime = time;\n\n      const memory = (\n        performance as unknown as { memory: { usedJSHeapSize: number; jsHeapSizeLimit: number } }\n      ).memory;\n      this.memPanel.update(memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576);\n    }\n\n    return time;\n  };\n\n  public update = () => {\n    this.beginTime = this.end();\n  };\n}\n\n// Adapted from <https://github.com/mrdoob/stats.js/>. License: MIT.\nclass Panel {\n  public dom: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n  private min = Infinity;\n  private max = 0;\n  private name: string;\n  private fg: string;\n  private bg: string;\n\n  public constructor(name: string, fg: string, bg: string) {\n    this.name = name;\n    this.fg = fg;\n    this.bg = bg;\n\n    const PR = Math.round(window.devicePixelRatio);\n    const WIDTH = 80 * PR,\n      HEIGHT = 48 * PR,\n      TEXT_X = 3 * PR,\n      TEXT_Y = 2 * PR,\n      GRAPH_X = 3 * PR,\n      GRAPH_Y = 15 * PR,\n      GRAPH_WIDTH = 74 * PR,\n      GRAPH_HEIGHT = 30 * PR;\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n    canvas.style.cssText = \"width:80px;height:48px\";\n\n    const context = canvas.getContext(\"2d\")!;\n    context.font = `bold ${9 * PR}px Helvetica,Arial,sans-serif`;\n    context.textBaseline = \"top\";\n\n    context.fillStyle = bg;\n    context.fillRect(0, 0, WIDTH, HEIGHT);\n\n    context.fillStyle = fg;\n    context.fillText(name, TEXT_X, TEXT_Y);\n    context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n    context.fillStyle = bg;\n    context.globalAlpha = 0.9;\n    context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n    this.dom = canvas;\n    this.context = context;\n  }\n\n  public update(value: number, maxValue: number): void {\n    const PR = Math.round(window.devicePixelRatio);\n    const WIDTH = 80 * PR,\n      TEXT_X = 3 * PR,\n      TEXT_Y = 2 * PR,\n      GRAPH_X = 3 * PR,\n      GRAPH_Y = 15 * PR,\n      GRAPH_WIDTH = 74 * PR,\n      GRAPH_HEIGHT = 30 * PR;\n\n    this.min = Math.min(this.min, value);\n    this.max = Math.max(this.max, value);\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 1;\n    this.context.fillRect(0, 0, WIDTH, GRAPH_Y);\n    this.context.fillStyle = this.fg;\n    this.context.fillText(\n      `${Math.round(value)} ${this.name} (${Math.round(this.min)}-${Math.round(this.max)})`,\n      TEXT_X,\n      TEXT_Y,\n    );\n\n    this.context.drawImage(\n      this.dom,\n      GRAPH_X + PR,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n      GRAPH_X,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 0.9;\n    this.context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      Math.round((1 - value / maxValue) * GRAPH_HEIGHT),\n    );\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport { MessageDefinition } from \"@foxglove/message-definition\";\nimport { ros1, ros2galactic } from \"@foxglove/rosmsg-msgs-common\";\nimport { fromDate } from \"@foxglove/rostime\";\nimport { Point, makeCovarianceArray } from \"@foxglove/studio-base/util/geometry\";\n\nimport { Pose } from \"./transforms/geometry\";\n\nexport const PublishRos1Datatypes = new Map<string, MessageDefinition>(\n  (\n    [\n      \"geometry_msgs/Point\",\n      \"geometry_msgs/PointStamped\",\n      \"geometry_msgs/Pose\",\n      \"geometry_msgs/PoseStamped\",\n      \"geometry_msgs/PoseWithCovariance\",\n      \"geometry_msgs/PoseWithCovarianceStamped\",\n      \"geometry_msgs/Quaternion\",\n      \"std_msgs/Header\",\n    ] as Array<keyof typeof ros1>\n  ).map((type) => [type, ros1[type]]),\n);\n\nexport const PublishRos2Datatypes = new Map<string, MessageDefinition>(\n  (\n    [\n      \"geometry_msgs/Point\",\n      \"geometry_msgs/PointStamped\",\n      \"geometry_msgs/Pose\",\n      \"geometry_msgs/PoseStamped\",\n      \"geometry_msgs/PoseWithCovariance\",\n      \"geometry_msgs/PoseWithCovarianceStamped\",\n      \"geometry_msgs/Quaternion\",\n      \"std_msgs/Header\",\n    ] as Array<keyof typeof ros2galactic>\n  ).map((type) => [type, ros2galactic[type]]),\n);\n\nexport function makePointMessage(point: Point, frameId: string): unknown {\n  const time = fromDate(new Date());\n  return {\n    // seq is omitted since it is not present in ros2\n    header: { stamp: time, frame_id: frameId },\n    point: { x: point.x, y: point.y, z: 0 },\n  };\n}\n\nexport function makePoseMessage(pose: Pose, frameId: string): unknown {\n  const time = fromDate(new Date());\n  return {\n    // seq is omitted since it is not present in ros2\n    header: { stamp: time, frame_id: frameId },\n    pose,\n  };\n}\n\nexport function makePoseEstimateMessage(\n  pose: Pose,\n  frameId: string,\n  xDev: number,\n  yDev: number,\n  thetaDev: number,\n): unknown {\n  const time = fromDate(new Date());\n  return {\n    // seq is omitted since it is not present in ros2\n    header: { stamp: time, frame_id: frameId },\n    pose: {\n      covariance: makeCovarianceArray(xDev, yDev, thetaDev),\n      pose,\n    },\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Ruler24Filled } from \"@fluentui/react-icons\";\nimport {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Paper,\n  useTheme,\n} from \"@mui/material\";\nimport { Immutable } from \"immer\";\nimport { cloneDeep, isEqual, merge } from \"lodash\";\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useLatest, useLongPress } from \"react-use\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { makeStyles } from \"tss-react/mui\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport Logger from \"@foxglove/log\";\nimport { Time, toNanoSec } from \"@foxglove/rostime\";\nimport {\n  LayoutActions,\n  MessageEvent,\n  PanelExtensionContext,\n  ParameterValue,\n  RenderState,\n  SettingsTreeAction,\n  SettingsTreeNodes,\n  Subscription,\n  Topic,\n  VariableValue,\n} from \"@foxglove/studio\";\nimport { AppSetting } from \"@foxglove/studio-base/AppSetting\";\nimport PublishGoalIcon from \"@foxglove/studio-base/components/PublishGoalIcon\";\nimport PublishPointIcon from \"@foxglove/studio-base/components/PublishPointIcon\";\nimport PublishPoseEstimateIcon from \"@foxglove/studio-base/components/PublishPoseEstimateIcon\";\nimport ThemeProvider from \"@foxglove/studio-base/theme/ThemeProvider\";\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\n\nimport { DebugGui } from \"./DebugGui\";\nimport { InteractionContextMenu, Interactions, SelectionObject, TabType } from \"./Interactions\";\nimport type { PickedRenderable } from \"./Picker\";\nimport { Renderable, SELECTED_ID_VARIABLE } from \"./Renderable\";\nimport {\n  FollowMode,\n  ImageModeConfig,\n  LegacyImageConfig,\n  Renderer,\n  RendererConfig,\n  RendererEvents,\n  RendererSubscription,\n} from \"./Renderer\";\nimport { RendererContext, useRenderer, useRendererEvent } from \"./RendererContext\";\nimport { Stats } from \"./Stats\";\nimport { CameraState, DEFAULT_CAMERA_STATE, MouseEventObject } from \"./camera\";\nimport {\n  makePointMessage,\n  makePoseEstimateMessage,\n  makePoseMessage,\n  PublishRos1Datatypes,\n  PublishRos2Datatypes,\n} from \"./publish\";\nimport type { LayerSettingsTransform } from \"./renderables/FrameAxes\";\nimport { PublishClickEvent, PublishClickType } from \"./renderables/PublishClickTool\";\nimport { DEFAULT_PUBLISH_SETTINGS } from \"./renderables/PublishSettings\";\nimport { InterfaceMode } from \"./types\";\n\nconst log = Logger.getLogger(__filename);\n\ntype Shared3DPanelState = {\n  cameraState: CameraState;\n  followMode: FollowMode;\n  followTf: undefined | string;\n};\n\nconst SHOW_DEBUG: true | false = false;\n\nconst PANEL_STYLE: React.CSSProperties = {\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  position: \"relative\",\n};\n\nconst PublishClickIcons: Record<PublishClickType, React.ReactNode> = {\n  pose: <PublishGoalIcon fontSize=\"inherit\" />,\n  point: <PublishPointIcon fontSize=\"inherit\" />,\n  pose_estimate: <PublishPoseEstimateIcon fontSize=\"inherit\" />,\n};\n\nconst useStyles = makeStyles()((theme) => ({\n  iconButton: {\n    position: \"relative\",\n    fontSize: \"1rem !important\",\n    pointerEvents: \"auto\",\n    aspectRatio: \"1\",\n\n    \"& svg:not(.MuiSvgIcon-root)\": {\n      fontSize: \"1rem !important\",\n    },\n  },\n  rulerIcon: {\n    transform: \"rotate(45deg)\",\n  },\n  threeDeeButton: {\n    fontFamily: fonts.MONOSPACE,\n    fontFeatureSettings: theme.typography.caption.fontFeatureSettings,\n    fontSize: theme.typography.caption.fontSize,\n    fontWeight: theme.typography.fontWeightBold,\n    lineHeight: \"1em\",\n  },\n}));\n\n/**\n * Provides DOM overlay elements on top of the 3D scene (e.g. stats, debug GUI).\n */\nfunction RendererOverlay(props: {\n  interfaceMode: InterfaceMode;\n  canvas: HTMLCanvasElement | ReactNull;\n  addPanel: LayoutActions[\"addPanel\"];\n  enableStats: boolean;\n  perspective: boolean;\n  onTogglePerspective: () => void;\n  measureActive: boolean;\n  onClickMeasure: () => void;\n  canPublish: boolean;\n  publishActive: boolean;\n  publishClickType: PublishClickType;\n  onChangePublishClickType: (_: PublishClickType) => void;\n  onClickPublish: () => void;\n  timezone: string | undefined;\n}): JSX.Element {\n  const { classes } = useStyles();\n  const [clickedPosition, setClickedPosition] = useState<{ clientX: number; clientY: number }>({\n    clientX: 0,\n    clientY: 0,\n  });\n  const [selectedRenderables, setSelectedRenderables] = useState<PickedRenderable[]>([]);\n  const [selectedRenderable, setSelectedRenderable] = useState<PickedRenderable | undefined>(\n    undefined,\n  );\n  const [interactionsTabType, setInteractionsTabType] = useState<TabType | undefined>(undefined);\n  const renderer = useRenderer();\n\n  // Toggle object selection mode on/off in the renderer\n  useEffect(() => {\n    if (renderer) {\n      renderer.setPickingEnabled(interactionsTabType != undefined);\n    }\n  }, [interactionsTabType, renderer]);\n\n  useRendererEvent(\"renderablesClicked\", (selections, cursorCoords) => {\n    const rect = props.canvas!.getBoundingClientRect();\n    setClickedPosition({ clientX: rect.left + cursorCoords.x, clientY: rect.top + cursorCoords.y });\n    setSelectedRenderables(selections);\n    setSelectedRenderable(selections.length === 1 ? selections[0] : undefined);\n  });\n\n  const stats = props.enableStats ? (\n    <div id=\"stats\" style={{ position: \"absolute\", top: \"10px\", left: \"10px\" }}>\n      <Stats />\n    </div>\n  ) : undefined;\n\n  const debug = SHOW_DEBUG ? (\n    <div id=\"debug\" style={{ position: \"absolute\", top: \"70px\", left: \"10px\" }}>\n      <DebugGui />\n    </div>\n  ) : undefined;\n\n  // Convert the list of selected renderables (if any) into MouseEventObjects\n  // that can be passed to <InteractionContextMenu>, which shows a context menu\n  // of candidate objects to select\n  const clickedObjects = useMemo<MouseEventObject[]>(\n    () =>\n      selectedRenderables.map((selection) => ({\n        object: {\n          pose: selection.renderable.pose,\n          scale: selection.renderable.scale,\n          color: undefined,\n          interactionData: {\n            topic: selection.renderable.name,\n            highlighted: undefined,\n            renderable: selection.renderable,\n          },\n        },\n        instanceIndex: selection.instanceIndex,\n      })),\n    [selectedRenderables],\n  );\n\n  // Once a single renderable is selected, convert it to the SelectionObject\n  // format to populate the object inspection dialog (<Interactions>)\n  const selectedObject = useMemo<SelectionObject | undefined>(\n    () =>\n      selectedRenderable\n        ? {\n            object: {\n              pose: selectedRenderable.renderable.pose,\n              interactionData: {\n                topic: selectedRenderable.renderable.topic,\n                highlighted: true,\n                originalMessage: selectedRenderable.renderable.details(),\n                instanceDetails:\n                  selectedRenderable.instanceIndex != undefined\n                    ? selectedRenderable.renderable.instanceDetails(\n                        selectedRenderable.instanceIndex,\n                      )\n                    : undefined,\n              },\n            },\n            instanceIndex: selectedRenderable.instanceIndex,\n          }\n        : undefined,\n    [selectedRenderable],\n  );\n\n  // Inform the Renderer when a renderable is selected\n  useEffect(() => {\n    renderer?.setSelectedRenderable(selectedRenderable);\n  }, [renderer, selectedRenderable]);\n\n  const publickClickButtonRef = useRef<HTMLButtonElement>(ReactNull);\n  const [publishMenuExpanded, setPublishMenuExpanded] = useState(false);\n  const selectedPublishClickIcon = PublishClickIcons[props.publishClickType];\n\n  const onLongPressPublish = useCallback(() => {\n    setPublishMenuExpanded(true);\n  }, []);\n  const longPressPublishEvent = useLongPress(onLongPressPublish);\n\n  const theme = useTheme();\n\n  // Publish control is only available if the canPublish prop is true and we have a fixed frame in the renderer\n  const showPublishControl =\n    props.interfaceMode === \"3d\" && props.canPublish && renderer?.fixedFrameId != undefined;\n  const publishControls = showPublishControl && (\n    <>\n      <IconButton\n        {...longPressPublishEvent}\n        color={props.publishActive ? \"info\" : \"inherit\"}\n        title={props.publishActive ? \"Click to cancel\" : \"Click to publish\"}\n        ref={publickClickButtonRef}\n        onClick={props.onClickPublish}\n        data-testid=\"publish-button\"\n        style={{ fontSize: \"1rem\", pointerEvents: \"auto\" }}\n      >\n        {selectedPublishClickIcon}\n        <div\n          style={{\n            borderBottom: \"6px solid currentColor\",\n            borderRight: \"6px solid transparent\",\n            bottom: 0,\n            left: 0,\n            height: 0,\n            width: 0,\n            margin: theme.spacing(0.25),\n            position: \"absolute\",\n          }}\n        />\n      </IconButton>\n      <Menu\n        id=\"publish-menu\"\n        anchorEl={publickClickButtonRef.current}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={publishMenuExpanded}\n        onClose={() => setPublishMenuExpanded(false)}\n      >\n        <MenuItem\n          selected={props.publishClickType === \"pose_estimate\"}\n          onClick={() => {\n            props.onChangePublishClickType(\"pose_estimate\");\n            setPublishMenuExpanded(false);\n          }}\n        >\n          <ListItemIcon>{PublishClickIcons.pose_estimate}</ListItemIcon>\n          <ListItemText>Publish pose estimate</ListItemText>\n        </MenuItem>\n        <MenuItem\n          selected={props.publishClickType === \"pose\"}\n          onClick={() => {\n            props.onChangePublishClickType(\"pose\");\n            setPublishMenuExpanded(false);\n          }}\n        >\n          <ListItemIcon>{PublishClickIcons.pose}</ListItemIcon>\n          <ListItemText>Publish pose</ListItemText>\n        </MenuItem>\n        <MenuItem\n          selected={props.publishClickType === \"point\"}\n          onClick={() => {\n            props.onChangePublishClickType(\"point\");\n            setPublishMenuExpanded(false);\n          }}\n        >\n          <ListItemIcon>{PublishClickIcons.point}</ListItemIcon>\n          <ListItemText>Publish point</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\",\n          gap: 10,\n          pointerEvents: \"none\",\n        }}\n      >\n        <Interactions\n          addPanel={props.addPanel}\n          selectedObject={selectedObject}\n          interactionsTabType={interactionsTabType}\n          setInteractionsTabType={setInteractionsTabType}\n          timezone={props.timezone}\n        />\n        {props.interfaceMode === \"3d\" && (\n          <Paper square={false} elevation={4} style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <IconButton\n              className={classes.iconButton}\n              color={props.perspective ? \"info\" : \"inherit\"}\n              title={props.perspective ? \"Switch to 2D camera\" : \"Switch to 3D camera\"}\n              onClick={props.onTogglePerspective}\n            >\n              <span className={classes.threeDeeButton}>3D</span>\n            </IconButton>\n            <IconButton\n              data-testid=\"measure-button\"\n              className={classes.iconButton}\n              color={props.measureActive ? \"info\" : \"inherit\"}\n              title={props.measureActive ? \"Cancel measuring\" : \"Measure distance\"}\n              onClick={props.onClickMeasure}\n            >\n              <Ruler24Filled className={classes.rulerIcon} />\n            </IconButton>\n\n            {publishControls}\n          </Paper>\n        )}\n      </div>\n      {clickedObjects.length > 1 && !selectedObject && (\n        <InteractionContextMenu\n          onClose={() => setSelectedRenderables([])}\n          clickedPosition={clickedPosition}\n          clickedObjects={clickedObjects}\n          selectObject={(selection) => {\n            if (selection) {\n              const renderable = (\n                selection.object as unknown as { interactionData: { renderable: Renderable } }\n              ).interactionData.renderable;\n              const instanceIndex = selection.instanceIndex;\n              setSelectedRenderables([]);\n              setSelectedRenderable({ renderable, instanceIndex });\n            }\n          }}\n        />\n      )}\n      {stats}\n      {debug}\n    </React.Fragment>\n  );\n}\n\nfunction useRendererProperty<K extends keyof Renderer>(\n  renderer: Renderer | undefined,\n  key: K,\n  event: keyof RendererEvents,\n  fallback: () => Renderer[K],\n): Renderer[K] {\n  const [value, setValue] = useState(() => renderer?.[key] ?? fallback());\n  useEffect(() => {\n    if (!renderer) {\n      return;\n    }\n    const onChange = () => setValue(renderer[key]);\n    onChange();\n\n    renderer.addListener(event, onChange);\n    return () => {\n      renderer.removeListener(event, onChange);\n    };\n  }, [renderer, event, key]);\n  return value;\n}\n\n/**\n * A panel that renders a 3D scene. This is a thin wrapper around a `Renderer` instance.\n */\nexport function ThreeDeeRender(props: {\n  context: PanelExtensionContext;\n  interfaceMode: InterfaceMode;\n}): JSX.Element {\n  const { context, interfaceMode } = props;\n  const { initialState, saveState } = context;\n\n  // Load and save the persisted panel configuration\n  const [config, setConfig] = useState<Immutable<RendererConfig>>(() => {\n    const partialConfig = initialState as DeepPartial<RendererConfig> | undefined;\n\n    // Initialize the camera from default settings overlaid with persisted settings\n    const cameraState: CameraState = merge(\n      cloneDeep(DEFAULT_CAMERA_STATE),\n      partialConfig?.cameraState,\n    );\n    const publish = merge(cloneDeep(DEFAULT_PUBLISH_SETTINGS), partialConfig?.publish);\n\n    const transforms = (partialConfig?.transforms ?? {}) as Record<\n      string,\n      Partial<LayerSettingsTransform>\n    >;\n\n    // Merge in config from the legacy Image panel\n    const legacyImageConfig = partialConfig as DeepPartial<LegacyImageConfig> | undefined;\n    const imageMode: ImageModeConfig = {\n      imageTopic: legacyImageConfig?.cameraTopic,\n      ...partialConfig?.imageMode,\n    };\n\n    return {\n      cameraState,\n      followMode: partialConfig?.followMode ?? \"follow-pose\",\n      followTf: partialConfig?.followTf,\n      scene: partialConfig?.scene ?? {},\n      transforms,\n      topics: partialConfig?.topics ?? {},\n      layers: partialConfig?.layers ?? {},\n      publish,\n      imageMode,\n    };\n  });\n  const configRef = useLatest(config);\n  const { cameraState } = config;\n  const backgroundColor = config.scene.backgroundColor;\n\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | ReactNull>(ReactNull);\n  const [renderer, setRenderer] = useState<Renderer | undefined>(undefined);\n  const rendererRef = useRef<Renderer | undefined>(undefined);\n  useEffect(() => {\n    const newRenderer = canvas ? new Renderer(canvas, configRef.current, interfaceMode) : undefined;\n    setRenderer(newRenderer);\n    rendererRef.current = newRenderer;\n    return () => {\n      rendererRef.current?.dispose();\n      rendererRef.current = undefined;\n    };\n  }, [canvas, configRef, config.scene.transforms?.enablePreloading, interfaceMode]);\n\n  const [colorScheme, setColorScheme] = useState<\"dark\" | \"light\" | undefined>();\n  const [timezone, setTimezone] = useState<string | undefined>();\n  const [topics, setTopics] = useState<ReadonlyArray<Topic> | undefined>();\n  const [parameters, setParameters] = useState<ReadonlyMap<string, ParameterValue> | undefined>();\n  const [variables, setVariables] = useState<ReadonlyMap<string, VariableValue> | undefined>();\n  const [currentFrameMessages, setCurrentFrameMessages] = useState<\n    ReadonlyArray<MessageEvent<unknown>> | undefined\n  >();\n  const [currentTime, setCurrentTime] = useState<Time | undefined>();\n  const [didSeek, setDidSeek] = useState<boolean>(false);\n  const [sharedPanelState, setSharedPanelState] = useState<undefined | Shared3DPanelState>();\n  const [allFrames, setAllFrames] = useState<readonly MessageEvent<unknown>[] | undefined>(\n    undefined,\n  );\n\n  const renderRef = useRef({ needsRender: false });\n  const [renderDone, setRenderDone] = useState<(() => void) | undefined>();\n\n  const schemaHandlers = useRendererProperty(\n    renderer,\n    \"schemaHandlers\",\n    \"schemaHandlersChanged\",\n    () => new Map(),\n  );\n  const topicHandlers = useRendererProperty(\n    renderer,\n    \"topicHandlers\",\n    \"topicHandlersChanged\",\n    () => new Map(),\n  );\n\n  // The frame we care about for syncing purposes can be either of these.\n  const effectiveRendererFrameId = renderer?.followFrameId ?? renderer?.renderFrameId;\n\n  // Config cameraState\n  useEffect(() => {\n    const listener = () => {\n      if (renderer) {\n        const newCameraState = renderer.getCameraState();\n        // This needs to be before `setConfig` otherwise flickering will occur during\n        // non-follow mode playback\n        renderer.setCameraState(newCameraState);\n        setConfig((prevConfig) => ({ ...prevConfig, cameraState: newCameraState }));\n\n        if (config.scene.syncCamera === true) {\n          context.setSharedPanelState({\n            cameraState: newCameraState,\n            followMode: renderer.followMode,\n            followTf: effectiveRendererFrameId,\n          });\n        }\n      }\n    };\n    renderer?.addListener(\"cameraMove\", listener);\n    return () => void renderer?.removeListener(\"cameraMove\", listener);\n  }, [config.scene.syncCamera, context, effectiveRendererFrameId, renderer]);\n\n  // Handle user changes in the settings sidebar\n  const actionHandler = useCallback(\n    (action: SettingsTreeAction) =>\n      // Wrapping in unstable_batchedUpdates causes React to run effects _after_ the handleAction\n      // function has finished executing. This allows scene extensions that call\n      // renderer.updateConfig to read out the new config value and configure their renderables\n      // before the render occurs.\n      ReactDOM.unstable_batchedUpdates(() => {\n        if (renderer) {\n          const initialCameraState = renderer.getCameraState();\n          renderer.settings.handleAction(action);\n          const updatedCameraState = renderer.getCameraState();\n          // Communicate camera changes from settings to the global state if syncing.\n          if (updatedCameraState !== initialCameraState && config.scene.syncCamera === true) {\n            context.setSharedPanelState({\n              cameraState: updatedCameraState,\n              followMode: renderer.followMode,\n              followTf: renderer.followFrameId,\n            });\n          }\n        }\n      }),\n    [config.scene.syncCamera, context, renderer],\n  );\n\n  // Maintain the settings tree\n  const [settingsTree, setSettingsTree] = useState<SettingsTreeNodes | undefined>(undefined);\n  const updateSettingsTree = useCallback(\n    (curRenderer: Renderer) => setSettingsTree(curRenderer.settings.tree()),\n    [],\n  );\n  useRendererEvent(\"settingsTreeChange\", updateSettingsTree, renderer);\n\n  // Save the panel configuration when it changes\n  const updateConfig = useCallback((curRenderer: Renderer) => setConfig(curRenderer.config), []);\n  useRendererEvent(\"configChange\", updateConfig, renderer);\n\n  // Write to a global variable when the current selection changes\n  const updateSelectedRenderable = useCallback(\n    (selection: PickedRenderable | undefined) => {\n      const id = selection?.renderable.idFromMessage();\n      const customVariable = selection?.renderable.selectedIdVariable();\n      if (customVariable) {\n        context.setVariable(customVariable, id);\n      }\n      context.setVariable(SELECTED_ID_VARIABLE, id);\n    },\n    [context],\n  );\n  useRendererEvent(\"selectedRenderable\", updateSelectedRenderable, renderer);\n\n  // Rebuild the settings sidebar tree as needed\n  useEffect(() => {\n    context.updatePanelSettingsEditor({\n      actionHandler,\n      enableFilter: true,\n      nodes: settingsTree ?? {},\n    });\n  }, [actionHandler, context, settingsTree]);\n\n  // Update the renderer's reference to `config` when it changes. Note that this does *not*\n  // automatically update the settings tree.\n  useEffect(() => {\n    if (renderer) {\n      renderer.config = config;\n      renderRef.current.needsRender = true;\n    }\n  }, [config, renderer]);\n\n  // Update the renderer's reference to `topics` when it changes\n  useEffect(() => {\n    if (renderer) {\n      renderer.setTopics(topics);\n      renderRef.current.needsRender = true;\n    }\n  }, [topics, renderer]);\n\n  // Tell the renderer if we are connected to a ROS data source\n  useEffect(() => {\n    if (renderer) {\n      renderer.ros = context.dataSourceProfile === \"ros1\" || context.dataSourceProfile === \"ros2\";\n    }\n  }, [context.dataSourceProfile, renderer]);\n\n  // Save panel settings whenever they change\n  const throttledSave = useDebouncedCallback(\n    (newConfig: Immutable<RendererConfig>) => saveState(newConfig),\n    1000,\n    { leading: false, trailing: true, maxWait: 1000 },\n  );\n  useEffect(() => throttledSave(config), [config, throttledSave]);\n\n  // Establish a connection to the message pipeline with context.watch and context.onRender\n  useLayoutEffect(() => {\n    context.onRender = (renderState: RenderState, done) => {\n      ReactDOM.unstable_batchedUpdates(() => {\n        if (renderState.currentTime) {\n          setCurrentTime(renderState.currentTime);\n        }\n\n        // Check if didSeek is set to true to reset the preloadedMessageTime and\n        // trigger a state flush in Renderer\n        if (renderState.didSeek === true) {\n          setDidSeek(true);\n        }\n\n        // Set the done callback into a state variable to trigger a re-render\n        setRenderDone(() => done);\n\n        // Keep UI elements and the renderer aware of the current color scheme\n        setColorScheme(renderState.colorScheme);\n        if (renderState.appSettings) {\n          const tz = renderState.appSettings.get(AppSetting.TIMEZONE);\n          setTimezone(typeof tz === \"string\" ? tz : undefined);\n        }\n\n        // We may have new topics - since we are also watching for messages in\n        // the current frame, topics may not have changed\n        setTopics(renderState.topics);\n\n        setSharedPanelState(renderState.sharedPanelState as Shared3DPanelState);\n\n        // Watch for any changes in the map of observed parameters\n        setParameters(renderState.parameters);\n\n        // Watch for any changes in the map of global variables\n        setVariables(renderState.variables);\n\n        // currentFrame has messages on subscribed topics since the last render call\n        deepParseMessageEvents(renderState.currentFrame);\n        setCurrentFrameMessages(renderState.currentFrame);\n\n        // allFrames has messages on preloaded topics across all frames (as they are loaded)\n        deepParseMessageEvents(renderState.allFrames);\n        setAllFrames(renderState.allFrames);\n      });\n    };\n\n    context.watch(\"allFrames\");\n    context.watch(\"colorScheme\");\n    context.watch(\"currentFrame\");\n    context.watch(\"currentTime\");\n    context.watch(\"didSeek\");\n    context.watch(\"parameters\");\n    context.watch(\"sharedPanelState\");\n    context.watch(\"variables\");\n    context.watch(\"topics\");\n    context.watch(\"appSettings\");\n    context.subscribeAppSettings([AppSetting.TIMEZONE]);\n  }, [context, renderer]);\n\n  // Build a list of topics to subscribe to\n  const [topicsToSubscribe, setTopicsToSubscribe] = useState<Subscription[] | undefined>(undefined);\n  useEffect(() => {\n    if (!topics) {\n      setTopicsToSubscribe(undefined);\n      return;\n    }\n\n    const newSubscriptions: Subscription[] = [];\n\n    const addSubscription = (\n      topic: string,\n      rendererSubscription: RendererSubscription,\n      convertTo?: string,\n    ) => {\n      const shouldSubscribe =\n        rendererSubscription.shouldSubscribe ?? ((t) => config.topics[t]?.visible === true);\n      if (shouldSubscribe(topic)) {\n        newSubscriptions.push({\n          topic,\n          preload: rendererSubscription.preload,\n          convertTo,\n        });\n      }\n    };\n\n    for (const topic of topics) {\n      for (const rendererSubscription of topicHandlers.get(topic.name) ?? []) {\n        addSubscription(topic.name, rendererSubscription);\n      }\n      for (const rendererSubscription of schemaHandlers.get(topic.schemaName) ?? []) {\n        addSubscription(topic.name, rendererSubscription);\n      }\n      for (const schemaName of topic.convertibleTo ?? []) {\n        for (const rendererSubscription of schemaHandlers.get(schemaName) ?? []) {\n          addSubscription(topic.name, rendererSubscription, schemaName);\n        }\n      }\n    }\n\n    // Sort the list to make comparisons stable\n    newSubscriptions.sort((a, b) => a.topic.localeCompare(b.topic));\n    setTopicsToSubscribe((prev) => (isEqual(prev, newSubscriptions) ? prev : newSubscriptions));\n  }, [topics, config.topics, schemaHandlers, topicHandlers]);\n\n  // Notify the extension context when our subscription list changes\n  useEffect(() => {\n    if (!topicsToSubscribe) {\n      return;\n    }\n    log.debug(`Subscribing to [${topicsToSubscribe.map((t) => JSON.stringify(t)).join(\", \")}]`);\n    context.subscribe(topicsToSubscribe);\n  }, [context, topicsToSubscribe]);\n\n  // Keep the renderer parameters up to date\n  useEffect(() => {\n    if (renderer) {\n      renderer.setParameters(parameters);\n    }\n  }, [parameters, renderer]);\n\n  // Keep the renderer variables up to date\n  useEffect(() => {\n    if (renderer && variables) {\n      renderer.setVariables(variables);\n    }\n  }, [variables, renderer]);\n\n  // Keep the renderer currentTime up to date and handle seeking\n  useEffect(() => {\n    const newTimeNs = currentTime ? toNanoSec(currentTime) : undefined;\n\n    /*\n     * NOTE AROUND SEEK HANDLING\n     * Seeking MUST be handled even if there is no change in current time.  When there is a subscription\n     * change while paused, the player goes into `seek-backfill` which sets didSeek to true.\n     *\n     * We cannot early return here when there is no change in current time due to that, otherwise it would\n     * handle seek next time the current time changes and clear the backfilled messages and transforms.\n     */\n    if (!renderer || newTimeNs == undefined) {\n      return;\n    }\n    const oldTimeNs = renderer.currentTime;\n\n    renderer.setCurrentTime(newTimeNs);\n    if (didSeek) {\n      renderer.handleSeek(oldTimeNs);\n      setDidSeek(false);\n    }\n  }, [currentTime, renderer, didSeek]);\n\n  // Keep the renderer colorScheme and backgroundColor up to date\n  useEffect(() => {\n    if (colorScheme && renderer) {\n      renderer.setColorScheme(colorScheme, backgroundColor);\n      renderRef.current.needsRender = true;\n    }\n  }, [backgroundColor, colorScheme, renderer]);\n\n  // Handle preloaded messages and render a frame if new messages are available\n  // Should be called before `messages` is handled\n  useEffect(() => {\n    // we want didseek to be handled by the renderer first so that transforms aren't cleared after the cursor has been brought up\n    if (!renderer || !currentTime) {\n      return;\n    }\n    const newMessagesHandled = renderer.handleAllFramesMessages(allFrames);\n    if (newMessagesHandled) {\n      renderRef.current.needsRender = true;\n    }\n  }, [renderer, currentTime, allFrames]);\n\n  // Handle messages and render a frame if new messages are available\n  useEffect(() => {\n    if (!renderer || !currentFrameMessages) {\n      return;\n    }\n\n    for (const message of currentFrameMessages) {\n      renderer.addMessageEvent(message);\n    }\n\n    renderRef.current.needsRender = true;\n  }, [currentFrameMessages, renderer]);\n\n  // Update the renderer when the camera moves\n  useEffect(() => {\n    if (!isEqual(cameraState, renderer?.getCameraState())) {\n      renderer?.setCameraState(cameraState);\n      renderRef.current.needsRender = true;\n    }\n  }, [cameraState, renderer]);\n\n  // Sync camera with shared state, if enabled.\n  useEffect(() => {\n    if (!renderer || sharedPanelState == undefined || config.scene.syncCamera !== true) {\n      return;\n    }\n\n    if (sharedPanelState.followMode !== renderer.followMode) {\n      renderer.setCameraSyncError(\n        `Follow mode must be ${sharedPanelState.followMode} to sync camera.`,\n      );\n    } else if (sharedPanelState.followTf !== effectiveRendererFrameId) {\n      renderer.setCameraSyncError(\n        `Display frame must be ${sharedPanelState.followTf} to sync camera.`,\n      );\n    } else {\n      const newCameraState = sharedPanelState.cameraState;\n      renderer.setCameraState(newCameraState);\n      renderRef.current.needsRender = true;\n      setConfig((prevConfig) => ({\n        ...prevConfig,\n        cameraState: newCameraState,\n      }));\n      renderer.setCameraSyncError(undefined);\n    }\n  }, [config.scene.syncCamera, effectiveRendererFrameId, renderer, sharedPanelState]);\n\n  // Render a new frame if requested\n  useEffect(() => {\n    if (renderer && renderRef.current.needsRender) {\n      renderer.animationFrame();\n      renderRef.current.needsRender = false;\n    }\n  });\n\n  // Invoke the done callback once the render is complete\n  useEffect(() => {\n    renderDone?.();\n  }, [renderDone]);\n\n  // Create a useCallback wrapper for adding a new panel to the layout, used to open the\n  // \"Raw Messages\" panel from the object inspector\n  const addPanel = useCallback(\n    (params: Parameters<LayoutActions[\"addPanel\"]>[0]) => context.layout.addPanel(params),\n    [context.layout],\n  );\n\n  const [measureActive, setMeasureActive] = useState(false);\n  useEffect(() => {\n    const onStart = () => setMeasureActive(true);\n    const onEnd = () => setMeasureActive(false);\n    renderer?.measurementTool.addEventListener(\"foxglove.measure-start\", onStart);\n    renderer?.measurementTool.addEventListener(\"foxglove.measure-end\", onEnd);\n    return () => {\n      renderer?.measurementTool.removeEventListener(\"foxglove.measure-start\", onStart);\n      renderer?.measurementTool.removeEventListener(\"foxglove.measure-end\", onEnd);\n    };\n  }, [renderer?.measurementTool]);\n\n  const onClickMeasure = useCallback(() => {\n    if (measureActive) {\n      renderer?.measurementTool.stopMeasuring();\n    } else {\n      renderer?.measurementTool.startMeasuring();\n      renderer?.publishClickTool.stop();\n    }\n  }, [measureActive, renderer]);\n\n  const [publishActive, setPublishActive] = useState(false);\n  useEffect(() => {\n    if (renderer?.publishClickTool.publishClickType !== config.publish.type) {\n      renderer?.publishClickTool.setPublishClickType(config.publish.type);\n      // stop if we changed types while a publish action was already in progress\n      renderer?.publishClickTool.stop();\n    }\n  }, [config.publish.type, renderer]);\n\n  const publishTopics = useMemo(() => {\n    return {\n      goal: config.publish.poseTopic,\n      point: config.publish.pointTopic,\n      pose: config.publish.poseEstimateTopic,\n    };\n  }, [config.publish.poseTopic, config.publish.pointTopic, config.publish.poseEstimateTopic]);\n\n  useEffect(() => {\n    const datatypes =\n      context.dataSourceProfile === \"ros2\" ? PublishRos2Datatypes : PublishRos1Datatypes;\n    context.advertise?.(publishTopics.goal, \"geometry_msgs/PoseStamped\", { datatypes });\n    context.advertise?.(publishTopics.point, \"geometry_msgs/PointStamped\", { datatypes });\n    context.advertise?.(publishTopics.pose, \"geometry_msgs/PoseWithCovarianceStamped\", {\n      datatypes,\n    });\n\n    return () => {\n      context.unadvertise?.(publishTopics.goal);\n      context.unadvertise?.(publishTopics.point);\n      context.unadvertise?.(publishTopics.pose);\n    };\n  }, [publishTopics, context, context.dataSourceProfile]);\n\n  const latestPublishConfig = useLatest(config.publish);\n\n  useEffect(() => {\n    const onStart = () => setPublishActive(true);\n    const onSubmit = (event: PublishClickEvent & { type: \"foxglove.publish-submit\" }) => {\n      const frameId = renderer?.renderFrameId;\n      if (frameId == undefined) {\n        log.warn(\"Unable to publish, renderFrameId is not set\");\n        return;\n      }\n      if (!context.publish) {\n        log.error(\"Data source does not support publishing\");\n        return;\n      }\n      if (context.dataSourceProfile !== \"ros1\" && context.dataSourceProfile !== \"ros2\") {\n        log.warn(\"Publishing is only supported in ros1 and ros2\");\n        return;\n      }\n\n      try {\n        switch (event.publishClickType) {\n          case \"point\": {\n            const message = makePointMessage(event.point, frameId);\n            context.publish(publishTopics.point, message);\n            break;\n          }\n          case \"pose\": {\n            const message = makePoseMessage(event.pose, frameId);\n            context.publish(publishTopics.goal, message);\n            break;\n          }\n          case \"pose_estimate\": {\n            const message = makePoseEstimateMessage(\n              event.pose,\n              frameId,\n              latestPublishConfig.current.poseEstimateXDeviation,\n              latestPublishConfig.current.poseEstimateYDeviation,\n              latestPublishConfig.current.poseEstimateThetaDeviation,\n            );\n            context.publish(publishTopics.pose, message);\n            break;\n          }\n        }\n      } catch (error) {\n        log.info(error);\n      }\n    };\n    const onEnd = () => setPublishActive(false);\n    renderer?.publishClickTool.addEventListener(\"foxglove.publish-start\", onStart);\n    renderer?.publishClickTool.addEventListener(\"foxglove.publish-submit\", onSubmit);\n    renderer?.publishClickTool.addEventListener(\"foxglove.publish-end\", onEnd);\n    return () => {\n      renderer?.publishClickTool.removeEventListener(\"foxglove.publish-start\", onStart);\n      renderer?.publishClickTool.removeEventListener(\"foxglove.publish-submit\", onSubmit);\n      renderer?.publishClickTool.removeEventListener(\"foxglove.publish-end\", onEnd);\n    };\n  }, [\n    context,\n    latestPublishConfig,\n    publishTopics,\n    renderer?.renderFrameId,\n    renderer?.publishClickTool,\n  ]);\n\n  const onClickPublish = useCallback(() => {\n    if (publishActive) {\n      renderer?.publishClickTool.stop();\n    } else {\n      renderer?.publishClickTool.start();\n      renderer?.measurementTool.stopMeasuring();\n    }\n  }, [publishActive, renderer]);\n\n  const onTogglePerspective = useCallback(() => {\n    const currentState = renderer?.getCameraState().perspective ?? false;\n    actionHandler({\n      action: \"update\",\n      payload: {\n        input: \"boolean\",\n        path: [\"cameraState\", \"perspective\"],\n        value: !currentState,\n      },\n    });\n  }, [actionHandler, renderer]);\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \"3\") {\n        onTogglePerspective();\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n    [onTogglePerspective],\n  );\n\n  // The 3d panel only supports publishing to ros1 and ros2 data sources\n  const isRosDataSource =\n    context.dataSourceProfile === \"ros1\" || context.dataSourceProfile === \"ros2\";\n  const canPublish = context.publish != undefined && isRosDataSource;\n\n  return (\n    <ThemeProvider isDark={colorScheme === \"dark\"}>\n      <div style={PANEL_STYLE} onKeyDown={onKeyDown}>\n        <canvas\n          ref={setCanvas}\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            ...((measureActive || publishActive) && { cursor: \"crosshair\" }),\n          }}\n        />\n        <RendererContext.Provider value={renderer}>\n          <RendererOverlay\n            interfaceMode={interfaceMode}\n            canvas={canvas}\n            addPanel={addPanel}\n            enableStats={config.scene.enableStats ?? false}\n            perspective={config.cameraState.perspective}\n            onTogglePerspective={onTogglePerspective}\n            measureActive={measureActive}\n            onClickMeasure={onClickMeasure}\n            canPublish={canPublish}\n            publishActive={publishActive}\n            onClickPublish={onClickPublish}\n            publishClickType={renderer?.publishClickTool.publishClickType ?? \"point\"}\n            onChangePublishClickType={(type) => {\n              renderer?.publishClickTool.setPublishClickType(type);\n              renderer?.publishClickTool.start();\n            }}\n            timezone={timezone}\n          />\n        </RendererContext.Provider>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nfunction deepParseMessageEvents(\n  messageEvents: ReadonlyArray<MessageEvent<unknown>> | undefined,\n): void {\n  if (!messageEvents) {\n    return;\n  }\n  for (const messageEvent of messageEvents) {\n    const maybeLazy = messageEvent.message as { toJSON?: () => unknown };\n    if (\"toJSON\" in maybeLazy) {\n      (messageEvent as { message: unknown }).message = maybeLazy.toJSON!();\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { StrictMode, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { useCrash } from \"@foxglove/hooks\";\nimport { PanelExtensionContext } from \"@foxglove/studio\";\nimport { CaptureErrorBoundary } from \"@foxglove/studio-base/components/CaptureErrorBoundary\";\nimport Panel from \"@foxglove/studio-base/components/Panel\";\nimport { PanelExtensionAdapter } from \"@foxglove/studio-base/components/PanelExtensionAdapter\";\nimport { SaveConfig } from \"@foxglove/studio-base/types/panels\";\n\nimport { ThreeDeeRender } from \"./ThreeDeeRender\";\nimport { InterfaceMode } from \"./types\";\n\nfunction initPanel(\n  crash: ReturnType<typeof useCrash>,\n  interfaceMode: InterfaceMode,\n  context: PanelExtensionContext,\n) {\n  ReactDOM.render(\n    <StrictMode>\n      <CaptureErrorBoundary onError={crash}>\n        <ThreeDeeRender context={context} interfaceMode={interfaceMode} />\n      </CaptureErrorBoundary>\n    </StrictMode>,\n    context.panelElement,\n  );\n  return () => {\n    ReactDOM.unmountComponentAtNode(context.panelElement);\n  };\n}\n\ntype Props = {\n  config: unknown;\n  saveConfig: SaveConfig<unknown>;\n};\n\nfunction ThreeDeeRenderAdapter(interfaceMode: InterfaceMode, props: Props) {\n  const crash = useCrash();\n  const boundInitPanel = useMemo(\n    () => initPanel.bind(undefined, crash, interfaceMode),\n    [crash, interfaceMode],\n  );\n\n  return (\n    <PanelExtensionAdapter\n      config={props.config}\n      saveConfig={props.saveConfig}\n      initPanel={boundInitPanel}\n    />\n  );\n}\n\nexport const ThreeDeePanel = Panel(\n  Object.assign(ThreeDeeRenderAdapter.bind(undefined, \"3d\"), {\n    panelType: \"3D\",\n    defaultConfig: {},\n  }),\n);\n\nexport const ImagePanel = Panel(\n  Object.assign(ThreeDeeRenderAdapter.bind(undefined, \"image\"), {\n    panelType: \"Image\",\n    defaultConfig: {},\n  }),\n);\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nconst tempQuaternion = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\n\n/**\n * Convert a quaternion to roll-pitch-yaw Euler angles.\n */\nexport function quatToEuler(\n  x: number,\n  y: number,\n  z: number,\n  w: number,\n): [roll: number, pitch: number, yaw: number] {\n  tempQuaternion.set(x, y, z, w);\n  tempEuler.setFromQuaternion(tempQuaternion, \"XYZ\");\n  return [\n    THREE.MathUtils.radToDeg(tempEuler.x),\n    THREE.MathUtils.radToDeg(tempEuler.y),\n    THREE.MathUtils.radToDeg(tempEuler.z),\n  ];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { ReactNode } from \"react\";\nimport tinycolor from \"tinycolor2\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { isTypicalFilterName } from \"@foxglove/studio-base/components/MessagePathSyntax/isTypicalFilterName\";\nimport { format, formatDuration } from \"@foxglove/studio-base/util/formatTime\";\nimport { quatToEuler } from \"@foxglove/studio-base/util/quatToEuler\";\n\nconst DURATION_20_YEARS_SEC = 20 * 365 * 24 * 60 * 60;\n\nconst PRIMITIVE_TYPES = [\"string\", \"number\", \"bigint\", \"boolean\"];\n\nexport function getItemString(\n  _nodeType: string,\n  data: unknown,\n  itemType: ReactNode,\n  itemString: string,\n  _keyPath: (string | number)[],\n  timezone?: string,\n): ReactNode {\n  if (typeof data !== \"object\" || data == undefined) {\n    return (\n      <span>\n        {itemType} {itemString}\n      </span>\n    );\n  }\n\n  const keys = Object.keys(data);\n  if (keys.length === 2) {\n    const { sec, nsec } = data as { sec?: number; nsec?: number };\n    if (typeof sec === \"number\" && typeof nsec === \"number\") {\n      // Values \"too small\" to be absolute epoch-based times are probably relative durations.\n      return sec < DURATION_20_YEARS_SEC ? (\n        formatDuration({ sec, nsec })\n      ) : (\n        <span>{format({ sec, nsec }, timezone)}</span>\n      );\n    }\n  }\n\n  // for vectors/points display length\n  if (keys.length === 2) {\n    const { x, y } = data as { x?: unknown; y?: unknown };\n    if (typeof x === \"number\" && typeof y === \"number\") {\n      const length = Math.sqrt(x * x + y * y);\n      return (\n        <span>\n          norm = {length.toFixed(2)} {getArrow(x, y)}\n        </span>\n      );\n    }\n  } else if (keys.length === 3) {\n    const { x, y, z } = data as { x?: unknown; y?: unknown; z?: unknown };\n    if (typeof x === \"number\" && typeof y === \"number\" && typeof z === \"number\") {\n      const length = Math.sqrt(x * x + y * y + z * z);\n      return (\n        <span>\n          norm = {length.toFixed(2)} {z === 0 ? getArrow(x, y) : undefined}\n        </span>\n      );\n    }\n  } else if (keys.length === 4) {\n    const { x, y, z, w } = data as { x?: unknown; y?: unknown; z?: unknown; w?: unknown };\n    if (\n      typeof x === \"number\" &&\n      typeof y === \"number\" &&\n      typeof z === \"number\" &&\n      typeof w === \"number\"\n    ) {\n      const [roll, pitch, yaw] = quatToEuler(x, y, z, w);\n      return (\n        <span>\n          rpy = [{round(roll)}, {round(pitch)}, {round(yaw)}]\n        </span>\n      );\n    }\n\n    const { r, g, b, a } = data as { r?: unknown; g?: unknown; b?: unknown; a?: unknown };\n    if (\n      typeof r === \"number\" &&\n      typeof g === \"number\" &&\n      typeof b === \"number\" &&\n      typeof a === \"number\"\n    ) {\n      // print the color as hex\n      return <span>{tinycolor({ r: r * 255, g: g * 255, b: b * 255, a }).toHex8String()}</span>;\n    }\n  }\n\n  // Surface typically-used keys directly in the object summary so the user doesn't have to expand it.\n  const filterKeys = filterMap(keys, (key) => {\n    const value = (data as Record<string, unknown>)[key];\n    if (\n      isTypicalFilterName(key) &&\n      (value == undefined || PRIMITIVE_TYPES.includes(typeof value))\n    ) {\n      return `${key}: ${value}`;\n    }\n    return undefined;\n  }).join(\", \");\n  return (\n    <span>\n      {itemType} {filterKeys.length > 0 ? filterKeys : itemString}\n    </span>\n  );\n}\n\nfunction getArrow(x: number, y: number) {\n  if (x === 0 && y === 0) {\n    return;\n  }\n  return (\n    <span style={{ transform: `rotate(${Math.atan2(-y, x)}rad)`, display: \"inline-block\" }}>→</span>\n  );\n}\n\nfunction round(x: number, precision = 2): number {\n  return Number(x.toFixed(precision));\n}\n"],"names":["yuvToRGBA8","y1","u","y2","v","c","output","decodeYUV","yuv","width","height","off","max","r","decodeYUYV","yuyv","decodeRGB8","rgb","inIdx","outIdx","i","g","b","decodeRGBA8","rgba","a","decodeBGRA8","decodeBGR8","bgr","decodeFloat1c","gray","is_bigendian","view","val","decodeMono8","mono8","ch","decodeMono16","mono16","options","minValue","maxValue","makeSpecializedDecodeBayer","tl","tr","bl","br","decodeBayerRGGB8","decodeBayerBGGR8","decodeBayerGBRG8","decodeBayerGRBG8","PinholeCameraModel","info","binning_x","binning_y","roi","model","D","K","P","R","fx","fy","D8","binningX","binningY","adjustBinning","adjustRoi","out","pixel","cx","cy","tx","ty","invNorm","point","iterations","k1","k2","p1","p2","k3","x","y","x0","y0","count","r2","k_inv","delta_x","delta_y","x1","X","Y","W","xp","yp","r4","r6","a1","barrel_correction","xpp","ypp","CaptureErrorBoundary","error","PANE_HEIGHT","StyledIconButton","StyledTab","theme","StyledTabs","Content","ToolGroup","children","ToolGroupFixedSizePane","ExpandingToolbar","checked","icon","onSelectTab","selectedTab","tooltip","dataTest","selectedTabLocal","React","child","selectedChild","handleChange","_event","value","PublishGoalIcon","props","SvgIcon","PublishPointIcon","PublishPoseEstimateIcon","RendererContext","useRenderer","useRendererEvent","eventName","listener","rendererInstance","usedRenderer","renderer","DebugGui","div","setDiv","gui","createDebugGui","rendererFolder","maybePlainObject","rawVal","ObjectDetails","interactionData","selectedObject","timezone","jsonTreeTheme","topic","plainObject","originalObject","Stack","_markerKeyPath","_data","level","nodeType","data","itemType","itemString","keyPath","getItemString","markerKeyPath","_p1","_p2","_hasChildren","label","TopicLink","addPanel","openRawMessages","existingState","CardActionArea","Typography","OpenInNew","OBJECT_TAB_TYPE","InteractionsBaseComponent","interactionsTabType","setInteractionsTabType","selectedInteractionData","originalMessage","instanceDetails","newSelectedTab","Interactions","getInstanceObj","marker","idx","getObject","InteractionContextMenuItem","interactiveObject","selectObject","object","selectItemObject","MenuItem","InteractionContextMenu","clickedObjects","clickedPosition","onClose","Menu","index","SELECTED_ID_VARIABLE","Renderable","name","userData","instanceId","FRAME_TRANSFORM_DATATYPES","addFoxgloveSchema","FRAME_TRANSFORMS_DATATYPES","POINTCLOUD_DATATYPES","LASERSCAN_DATATYPES","RAW_IMAGE_DATATYPES","COMPRESSED_IMAGE_DATATYPES","CAMERA_CALIBRATION_DATATYPES","SCENE_UPDATE_DATATYPES","POSE_IN_FRAME_DATATYPES","POSES_IN_FRAME_DATATYPES","GRID_DATATYPES","dataType","parts","leaf","UNIT_X","UNIT_Y","v0","v1","getRotationTo","src","dest","q","d","axis","isZeroLength","s","invs","vec","approxEquals","epsilon","vecEqual","vec3TupleApproxEquals","clamp","min","lerp","LIGHT_OUTLINE","DARK_OUTLINE","SRGBToLinear","stringToRgba","colorStr","color","tinycolor","makeRgba","stringToRgb","rgbToThreeColor","rgbaToHexString","rgbaToCssString","rgbaToLinear","getLuminance","rgbaGradient","t","aR","aG","aB","bR","bG","bB","tempColor1","tempColor2","NEEDS_MIN_MAX","getColorConverter","settings","flatColor","_colorValue","valueDelta","minColor","maxColor","colorValue","turboLinearCached","rainbowLinear","getColorBgra","num","pct","h","f","n","kRedVec4","kGreenVec4","kBlueVec4","kRedVec2","kGreenVec2","kBlueVec2","v2","turboLinear","TurboLookup","TURBO_LOOKUP_SIZE","tempColor","offset","RGBA_PACKED_FIELDS","INTENSITY_FIELDS","bestColorByField","fields","supportsPackedRgbModes","field","hasSeparateRgbaFields","baseColorModeSettingsNode","msgFields","config","defaults","supportsRgbaFieldsMode","colorMode","colorField","colorFieldOptions","gradient","colorMap","explicitAlpha","colorHasTransparency","FS_SRGB_TO_LINEAR","MarkerType","MarkerAction","PointFieldType","TIME_ZERO","TRANSFORM_STAMPED_DATATYPES","addRosDataType","TF_DATATYPES","MARKER_DATATYPES","MARKER_ARRAY_DATATYPES","OCCUPANCY_GRID_DATATYPES","VELODYNE_SCAN_DATATYPES","POSE_STAMPED_DATATYPES","POSE_WITH_COVARIANCE_STAMPED_DATATYPES","POSE_ARRAY_DATATYPES","NAV_PATH_DATATYPES","CAMERA_INFO_DATATYPES","IMAGE_DATATYPES","POLYGON_STAMPED_DATATYPES","JOINTSTATE_DATATYPES","base","int8Reader","fieldOffset","normalize","pointOffset","uint8Reader","int16Reader","uint16Reader","int32Reader","uint32Reader","float32Reader","float64Reader","isSupportedField","getReader","stride","forceType","numericType","makePose","xyzrpyToPose","xyz","rpy","o","quat","vec3Identity","vec3FromValues","z","vec3Clone","quatIdentity","quatFromValues","w","quatClone","mat4Identity","mat4FromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","mat4Clone","m","approxEq","quatAproxEq","q1","q2","poseApproxEq","getRotationNoScaling","mat","trace","S","Transform","matrixOrPosition","rotation","mat4","position","vec3","pose","matrix","other","compareTime","percentOf","start","end","target","totalDuration","targetDuration","interpolate","fraction","duration","MAX_DURATION","DEG2RAD","RAD2DEG","tempLower","tempUpper","tempVec3","tempVec4","tempTransform","tempMatrix","temp2Matrix","FALLBACK_FRAME_ID","CoordinateFrame","id","parent","maxStorageTime","maxCapacity","capacityOverfillPercentage","frame","root","ancestor","time","transform","overfillIndex","removeBeforeTime","startTime","outLower","outUpper","maxDelta","transformCount","latestTime","latestTf","_","tf","greaterThanIndex","lessThanIndex","earliestTime","earliestTf","lteTime","lteTf","gtTime","gtTf","input","srcFrame","copyPose","curSrcFrame","commonAncestor","rootFrame","dstTime","srcTime","lower","upper","lowerTime","lowerTf","upperTime","upperTf","parentFrame","childFrame","curFrame","quaternion","rotationMatrix","euler","eulerFromMatrixUnscaled","quaternionFromEuler","p","invert","frameId","c1","c2","c3","s1","s2","s3","DEFAULT_MAX_CAPACITY_PER_FRAME","AddTransformResult","TransformTree","maxCapacityPerFrame","parentFrameId","updated","cycleDetected","curParentFrame","childFrameId","stamp","candidate","childrenByParentId","current","parentId","rootFrameId","srcFrameId","frames","frameMap","rootFrames","frameEntry","addFrame","depth","displayName","entry","tree","newTree","MISSING_TRANSFORM","missingTransformMessage","renderFrameId","fixedFrameId","dstFrameId","tempPose","updatePose","renderable","transformTree","poseApplied","SceneExtension","extensionId","action","path","draft","colorScheme","backgroundColor","currentTime","message","normalizeTime","normalizeByteArray","byteArray","normalizeInt8Array","int8Array","normalizeFloat32Array","array","normalizeVector3","vector","normalizeVector3s","vectors","normalizeMatrix6","normalizeQuaternion","normalizeColorRGBA","normalizeColorRGBAs","colors","normalizePose","normalizeHeader","header","normalizeTransform","normalizeTransformStamped","normalizeTFMessage","tfMessage","normalizeFrameTransform","frameTransform","normalizeFrameTransforms","frameTransforms","numericTypeToPointFieldType","type","topicIsConvertibleToSchema","supportedSchemaNames","zeroReader","floatTextureColorModes","INVALID_FOXGLOVE_GRID","DEFAULT_COLOR_MAP","DEFAULT_FLAT_COLOR","DEFAULT_MIN_COLOR","DEFAULT_MAX_COLOR","COLOR_MODE_TO_GLSL","COLOR_MAP_TO_GLSL","DEFAULT_SETTINGS","tempRgbaFieldReaders","numericTypeName","getTextureEncoding","tempMinMaxColor","FoxgloveGridRenderable","pickingMaterial","material","foxgloveGrid","cell_stride","fieldReader","typeName","invalidFoxgloveGridError","transparent","colorMapOpacity","minGradientColorLinear","maxGradientColorLinear","minMaxColorValues","minColorValue","maxColorValue","texture","cols","row_stride","rows","sizeChanged","floatMode","createTexture","encoding","valueData","hasTransparency","redReader","greenReader","blueReader","alphaReader","rgbaOffset","alpha","colorConverter","FoxgloveGrid","topicName","messageEvent","normalizeFoxgloveGrid","receiveTime","userSettings","autoSelectColorField","updatedUserSettings","geometry","createGridGeometry","mesh","createMesh","configTopics","handler","entries","node","minBytesPerCell","maxField","byteWidth","numericTypeWidth","size","isFloatType","format","createMaterial","createPickingMaterial","originalMaterial","normalizePackedElementField","numericMin","numericMax","NumericTypeMinMaxValueMap","fieldNameLower","firstField","MAX_DIST","tempVec2","XY_PLANE","Input","canvas","getCamera","_entries","newSize","innerSize","event","dist","touch","parentEl","cs","paddingX","paddingY","borderX","borderY","log","DEFAULT_MESH_UP_AXIS","DEFAULT_COLOR","GLTF_MIME_TYPES","STL_MIME_TYPES","DAE_MIME_TYPES","OBJ_MIME_TYPES","ModelCache","url","opts","reportError","promise","addEdges","err","response","errMsg","buffer","contentType","text","onError","assetUrl","originalUrl","unrewriteUrl","manager","rewriteUrl","gltfLoader","GLTFLoader","gltf","meshUpAxis","bufferGeometry","STLLoader","group","ignoreUpAxis","xml","upAxis","xmlText","daeLoader","ColladaLoader","dae","baseUrl","fixDaeMaterials","objLoader","OBJLoader","fixObjMaterials","dracoLoader","DRACOLoader","responseType","EDGE_LINE_SEGMENTS_NAME","edgeMaterial","edgesToAdd","edgesGeometry","line","toStandard","standard","shininess","maybePhong","PIXEL_WIDTH","WHITE_COLOR","AlwaysPickObject","_obj","NullScene","Picker","gl","scene","renderList","renderItem","objId","hashInt","sprite","sizeAttenuation","renderMaterial","setObjectId","camera","shouldPickObject","hw","pixelRatio","xi","yi","currRenderTarget","currAlpha","maybeRender","vertexShader","objectId","iObjectId","A","ScreenOverlay","createGeometry","opacity","colorUniform","TOPIC_PATH","NodeError","segment","clone","LayerErrors","errorId","errorMessage","prevErrorMessage","topicId","SettingsManager","baseTree","curNode","nextNode","key","nodes","prevNodes","removeNodeAtPath","addNodeAtPath","setLabelAtPath","clearChildren","hasEntry","lastSegment","SharedGeometry","DetailLevel","msaaSamples","capabilities","arrowShaftSubdivisions","lod","arrowHeadSubdivisions","cylinderSubdivisions","sphereSubdivisions","PRECISION_DISTANCE","PRECISION_DEGREES","fieldSize","placeholder","fieldScaleVec3","fieldLineWidth","fieldGradient","CameraStateSettings","category","tempTuple4","getMarkerId","ns","RenderableMarker","hasLifetime","pointsLength","callback","srgb","LineMaterial","parameters","markerHasTransparency","makeStandardMaterial","makeStandardVertexColorMaterial","makeStandardInstancedMaterial","makeLinePrepassMaterial","lineWidth","makeLineMaterial","makeLinePickingMaterial","makePointsMaterial","RenderableLineList","LineSegmentsGeometry","worldUnits","lineOptions","matLinePrepass","LineSegments2","matLine","pickingLineWidth","newMarker","prevMarker","prevPointsLength","linePositions","rgbaData","instanceColorBuffer","tempVec3a","tempVec3b","projectPixel","uv","cameraModel","lerpVec3","multiplyScalar","cameraInfosEqual","normalizeCameraInfo","Dlen","Klen","Rlen","Plen","normalizeRegionOfInterest","scalar","DEFAULT_DISTANCE","DEFAULT_PLANAR_PROJECTION_FACTOR","DEFAULT_WIDTH","DEFAULT_COLOR_STR","CAMERA_MODEL","CameraInfoRenderable","Cameras","cameraInfo","messageTime","prevSettings","newSettings","settingsEqual","dataEqual","errUnk","createLineListMarker","steps","origin","points","horizontalLine","verticalLine","SHAFT_LENGTH","SHAFT_DIAMETER","HEAD_LENGTH","HEAD_DIAMETER","AXIS_LENGTH","RED_COLOR","GREEN_COLOR","BLUE_COLOR","COLOR_WHITE","PI_2","tempMat4","tempVec","Axis","shaftGeometry","createShaftGeometry","standardMaterial","headGeometry","createHeadGeometry","shaft","head","axisIndex","indexX","indexY","indexZ","subdivs","DEFAULT_LABEL_SCALE_FACTOR","SceneSettings","labelScaleFactor","PICKING_LINE_SIZE","DEFAULT_EDITABLE","DEFAULT_AXIS_SCALE","DEFAULT_LINE_WIDTH_PX","DEFAULT_LINE_COLOR_STR","DEFAULT_TF_LABEL_SIZE","FrameAxisRenderable","fixed","tempVecB","tempQuaternion","tempEuler","tempTfPath","FrameAxes","toggleFrameVisibility","frameKeySanitized","setting","showLabel","labelSize","axisScale","lineColor","frameKey","linewidth","createLineGeometry","configTransforms","frameCount","order","tfConfig","buildSettingsFields","axisLength","labelScale","labelOffsetZ","worldPosition","parentRenderable","parentWorldPosition","foreground","visible","scale","parentLine","Line2","getOffset","lineGeometry","LineGeometry","historySizeValue","ageValue","xyzValue","rpyValue","transformTime","formatShortDuration","round","xyzOffsetValue","rpyOffsetValue","vec3IsZero","MS_TENTH_NS","MS_NS","SEC_NS","MIN_NS","HOUR_NS","absDuration","abs","precision","eps","maybeOffset","FOLLOW_TF_PATH","FrameSettings","followTf","followMode","followTfOptions","followFrameId","followTfValue","selectBest","followTfError","followModeOptions","followModeValue","choices","validEntries","choice","LAYER_ID","DEFAULT_SIZE","DEFAULT_DIVISIONS","DEFAULT_LINE_WIDTH","MAX_DIVISIONS","LINE_OPTIONS","GridRenderable","Grids","layer","layerConfig","frameIdOptions","markersEqual","createMarker","lineListId","lineList","divisions","step","halfSize","IMAGE_TOPIC_PATH","CALIBRATION_TOPIC_PATH","IMAGE_TOPIC_UNAVAILABLE","CALIBRATION_TOPIC_UNAVAILABLE","ImageMode","imageTopic","calibrationTopic","imageTopics","calibrationTopics","imageTopicError","calibrationTopicError","transformMarkers","synchronize","smooth","flipHorizontal","flipVertical","NO_CAMERA_INFO_ERR","CREATE_BITMAP_ERR","DEFAULT_IMAGE_WIDTH","ImageRenderable","Images","prevCameraInfoTopic","cameraInfoTopic","image","newRenderable","topicConfig","maybeImageConfig","normalizeRosImage","normalizeRosCompressedImage","normalizeRawImage","normalizeCompressedImage","newCameraInfoTopic","autoSelectCameraInfoTopic","bestCameraInfoOptions","otherCameraInfoOptions","cameraInfoTopicMatches","newCameraInfo","geometrySettingsEqual","materialSettingsEqual","rawFrameId","bitmapData","bitmap","createCanvasTexture","rebuildMaterial","tryCreateMesh","prevTexture","createDataTexture","rawImageToDataTexture","gridX1","gridY1","segmentWidth","segmentHeight","EPS","vertices","uvs","iy","ix","vOffset","uvOffset","imageParts","infoParts","cameraInfoTopics","candidates","rawData","normalizeImageData","DynamicBufferGeometry","usage","attribute","arrayConstructor","itemSize","normalized","itemCount","attributeName","dataConstructor","newAttrib","DEFAULT_POINT_SIZE","DEFAULT_POINT_SHAPE","DEFAULT_POINT_SETTINGS","POINT_CLOUD_REQUIRED_FIELDS","POINT_SHAPE_OPTIONS","pointSettingsNode","messageFields","defaultSettings","pointSize","pointShape","decayTime","pointCloud","pointCloudColorEncoding","createPoints","instancePickingMaterial","FS_POINTCLOUD_SRGB_TO_LINEAR","FS_POINTCLOUD_CIRCLE","pointCloudMaterial","shape","shader","SEARCH","createInstancePickingMaterial","RenderObjectHistory","initial","pointsHistory","expireTime","hadTfError","emptyPose","LASERSCAN_FIELDS","ALL_LASERSCAN_DATATYPES","INVALID_LASERSCAN","VEC3_ZERO","createLaserScanGeometry","LaserScanRenderable","isDecay","range","intensity","laserScan","intensities","ranges","invalidLaserScanError","laserScanMaterial","latestEntry","rangeAttribute","colorAttribute","maxRange","LaserScans","normalizeRosLaserScan","normalizeFoxgloveLaserScan","LaserScanMaterial","LaserScanInstancePickingMaterial","picking","minPointSize","INVALID_CUBE_LIST","INVALID_LINE_LIST","INVALID_LINE_STRIP","INVALID_MARKER_ACTION","INVALID_MARKER_TYPE","INVALID_POINTS_LIST","INVALID_SPHERE_LIST","DEFAULT_NAMESPACE_SETTINGS","MarkersNamespace","namespace","TopicMarkers","expiresIn","clearNamespace","pool","markerId","Markers","topicMarkers","namespaceKey","fieldName","actualPath","nsSettings","markerArray","markerMsg","normalizeMarker","namespaces","prevNsCount","firstMarker","LATE_RENDER_ORDER","FixedSizeMeshMaterial","params","MeasurementTool","_cursorCoords","worldSpaceCursorCoords","state","INVALID_OCCUPANCY_GRID","DEFAULT_UNKNOWN_COLOR","DEFAULT_INVALID_COLOR","DEFAULT_ALPHA","DEFAULT_MIN_COLOR_STR","DEFAULT_MAX_COLOR_STR","DEFAULT_UNKNOWN_COLOR_STR","DEFAULT_INVALID_COLOR_STR","OccupancyGridRenderable","OccupancyGrids","prevTransparent","occupancyGridHasTransparency","newTransparent","occupancyGrid","normalizeOccupancyGrid","configWithDefaults","customFields","paletteFields","invalidOccupancyGridError","resolution","updateTexture","tempUnknownColor","tempInvalidColor","tempMinColor","tempMaxColor","srgbToLinearUint8","paletteColorCached","costmapPalette","mapPalette","rawPalette","color_mode","unsignedValue","palette","createCostmapPalette","createMapPalette","createRawPalette","colorRaw","ALL_POINTCLOUD_DATATYPES","INVALID_POINTCLOUD","tempFieldReaders","PointCloudRenderable","getPose","stixelGeometry","createStixelGeometry","stixels","createStixels","getStride","pointStep","details","reader","getTimestamp","getFrameId","prevIsDecay","stixelMaterial","needsRebuild","stixelsHistory","createStixelMaterial","stixelsEnabledChanged","latestPointsEntry","pointCount","latestPoints","positionAttribute","latestStixelEntry","stixelPositionAttribute","stixelColorAttribute","xReader","yReader","zReader","packedColorReader","minBytesPerPoint","pointFieldTypeName","pointFieldWidth","colorReader","readers","PointClouds","normalizePointCloud","normalizePointCloud2","numSupportedFields","numSupported","normalizePointField","maybeRos","RenderableLineStrip","color1","color2","ii","copyTuple4","from","to","PolygonRenderable","Polygons","polygonStamped","normalizePolygonStamped","linesMarker","createLineStripMarker","normalizePolygon","polygon","HEAD_LENGTH_PROPORTION","tempStart","tempEnd","tempDirection","RenderableArrow","shaftEdgesGeometry","createShaftEdgesGeometry","headEdgesGeometry","createHeadEdgesGeometry","pointA","pointB","distance","headLength","length","shaftLength","shaftDiameter","headDiameter","halfShaftLength","halfHeadLength","positionsAttrib","positions","newCount","newVertices","newPositionsAttrib","RenderableSphere","subdivisions","sphereGeometry","DEFAULT_TYPE","DEFAULT_ARROW_SCALE","DEFAULT_SHOW_COVARIANCE","DEFAULT_COVARIANCE_COLOR","DEFAULT_COVARIANCE_COLOR_STR","TYPE_OPTIONS","PoseRenderable","Poses","poseMessage","normalizePoseStamped","normalizePoseInFrameToPoseStamped","normalizePoseWithCovarianceStamped","isPoseStamped","isPoseInFrame","isPoseWithCovarianceStamped","showCovariance","covarianceColor","axisOrArrowSettingsChanged","arrowMarker","createArrowMarker","arrow","sphereMarker","createSphereMarker","arrowScale","normalizePoseWithCovariance","covariance","DEFAULT_GRADIENT","MISMATCHED_FRAME_ID","DEFAULT_GRADIENT_STR","tempColor3","PoseArrayRenderable","PoseArrays","defaultType","getDefaultType","poseArrayMessage","normalizePoseArray","validateNavPath","normalizeNavPathToPoseArray","normalizePosesInFrameToPoseArray","displayType","poseArray","existingUpdateCount","colorStart","colorEnd","createArrowMarkerFromIndex","lineStripMarker","lineStrip","setObjectPose","navPath","baseFrameId","curFrameId","makeArrowMarker","makeSphereMarker","PublishClickTool","DEFAULT_PUBLISH_SETTINGS","PublishSettings","publish","PrimitiveType","ALL_PRIMITIVE_TYPES","INVALID_DELETION_TYPE","PRIMITIVE_KEYS","TopicEntities","primitivePool","renderables","entity","expiresAt","primitiveType","hasPrimitives","deletion","primitive","PRIMITIVE_DEFAULT_SETTINGS","RenderablePrimitive","MeshStandardMaterialWithInstanceOpacity","tempVec3_2","tempQuat","tempRgba","RenderableArrows","numArrows","newCapacity","arrows","isTransparent","overrideColor","lifetimeNs","RenderableCubes","createCubeGeometry","createEdgesGeometry","numCubes","cubes","cube","cubeGeometry","cubeEdgesGeometry","RenderableCylinders","CylinderOutlineMaterial","CylinderMaterial","CylinderPickingMaterial","cylinders","cylinder","cylinderGeometry","cylinderEdgesGeometry","makeCylinderVertexShader","source","RenderableLines","lines","isSegments","isLoop","getPositions","singleColor","getColors","indices","disposeMaterial","disposeMeshesRecursive","removeLights","lights","maybeLight","light","replaceMaterials","meshChild","embeddedMaterial","disposeStandardMaterial","MODEL_FETCH_FAILED","byteArraysEqual","RenderableModels","prevRenderables","primitivesMatch","getURL","revokeURL","prev","cachedModel","cloneAndPrepareModel","models","originalUpdateCount","prevRenderablesByUrl","prevRenderablesByDataCrc","newRenderables","dataCrc","model1","model2","_url","showOutlines","lineSegments","RenderableSpheres","numInstances","spheres","sphere","RenderableTexts","newLength","oldLength","newLabel","texts","missingColor","COLOR_LENGTH_ERROR_ID","INVALID_POINT_ERROR_ID","RenderableTriangles","triCount","makeTriangleMesh","tris","triMeshIdx","vertChanged","colorChanged","isPointValid","newColor","needsUpdate","pt","CONSTRUCTORS","PrimitivePool","primitives","SCENE_ENTITIES_DEFAULT_SETTINGS","FoxgloveSceneEntities","sceneUpdates","deletionMsg","normalizeSceneEntityDeletion","entityMsg","normalizeSceneEntity","_backgroundColor","topicEntities","kv","normalizeArrowPrimitive","normalizeCubePrimitive","normalizeSpherePrimitive","normalizeCylinderPrimitive","normalizeLinePrimitive","normalizeTriangleListPrimitive","normalizeTextPrimitive","normalizeModelPrimitive","triangles","JOINT_TYPES","parseUrdf","parser","urdf","parseRobot","links","joints","materials","childName","parseLink","parseJoint","parseMaterial","link","parseInertial","parseVisual","parseCollision","mass","inertia","parsePose","parseFloatContent","parseInertia","defaultPose","jointType","parentLink","childLink","calibration","dynamics","limit","mimic","safetyController","parseVec3Attribute","parseFloatAttributeOptional","parseFloatAttribute","joint","parseGeometry","parseColorAttribute","ixx","ixy","ixz","iyy","iyz","izz","radius","filename","attribName","urdfContents","getFileContents","xacroParser","XacroParser","targetPkg","eulerToQuaternion","roll","pitch","yaw","sy","cr","sr","cp","sp","makeCovarianceArray","xDev","yDev","thetaDev","RenderableCube","RenderableCylinder","MESH_FETCH_FAILED","RenderableMeshResource","forceLoad","curUpdateId","errors","TOPIC_NAME","PARAM_KEY","PARAM_NAME","PARAM_DISPLAY_NAME","VALID_URL_ERR","FETCH_URDF_ERR","PARSE_URDF_ERR","VEC3_ONE","XYZ_LABEL","RPY_LABEL","DEFAULT_CUSTOM_SETTINGS","tempQuaternion1","tempQuaternion2","EmbeddedMaterialUsage","supportsPackageUrl","isDesktopApp","UrdfRenderable","childRenderable","Urdfs","transforms","jointName","transformData","isAngular","degrees","robotDescription","msg","names","timestamp","prevTimestamp","i18next","urdfChildren","hasTfError","isValidUrl","res","unknown","hasError","errMessage","isTopicOrParam","baseSettings","settingsPath","loadedRenderable","parsed","robot","createChild","visual","createRenderable","translation","fileFetcher","getFileFetch","orientation","getColor","embedded","createMeshMarker","embeddedMaterialUsage","VALID_PROTOCOLS","str","jointStates","jointChildren","aX","aY","aZ","manualDegrees","jointStateRadians","eulerDegreesToQuaternion","signedAngleAroundAxis","manualPosition","signedDistanceAlongAxis","jointStatePosition","rising","falling","damping","friction","effort","velocity","upperValue","lowerValue","mimicJoint","multiplier","softUpperLimit","softLowerLimit","kPosition","kVelocity","eulerDegrees","targetAxis","rotationAxis","twist","angle","pointFieldDataTypeToNumericType","VelodyneCloudConverter","scan","firstPacketData","maxPoints","cloud","transformer","packet","VelodyneScans","INITIAL_CAPACITY","DynamicInstancedMesh","initialCapacity","defaultColor","colorArray","oldMatrixArray","oldColorArray","newMatrixArray","newColorArray","RenderableCubeList","RenderablePoints","RenderableSphereList","RenderableTextViewFacing","NOT_DIVISIBLE_ERR","EMPTY_ERR","COLORS_MISMATCH_ERR","INVALID_POINT_ERR","EMPTY_FLOAT32","RenderableTriangleList","vertexCount","dataChanged","MarkerPool","DEBUG_PICKING","MAX_SELECTIONS","LIGHT_BACKDROP","DARK_BACKDROP","LAYER_DEFAULT","LAYER_SELECTED","UNIT_Z","DEFAULT_FRAME_IDS","NO_FRAME_SELECTED","FRAME_NOT_FOUND","TF_OVERFLOW","CYCLE_DETECTED","RENDERER_ID","tempSpherical","snapshotInRenderFrame","InstancedLineMaterial","args","Renderer","interfaceMode","renderFrame","fixedFrame","sceneExtension","renderSize","cursorCoords","selections","curSelection","selection","toggleTopicVisibility","extension","actionId","layerId","baseSettingsTree","OrbitControls","samples","newTimeNs","oldTimeNs","movedBack","clearTransforms","resetAllFramesCursor","allFrames","allFramesCursor","cursor","cursorTimeReached","hasAddedMessageEvents","updateHandler","schemaNames","subscription","genericSubscription","schemaName","handlers","topics","layerCount","customLayers","rootsToCounts","rootId","enabled","bgColor","changed","variables","cameraState","targetOffset","phi","theta","curPolarAngle","prevSelected","deselectObject","maybeHasHeader","maybeHasMarkers","maybeHasEntities","maybeHasFrameId","handleMessage","normalizedFrameId","childId","normalizedParentId","normalizedChildId","errorSettingsPath","status","pickedObject","maybeRenderable","instanceIndex","newFollowMode","subscriptions","keys","stats","drawCallsPanel","trianglesPanel","texturesPanel","geometriesPanel","maxDrawCalls","maxTriangles","maxTextures","maxGeometries","update","Stats","_curTime","curRenderer","THREEStats","memory","panel","fg","bg","PR","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","context","PublishRos1Datatypes","PublishRos2Datatypes","makePointMessage","makePoseMessage","makePoseEstimateMessage","SHOW_DEBUG","PANEL_STYLE","PublishClickIcons","useStyles","RendererOverlay","classes","setClickedPosition","selectedRenderables","setSelectedRenderables","selectedRenderable","setSelectedRenderable","rect","debug","publickClickButtonRef","publishMenuExpanded","setPublishMenuExpanded","selectedPublishClickIcon","onLongPressPublish","longPressPublishEvent","useLongPress","useTheme","publishControls","IconButton","ListItemIcon","ListItemText","Paper","useRendererProperty","fallback","setValue","onChange","ThreeDeeRender","initialState","saveState","setConfig","partialConfig","imageMode","configRef","useLatest","setCanvas","setRenderer","rendererRef","newRenderer","setColorScheme","setTimezone","setTopics","setParameters","setVariables","currentFrameMessages","setCurrentFrameMessages","setCurrentTime","didSeek","setDidSeek","sharedPanelState","setSharedPanelState","setAllFrames","renderRef","renderDone","setRenderDone","schemaHandlers","topicHandlers","effectiveRendererFrameId","newCameraState","prevConfig","actionHandler","initialCameraState","updatedCameraState","settingsTree","setSettingsTree","updateSettingsTree","updateConfig","updateSelectedRenderable","customVariable","throttledSave","newConfig","renderState","done","tz","AppSetting","deepParseMessageEvents","topicsToSubscribe","setTopicsToSubscribe","newSubscriptions","addSubscription","rendererSubscription","convertTo","measureActive","setMeasureActive","onStart","onEnd","onClickMeasure","publishActive","setPublishActive","publishTopics","datatypes","latestPublishConfig","onSubmit","onClickPublish","onTogglePerspective","currentState","onKeyDown","isRosDataSource","canPublish","ThemeProvider","messageEvents","maybeLazy","initPanel","crash","ThreeDeeRenderAdapter","boundInitPanel","PanelExtensionAdapter","ThreeDeePanel","Panel","ImagePanel","quatToEuler","DURATION_20_YEARS_SEC","PRIMITIVE_TYPES","_nodeType","_keyPath","sec","nsec","getArrow","filterKeys","isTypicalFilterName"],"sourceRoot":""}