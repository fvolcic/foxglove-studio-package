{"version":3,"file":"7802.899edf5fed892ea2c0db.js","mappings":"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","sources":["webpack:///../../packages/studio-base/src/components/CaptureErrorBoundary.tsx","webpack:///../../packages/studio-base/src/components/ExpandingToolbar.tsx","webpack:///../../packages/studio-base/src/components/PanelContextMenu.tsx","webpack:///../../packages/studio-base/src/hooks/usePanelMousePresence.tsx","webpack:///../../packages/studio-base/src/panels/Image/components/ZoomMenu.tsx","webpack:///../../packages/studio-base/src/panels/Image/components/ImageCanvas.tsx","webpack:///../../packages/studio-base/src/panels/Image/components/ImageEmptyState.tsx","webpack:///../../packages/studio-base/src/panels/Image/components/Toolbar.tsx","webpack:///../../packages/studio-base/src/panels/Image/hooks/normalizeCameraInfo.ts","webpack:///../../packages/studio-base/src/types/Messages.ts","webpack:///../../packages/studio-base/src/panels/Image/lib/normalizeAnnotations.ts","webpack:///../../packages/studio-base/src/panels/Image/lib/normalizeMessage.ts","webpack:///../../packages/studio-base/src/panels/Image/hooks/synchronizedAddMessages.ts","webpack:///../../packages/studio-base/src/panels/Image/hooks/useImagePanelMessages.ts","webpack:///../../packages/studio-base/src/panels/Image/lib/downloadImage.ts","webpack:///../../packages/studio-base/src/panels/Image/settings.ts","webpack:///../../packages/studio-base/src/panels/Image/ImageView.tsx","webpack:///../../packages/studio-base/src/panels/Image/index.tsx","webpack:///../../packages/studio-base/src/panels/Image/lib/util.ts","webpack:///../../packages/studio-base/src/stories/inScreenshotTests.ts","webpack:///../../packages/studio-base/src/util/RpcMainThreadUtils.ts","webpack:///../../packages/studio-base/src/util/WebWorkerManager.ts"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport { Component, PropsWithChildren, ReactNode } from \"react\";\n\ntype Props = {\n  onError: (err: Error) => void;\n};\n\ntype State = {\n  hadError: boolean;\n};\n\n/** An error boundary that calls an onError function when it captures an error */\nexport class CaptureErrorBoundary extends Component<PropsWithChildren<Props>, State> {\n  public override state: State = {\n    hadError: false,\n  };\n\n  public override componentDidCatch(error: Error): void {\n    this.setState({ hadError: true });\n    this.props.onError(error);\n  }\n\n  public override render(): ReactNode {\n    // Avoid rendering children since the children are what caused the error\n    if (this.state.hadError) {\n      return <></>;\n    }\n\n    return this.props.children;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { ArrowMinimize24Filled } from \"@fluentui/react-icons\";\nimport { Paper, IconButton, Tabs, Tab, styled as muiStyled } from \"@mui/material\";\nimport { ReactElement, ReactNode } from \"react\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\n\nconst PANE_HEIGHT = 240;\n\nconst StyledIconButton = muiStyled(IconButton)({\n  fontSize: \"1rem !important\",\n\n  \"& svg:not(.MuiSvgIcon-root)\": {\n    fontSize: \"1rem !important\",\n  },\n});\n\nconst StyledTab = muiStyled(Tab)(({ theme }) => ({\n  minHeight: \"auto\",\n  minWidth: \"auto\",\n  padding: theme.spacing(1, 1.5, 1.125),\n  color: theme.palette.text.secondary,\n\n  \"&.Mui-selected\": {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst StyledTabs = muiStyled(Tabs)({\n  minHeight: \"auto\",\n\n  \".MuiTabs-indicator\": {\n    transform: \"scaleX(0.75)\",\n    height: 2,\n  },\n});\n\nconst Content = muiStyled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  backgroundColor: theme.palette.background.default,\n  width: 280,\n}));\n\nexport function ToolGroup<T>({ children }: { name: T; children: React.ReactElement }): JSX.Element {\n  return children;\n}\n\nexport function ToolGroupFixedSizePane({ children }: { children: ReactNode }): JSX.Element {\n  return (\n    <Stack padding={1} overflowX=\"hidden\" overflowY=\"auto\" style={{ maxHeight: PANE_HEIGHT }}>\n      {children}\n    </Stack>\n  );\n}\n\ntype Props<T extends string> = {\n  checked?: boolean;\n  children: React.ReactElement<typeof ToolGroup>[] | React.ReactElement<typeof ToolGroup>;\n  icon: ReactNode;\n  onSelectTab: (name: T | undefined) => void;\n  selectedTab?: T; // collapse the toolbar if selectedTab is undefined\n  tooltip: string;\n  dataTest?: string;\n};\n\nexport default function ExpandingToolbar<T extends string>({\n  children,\n  checked,\n  icon,\n  onSelectTab,\n  selectedTab,\n  tooltip,\n  dataTest,\n}: Props<T>): JSX.Element {\n  const expanded = selectedTab != undefined;\n\n  if (!expanded) {\n    let selectedTabLocal: T | undefined = selectedTab;\n    // default to the first child's name if no tab is selected\n    React.Children.forEach(children, (child) => {\n      if (selectedTabLocal == undefined) {\n        selectedTabLocal = child.props.name as T;\n      }\n    });\n\n    return (\n      <Paper square={false} elevation={4} style={{ pointerEvents: \"auto\" }}>\n        <StyledIconButton\n          color={checked === true ? \"info\" : \"default\"}\n          title={tooltip}\n          data-testid={`ExpandingToolbar-${tooltip}`}\n          onClick={() => onSelectTab(selectedTabLocal)}\n        >\n          {icon}\n        </StyledIconButton>\n      </Paper>\n    );\n  }\n  let selectedChild: ReactElement | undefined;\n\n  React.Children.forEach(children, (child) => {\n    if (!selectedChild || child.props.name === selectedTab) {\n      selectedChild = child;\n    }\n  });\n\n  const handleChange = (_event: React.SyntheticEvent, value: T | undefined) => {\n    if (value != undefined) {\n      onSelectTab(value);\n    }\n  };\n\n  return (\n    <Paper\n      data-testid={dataTest}\n      square={false}\n      elevation={4}\n      style={{\n        pointerEvents: \"auto\",\n      }}\n    >\n      <Paper>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <StyledTabs textColor=\"inherit\" value={selectedTab} onChange={handleChange}>\n            {React.Children.map(children, (child) => (\n              <StyledTab label={child.props.name} value={child.props.name} />\n            ))}\n          </StyledTabs>\n          <StyledIconButton onClick={() => onSelectTab(undefined)}>\n            <ArrowMinimize24Filled />\n          </StyledIconButton>\n        </Stack>\n      </Paper>\n      <Content>{selectedChild}</Content>\n    </Paper>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Divider, ListItemText, Menu, MenuItem } from \"@mui/material\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { DeepReadonly } from \"ts-essentials\";\n\nimport { PANEL_ROOT_CLASS_NAME } from \"@foxglove/studio-base/components/PanelRoot\";\n\n/**\n * Types of items that can be included in a context menu. Either a clickable item\n * or a divider.\n */\nexport type PanelContextMenuItem =\n  | {\n      /** Type of selectable menu items. */\n      type: \"item\";\n\n      /** True if the item should be shown but disabled. */\n      disabled?: boolean;\n\n      /** Label shown for the menu item. */\n      label: string;\n\n      /** Callback triggered by clicking the item. */\n      onclick: () => void;\n    }\n  | {\n      /** Type of item dividers. */\n      type: \"divider\";\n    };\n\ntype PanelContextMenuProps = {\n  /**\n   * Function that returns a list of menu items, optionally dependent on the x,y\n   * position of the click.\n   */\n  itemsForClickPosition: (position: {\n    x: number;\n    y: number;\n  }) => DeepReadonly<PanelContextMenuItem[]>;\n};\n\n/**\n * This is a convenience component for attaching a context menu to a panel. It\n * must be a child of a Panel component to work.\n */\nexport function PanelContextMenu(props: PanelContextMenuProps): JSX.Element {\n  const { itemsForClickPosition } = props;\n\n  const rootRef = useRef<HTMLDivElement>(ReactNull);\n\n  const [position, setPosition] = useState<undefined | { x: number; y: number }>();\n\n  const handleClose = useCallback(() => setPosition(undefined), []);\n\n  const [items, setItems] = useState<undefined | DeepReadonly<PanelContextMenuItem[]>>();\n\n  const listener = useCallback(\n    (event: MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      setPosition({ x: event.clientX, y: event.clientY });\n      setItems(itemsForClickPosition({ x: event.clientX, y: event.clientY }));\n    },\n    [itemsForClickPosition],\n  );\n\n  useEffect(() => {\n    const element = rootRef.current;\n    if (!element) {\n      return;\n    }\n\n    const parent: HTMLElement | ReactNull = element.closest(`.${PANEL_ROOT_CLASS_NAME}`);\n    parent?.addEventListener(\"contextmenu\", listener);\n\n    return () => {\n      parent?.removeEventListener(\"contextmenu\", listener);\n    };\n  }, [listener]);\n\n  return (\n    <div ref={rootRef} onContextMenu={(event) => event.preventDefault()}>\n      <Menu\n        open={position != undefined}\n        onClose={handleClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={position ? { top: position.y, left: position.x } : undefined}\n        MenuListProps={{\n          dense: true,\n        }}\n      >\n        {(items ?? []).map((item, index) => {\n          if (item.type === \"divider\") {\n            return <Divider variant=\"middle\" key={`divider_${index}`} />;\n          }\n\n          return (\n            <MenuItem\n              onClick={() => {\n                handleClose();\n                item.onclick();\n              }}\n              key={`item_${index}_${item.label}`}\n              disabled={item.disabled}\n            >\n              <ListItemText>{item.label}</ListItemText>\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </div>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { MutableRefObject, useCallback, useEffect, useState } from \"react\";\n\nimport { PANEL_ROOT_CLASS_NAME } from \"@foxglove/studio-base/components/PanelRoot\";\n\n/**\n * Tracks the presence of the mouse in the parent panel.\n *\n * @param ref The element to hide and show on panel hove\n * @returns True if the mouse is currently within the parent panel.\n */\nexport function usePanelMousePresence(ref: MutableRefObject<HTMLElement | ReactNull>): boolean {\n  const [present, setPresent] = useState(false);\n\n  const listener = useCallback(\n    (ev: MouseEvent) => {\n      if (!ref.current) {\n        return;\n      }\n\n      if (ev.type === \"mouseenter\") {\n        setPresent(true);\n      } else {\n        setPresent(false);\n      }\n    },\n    [ref],\n  );\n\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) {\n      return;\n    }\n\n    const parent: HTMLElement | ReactNull = element.closest(`.${PANEL_ROOT_CLASS_NAME}`);\n    parent?.addEventListener(\"mouseenter\", listener);\n    parent?.addEventListener(\"mouseleave\", listener);\n\n    return () => {\n      parent?.removeEventListener(\"mouseenter\", listener);\n      parent?.removeEventListener(\"mouseleave\", listener);\n    };\n  }, [ref, listener]);\n\n  return present;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  Card,\n  IconButton,\n  Menu,\n  MenuItem,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n  styled as muiStyled,\n  Divider,\n} from \"@mui/material\";\nimport { MouseEvent, useCallback, useRef, useState } from \"react\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { usePanelMousePresence } from \"@foxglove/studio-base/hooks/usePanelMousePresence\";\n\nconst StyledCard = muiStyled(Card, {\n  shouldForwardProp: (prop) => prop !== \"visible\",\n})<{\n  visible: boolean;\n}>(({ visible, theme }) => ({\n  position: \"absolute\",\n  bottom: 0,\n  left: 0,\n  zIndex: theme.zIndex.tooltip,\n  margin: theme.spacing(0.75),\n  visibility: visible ? \"visible\" : \"hidden\",\n\n  \".hoverScreenshot &\": {\n    opacity: 1,\n  },\n}));\n\nconst StyledToggleButton = muiStyled(ToggleButton)({ flex: \"auto\", lineHeight: 1 });\nconst StyledToggleButtonGroup = muiStyled(ToggleButtonGroup)({ width: \"100%\" });\n\nexport default function ZoomMenu({\n  zoom,\n  setZoom,\n  setZoomMode,\n  resetPanZoom,\n  open = false,\n  ...props\n}: {\n  zoom: number;\n  setZoom: (zoom: number) => void;\n  setZoomMode: (zoomMode: \"fit\" | \"fill\" | \"other\") => void;\n  resetPanZoom: () => void;\n  open?: boolean;\n}): JSX.Element {\n  const [anchorEl, setAnchorEl] = useState<undefined | HTMLElement>(undefined);\n  const ref = useRef<HTMLDivElement>(ReactNull);\n  const mousePresent = usePanelMousePresence(ref);\n  const menuOpen = Boolean(anchorEl);\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(undefined);\n  };\n\n  const zoomIn = useCallback(() => {\n    setZoom(zoom + 1 * 0.5);\n  }, [setZoom, zoom]);\n\n  const zoomOut = useCallback(() => {\n    setZoom(zoom - 1 * 0.5);\n  }, [setZoom, zoom]);\n\n  const onZoomFit = useCallback(() => {\n    setZoomMode(\"fit\");\n    resetPanZoom();\n    handleClose();\n  }, [resetPanZoom, setZoomMode]);\n\n  const onZoomFill = useCallback(() => {\n    setZoomMode(\"fill\");\n    resetPanZoom();\n    handleClose();\n  }, [resetPanZoom, setZoomMode]);\n\n  const onZoom100 = useCallback(() => {\n    setZoomMode(\"other\");\n    resetPanZoom();\n    handleClose();\n  }, [resetPanZoom, setZoomMode]);\n\n  return (\n    <>\n      <StyledCard\n        variant=\"elevation\"\n        ref={ref}\n        visible={mousePresent || menuOpen || open}\n        {...props}\n      >\n        <IconButton\n          id=\"zoom-button\"\n          aria-controls={menuOpen ? \"zoom-menu\" : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={menuOpen ? \"true\" : undefined}\n          onClick={handleClick}\n        >\n          <SearchIcon fontSize=\"small\" />\n        </IconButton>\n      </StyledCard>\n      <Menu\n        id=\"zoom-menu\"\n        anchorEl={anchorEl}\n        open={menuOpen || open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"zoom-button\",\n          dense: true,\n          disablePadding: true,\n        }}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Stack padding={2} gap={1}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Scroll or use the <br />\n            buttons below to zoom\n          </Typography>\n          <StyledToggleButtonGroup size=\"small\" style={{ width: \"100%\" }}>\n            <ToggleButton value=\"zoom-out\" onClick={zoomOut}>\n              <RemoveIcon fontSize=\"small\" />\n            </ToggleButton>\n            <StyledToggleButton disabled value=\"zoom-value\">\n              {`${Math.round(zoom * 100)}%`}\n            </StyledToggleButton>\n            <ToggleButton value=\"zoom-in\" onClick={zoomIn}>\n              <AddIcon fontSize=\"small\" />\n            </ToggleButton>\n          </StyledToggleButtonGroup>\n        </Stack>\n        <Divider />\n        <MenuItem divider onClick={onZoom100} data-testid=\"hundred-zoom\">\n          Zoom to 100%\n        </MenuItem>\n        <MenuItem divider onClick={onZoomFit} data-testid=\"fit-zoom\">\n          Zoom to fit\n        </MenuItem>\n        <MenuItem onClick={onZoomFill} data-testid=\"fill-zoom\">\n          Zoom to fill\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { useCallback, useLayoutEffect, useRef, useState, useMemo, useReducer } from \"react\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport { useAsync } from \"react-use\";\nimport { makeStyles } from \"tss-react/mui\";\nimport usePanZoom from \"use-pan-and-zoom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport KeyListener from \"@foxglove/studio-base/components/KeyListener\";\nimport { Topic } from \"@foxglove/studio-base/players/types\";\nimport Rpc from \"@foxglove/studio-base/util/Rpc\";\nimport WebWorkerManager from \"@foxglove/studio-base/util/WebWorkerManager\";\n\nimport ZoomMenu from \"./ZoomMenu\";\nimport { renderImage } from \"../lib/renderImage\";\nimport { Config } from \"../types\";\nimport type {\n  Dimensions,\n  PixelData,\n  RawMarkerData,\n  RenderableCanvas,\n  RenderArgs,\n  NormalizedImageMessage,\n} from \"../types\";\n\ntype OnFinishRenderImage = () => void;\n\ntype Props = {\n  topic?: Topic;\n  image?: NormalizedImageMessage;\n  rawMarkerData: RawMarkerData;\n  config: Config;\n  saveConfig: (config: Partial<Config>) => void;\n  onStartRenderImage: () => OnFinishRenderImage;\n  renderInMainThread?: boolean;\n  setActivePixelData: (data: PixelData | undefined) => void;\n};\n\nconst useStyles = makeStyles()((theme) => ({\n  root: {\n    overflow: \"hidden\",\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n  },\n  errorMessage: {\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: theme.palette.error.main,\n  },\n  canvasContainer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n\n    canvas: {\n      width: \"100%\",\n      height: \"100%\",\n      imageRendering: \"pixelated\",\n    },\n  },\n  canvasImageRenderingSmooth: {\n    canvas: {\n      imageRendering: \"auto\",\n    },\n  },\n}));\n\nconst webWorkerManager = new WebWorkerManager(() => {\n  // foxglove-depcheck-used: babel-plugin-transform-import-meta\n  return new Worker(new URL(\"ImageCanvas.worker\", import.meta.url));\n}, 1);\n\ntype RenderImage = (\n  args: RenderArgs & { canvas: RenderableCanvas },\n) => Promise<Dimensions | undefined>;\n\nconst supportsOffscreenCanvas =\n  typeof HTMLCanvasElement.prototype.transferControlToOffscreen === \"function\";\n\nexport function ImageCanvas(props: Props): JSX.Element {\n  const {\n    rawMarkerData,\n    image: normalizedImageMessage,\n    config,\n    saveConfig,\n    onStartRenderImage,\n  } = props;\n  const { mode } = config;\n  const { classes, cx } = useStyles();\n\n  const renderInMainThread = (props.renderInMainThread ?? false) || !supportsOffscreenCanvas;\n\n  const [_, forceUpdate] = useReducer((x: number) => x + 1, 0);\n\n  // generic errors within the panel\n  const [error, setError] = useState<Error | undefined>();\n\n  const [zoomMode, setZoomMode] = useState<Config[\"mode\"]>(mode);\n\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | undefined>();\n  const canvasContainerRef = useRef<HTMLDivElement>(ReactNull);\n\n  // Use a debounce and 0 refresh rate to avoid triggering a resize observation while handling\n  // an existing resize observation.\n  // https://github.com/maslianok/react-resize-detector/issues/45\n  const {\n    width,\n    height,\n    ref: rootRef,\n  } = useResizeDetector({\n    refreshRate: 0,\n    refreshMode: \"debounce\",\n  });\n\n  // The render function dispatches rendering to the main thread or a worker\n  const [doRenderImage, setDoRenderImage] = useState<RenderImage | undefined>(undefined);\n\n  const workerRef = useRef<Rpc | undefined>();\n\n  const [workerId] = useState(() => uuidv4());\n\n  // setup the render function to render in the main thread or in the worker\n  useLayoutEffect(() => {\n    const newCanvas = document.createElement(\"canvas\");\n    setCanvas(newCanvas);\n    canvasContainerRef.current?.appendChild(newCanvas);\n\n    let mounted = true;\n    const id = workerId;\n\n    if (renderInMainThread) {\n      // Potentially performance-sensitive; await can be expensive\n      // eslint-disable-next-line @typescript-eslint/promise-function-async\n      const renderInMain: RenderImage = (args) => {\n        const targetWidth = args.geometry.viewport.width;\n        const targetHeight = args.geometry.viewport.height;\n\n        if (targetWidth !== newCanvas.width) {\n          newCanvas.width = targetWidth;\n        }\n        if (targetHeight !== newCanvas.height) {\n          newCanvas.height = targetHeight;\n        }\n        return renderImage({ ...args, hitmapCanvas: undefined });\n      };\n\n      setDoRenderImage(() => renderInMain);\n    } else {\n      const worker = webWorkerManager.registerWorkerListener(id);\n      workerRef.current = worker;\n\n      // Potentially performance-sensitive; await can be expensive\n      // eslint-disable-next-line @typescript-eslint/promise-function-async\n      const workerRender: RenderImage = (args) => {\n        const { geometry, imageMessage, options, rawMarkerData: rawMarkers } = args;\n\n        return worker.send<Dimensions | undefined, RenderArgs & { id: string }>(\"renderImage\", {\n          geometry,\n          id,\n          imageMessage,\n          options,\n          rawMarkerData: rawMarkers,\n        });\n      };\n\n      const transferredCanvas = newCanvas.transferControlToOffscreen();\n\n      worker\n        .send<void>(\"initialize\", { id, canvas: transferredCanvas }, [transferredCanvas])\n        .then(() => {\n          if (mounted) {\n            setDoRenderImage(() => workerRender);\n          }\n        })\n        .catch((err) => {\n          if (mounted) {\n            console.error(err);\n            setError(err as Error);\n          }\n        });\n    }\n\n    return () => {\n      mounted = false;\n      newCanvas.remove();\n      if (renderInMainThread) {\n        return;\n      }\n\n      workerRef.current = undefined;\n      webWorkerManager.unregisterWorkerListener(id);\n    };\n  }, [renderInMainThread, workerId]);\n\n  const {\n    setPan,\n    setZoom,\n    // panX/panY need to be split apart because the pan object's identity may change on each render,\n    // and we want to avoid unnecessary updates to useEffects/useMemos below\n    pan: { x: panX, y: panY },\n    zoom: scaleValue,\n    setContainer,\n    panZoomHandlers,\n  } = usePanZoom({\n    minZoom: 0.5,\n    initialPan: config.pan,\n    initialZoom: config.zoom,\n  });\n\n  useLayoutEffect(() => {\n    if (canvas) {\n      setContainer(canvas);\n    }\n  }, [canvas, setContainer]);\n\n  const renderOptions = useMemo(() => {\n    return {\n      imageSmoothing: config.smooth,\n      minValue: config.minValue,\n      maxValue: config.maxValue,\n    };\n  }, [config.minValue, config.maxValue, config.smooth]);\n\n  const devicePixelRatio = window.devicePixelRatio;\n  const { error: renderError } = useAsync(async () => {\n    if (!canvas || !doRenderImage) {\n      return;\n    }\n\n    // we haven't detected a width/height yet so avoid rendering\n    if (width == undefined || height == undefined) {\n      return;\n    }\n\n    // can't set width/height of canvas after transferring control to offscreen\n    // so we need to send the width/height to rpc\n    const targetWidth = Math.floor(width * devicePixelRatio);\n    const targetHeight = Math.floor(height * devicePixelRatio);\n\n    const computedViewbox = {\n      x: Math.floor(panX * devicePixelRatio),\n      y: Math.floor(panY * devicePixelRatio),\n      scale: scaleValue,\n    };\n\n    const finishRender = onStartRenderImage();\n    try {\n      return await doRenderImage({\n        canvas,\n        geometry: {\n          flipHorizontal: config.flipHorizontal ?? false,\n          flipVertical: config.flipVertical ?? false,\n          panZoom: computedViewbox,\n          rotation: config.rotation ?? 0,\n          viewport: { width: targetWidth, height: targetHeight },\n          zoomMode: zoomMode ?? \"fit\",\n        },\n        imageMessage: normalizedImageMessage,\n        rawMarkerData,\n        options: renderOptions,\n      });\n    } finally {\n      finishRender();\n    }\n  }, [\n    canvas,\n    config.flipHorizontal,\n    config.flipVertical,\n    config.rotation,\n    devicePixelRatio,\n    doRenderImage,\n    height,\n    normalizedImageMessage,\n    onStartRenderImage,\n    panX,\n    panY,\n    rawMarkerData,\n    renderOptions,\n    scaleValue,\n    width,\n    zoomMode,\n  ]);\n\n  useLayoutEffect(() => {\n    saveConfig({\n      pan: { x: panX, y: panY },\n      zoom: scaleValue,\n    });\n  }, [panX, panY, saveConfig, scaleValue]);\n\n  const onCanvasClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const setActivePixelData = props.setActivePixelData;\n      const boundingRect = event.currentTarget.getBoundingClientRect();\n      const x = event.clientX - boundingRect.x;\n      const y = event.clientY - boundingRect.y;\n      void workerRef.current\n        ?.send<PixelData | undefined>(\"mouseMove\", {\n          id: workerId,\n          x: x * devicePixelRatio,\n          y: y * devicePixelRatio,\n        })\n        .then((r) => {\n          if (r?.marker) {\n            setActivePixelData(r);\n          } else {\n            setActivePixelData(undefined);\n          }\n        });\n    },\n    [devicePixelRatio, props.setActivePixelData, workerId],\n  );\n\n  const resetPanZoom = useCallback(() => {\n    setPan({ x: 0, y: 0 });\n    setZoom(1);\n    // We have to force an update here becase pan & zoom are not state\n    // variables and setting them alone will not trigger a re-render.\n    forceUpdate();\n  }, [setPan, setZoom]);\n\n  const zoomIn = useCallback(() => {\n    setZoom((oldZoom) => oldZoom + 1 * 0.5);\n  }, [setZoom]);\n\n  const zoomOut = useCallback(() => {\n    setZoom((oldZoom) => oldZoom - 1 * 0.5);\n  }, [setZoom]);\n\n  const onZoom100 = useCallback(() => {\n    setZoomMode(\"other\");\n    resetPanZoom();\n  }, [resetPanZoom, setZoomMode]);\n\n  const keyDownHandlers = useMemo(() => {\n    return {\n      \"=\": zoomIn,\n      \"-\": zoomOut,\n      \"0\": onZoom100,\n    };\n  }, [onZoom100, zoomIn, zoomOut]);\n\n  // We have to set tabIndex here so we can be focused and receive keyboard events.\n  return (\n    <div ref={rootRef} className={classes.root} tabIndex={0}>\n      <KeyListener keyDownHandlers={keyDownHandlers} />\n      {error && <div className={classes.errorMessage}>Error: {error.message}</div>}\n      {renderError && <div className={classes.errorMessage}>Error: {renderError.message}</div>}\n      <ZoomMenu\n        zoom={scaleValue}\n        setZoom={setZoom}\n        setZoomMode={setZoomMode}\n        resetPanZoom={resetPanZoom}\n      />\n      <div\n        ref={canvasContainerRef}\n        onClick={onCanvasClick}\n        className={cx(classes.canvasContainer, {\n          [classes.canvasImageRenderingSmooth]: config.smooth === true,\n        })}\n        {...panZoomHandlers}\n      />\n    </div>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Typography } from \"@mui/material\";\n\nimport EmptyState from \"@foxglove/studio-base/components/EmptyState\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\n\ntype Props = {\n  cameraTopic: string;\n  markerTopics: readonly string[];\n  shouldSynchronize: boolean;\n};\n\nexport function ImageEmptyState(props: Props): JSX.Element {\n  const { cameraTopic, markerTopics, shouldSynchronize } = props;\n\n  if (cameraTopic === \"\") {\n    return (\n      <Stack fullHeight fullWidth justifyContent=\"center\" alignItems=\"center\" position=\"absolute\">\n        <EmptyState>Select a topic to view images</EmptyState>\n      </Stack>\n    );\n  }\n  return (\n    <Stack fullHeight fullWidth justifyContent=\"center\" alignItems=\"center\" position=\"absolute\">\n      <EmptyState>\n        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n          Waiting for images {markerTopics.length > 0 && \"and markers\"} on:\n        </Typography>\n        <Typography component=\"code\" variant=\"inherit\" display=\"block\">\n          {cameraTopic}\n        </Typography>\n        {[...markerTopics].sort().map((topic) => (\n          <Typography key={topic} component=\"code\" variant=\"inherit\" display=\"block\">\n            {topic}\n          </Typography>\n        ))}\n        {shouldSynchronize && (\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Synchronization is enabled, so all messages must have the same timestamp.\n          </Typography>\n        )}\n      </EmptyState>\n    </Stack>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Cursor24Regular } from \"@fluentui/react-icons\";\nimport { Typography } from \"@mui/material\";\nimport { ReactElement, useEffect, useRef, useState } from \"react\";\nimport Tree from \"react-json-tree\";\nimport { makeStyles } from \"tss-react/mui\";\n\nimport ExpandingToolbar, {\n  ToolGroup,\n  ToolGroupFixedSizePane,\n} from \"@foxglove/studio-base/components/ExpandingToolbar\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { usePanelMousePresence } from \"@foxglove/studio-base/hooks/usePanelMousePresence\";\nimport { useJsonTreeTheme } from \"@foxglove/studio-base/util/globalConstants\";\n\nimport { PixelData } from \"../types\";\n\nconst useStyles = makeStyles()((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    margin: theme.spacing(0.75),\n    zIndex: theme.zIndex.tooltip,\n  },\n  hidden: {\n    visibility: \"hidden\",\n  },\n}));\n\nenum TabName {\n  SELECTED_POINT = \"Selected Point\",\n}\n\nfunction ObjectPane({ pixelData }: { pixelData: PixelData | undefined }): ReactElement {\n  const jsonTreeTheme = useJsonTreeTheme();\n\n  return (\n    <Stack gap={1}>\n      <div>\n        <Typography variant=\"caption\">Position:</Typography>\n        <Stack direction=\"row\" gap={1}>\n          <Typography color=\"info.main\" variant=\"body2\">\n            X:{pixelData?.position.x}\n          </Typography>\n          <Typography color=\"info.main\" variant=\"body2\">\n            Y:{pixelData?.position.y}\n          </Typography>\n        </Stack>\n      </div>\n      <div>\n        <Typography variant=\"caption\">Color:</Typography>\n        <Stack direction=\"row\" gap={1}>\n          <Typography color=\"info.main\" variant=\"body2\">\n            R:{pixelData?.color.r}\n          </Typography>\n          <Typography color=\"info.main\" variant=\"body2\">\n            G:{pixelData?.color.g}\n          </Typography>\n          <Typography color=\"info.main\" variant=\"body2\">\n            B:{pixelData?.color.b}\n          </Typography>\n          <Typography color=\"info.main\" variant=\"body2\">\n            A:{pixelData?.color.a}\n          </Typography>\n        </Stack>\n      </div>\n      {pixelData?.marker && (\n        <div>\n          <Typography variant=\"caption\">Marker:</Typography>\n          <Tree\n            data={pixelData.marker}\n            hideRoot\n            invertTheme={false}\n            theme={{ ...jsonTreeTheme, tree: { margin: 0 } }}\n          />\n        </div>\n      )}\n    </Stack>\n  );\n}\n\nexport function Toolbar({ pixelData }: { pixelData: PixelData | undefined }): JSX.Element {\n  const ref = useRef<HTMLDivElement>(ReactNull);\n  const { classes, cx } = useStyles();\n  const [selectedTab, setSelectedTab] = useState<TabName | undefined>();\n\n  useEffect(() => {\n    if (pixelData) {\n      setSelectedTab(TabName.SELECTED_POINT);\n    } else {\n      setSelectedTab(undefined);\n    }\n  }, [pixelData]);\n\n  const mousePresent = usePanelMousePresence(ref);\n\n  return (\n    <div\n      ref={ref}\n      className={cx(classes.root, {\n        [classes.hidden]: !mousePresent,\n      })}\n    >\n      <ExpandingToolbar\n        tooltip=\"Inspect objects\"\n        icon={<Cursor24Regular />}\n        selectedTab={selectedTab}\n        onSelectTab={setSelectedTab}\n      >\n        <ToolGroup name={TabName.SELECTED_POINT}>\n          <ToolGroupFixedSizePane>\n            {pixelData ? (\n              <ObjectPane pixelData={pixelData} />\n            ) : (\n              <Typography color=\"secondary.main\">Click an object to select it.</Typography>\n            )}\n          </ToolGroupFixedSizePane>\n        </ToolGroup>\n      </ExpandingToolbar>\n    </div>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { FoxgloveMessages } from \"@foxglove/studio-base/types/FoxgloveMessages\";\nimport { CameraInfo, DistortionModel } from \"@foxglove/studio-base/types/Messages\";\n\nexport const CALIBRATION_DATATYPES = [\n  // ROS well-known\n  \"sensor_msgs/CameraInfo\",\n  \"sensor_msgs/msg/CameraInfo\",\n  // Foxglove schemas (ros and proto variants)\n  \"foxglove_msgs/CameraCalibration\",\n  \"foxglove_msgs/msg/CameraCalibration\",\n  \"foxglove.CameraCalibration\",\n] as const;\n\nexport function normalizeCameraInfo(message: unknown, datatype: string): CameraInfo | undefined {\n  // Cast to the union of all supported datatypes to ensure we handle all cases\n  switch (datatype as (typeof CALIBRATION_DATATYPES)[number]) {\n    case \"sensor_msgs/CameraInfo\":\n    case \"sensor_msgs/msg/CameraInfo\":\n      return message as CameraInfo;\n    case \"foxglove_msgs/CameraCalibration\":\n    case \"foxglove_msgs/msg/CameraCalibration\":\n    case \"foxglove.CameraCalibration\": {\n      const typedMessage = message as FoxgloveMessages[\"foxglove.CameraCalibration\"];\n      // prettier-ignore\n      const mat3Identity = [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1,\n      ];\n      // prettier-ignore\n      const mat4Identity = [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n      ];\n      return {\n        width: typedMessage.width,\n        height: typedMessage.height,\n        distortion_model: (typedMessage.distortion_model ?? \"\") as DistortionModel,\n        D: typedMessage.D ?? [],\n        K: typedMessage.K ?? mat3Identity,\n        R: typedMessage.R ?? mat3Identity,\n        P: typedMessage.P ?? mat4Identity,\n        binning_x: 1,\n        binning_y: 1,\n        roi: { x_offset: 0, y_offset: 0, width: 0, height: 0, do_rectify: false },\n      };\n    }\n  }\n\n  return undefined;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\n// All message types supported by Rviz\n// http://wiki.ros.org/rviz/DisplayTypes\n\nimport { Time } from \"@foxglove/rostime\";\n\nexport type MutablePoint = {\n  x: number;\n  y: number;\n  z: number;\n};\nexport type Point = Readonly<MutablePoint>;\ntype Points = readonly Point[];\n\nexport type MutablePoint2D = {\n  x: number;\n  y: number;\n};\nexport type Point2D = Readonly<MutablePoint2D>;\n\nexport type Header = Readonly<{\n  frame_id: string;\n  stamp: Time;\n  seq: number;\n}>;\n\nexport type StampedMessage = Readonly<{\n  header: Header;\n}>;\n\ntype Duration = Time;\n\ntype MutableOrientation = {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n};\n\nexport type Scale = Readonly<{\n  x: number;\n  y: number;\n  z: number;\n}>;\n\nexport type Color = Readonly<{\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}>;\n\n// NOTE: Deep mutability.\nexport type MutablePose = {\n  position: MutablePoint;\n  orientation: MutableOrientation;\n};\n\nexport type FloatArray = ReadonlyArray<number> | Readonly<Float32Array> | Readonly<Float64Array>;\n\ntype Colors = readonly Color[];\n\n// Markers\nexport type BaseMarker = Readonly<\n  StampedMessage & {\n    ns: string;\n    id: string | number;\n    action: 0 | 1 | 2 | 3;\n    pose: MutablePose;\n    scale: Scale;\n    color?: Color;\n    colors?: Colors;\n    lifetime?: Time;\n    frame_locked: boolean;\n    points?: Point[];\n    text?: string;\n    mesh_resource?: string;\n    mesh_use_embedded_materials?: boolean;\n    primitive?: string;\n    metadata?: Readonly<Record<string, unknown>>;\n  }\n>;\n\ntype MultiPointMarker = Readonly<{\n  points: Points;\n  colors?: Colors;\n}>;\n\ntype ArrowSize = Readonly<{\n  shaftLength?: number;\n  shaftWidth: number;\n  headLength: number;\n  headWidth: number;\n}>;\n\nexport type ArrowMarker = Readonly<\n  BaseMarker & {\n    type: 0;\n    points?: Points;\n    // used for hard-coded arrows with geometry_msgs/PoseStamped\n    // not part of the original ros message\n    size?: ArrowSize;\n  }\n>;\n\nexport type CubeMarker = Readonly<\n  BaseMarker & {\n    type: 1;\n  }\n>;\n\nexport type SphereMarker = Readonly<\n  BaseMarker & {\n    type: 2;\n  }\n>;\n\nexport type CylinderMarker = Readonly<\n  BaseMarker & {\n    type: 3;\n  }\n>;\n\nexport type LineStripMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      closed?: boolean;\n      type: 4;\n    }\n>;\n\nexport type LineListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 5;\n    }\n>;\n\nexport type CubeListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 6;\n    }\n>;\n\nexport type SphereListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 7;\n    }\n>;\n\nexport type PointsMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 8;\n    }\n>;\n\nexport type TextMarker = Readonly<\n  BaseMarker & {\n    type: 9;\n    text: string;\n  }\n>;\n\nexport type MeshMarker = Readonly<\n  BaseMarker & {\n    type: 10;\n    mesh_resource: string;\n    mesh_use_embedded_materials: boolean;\n  }\n>;\n\nexport type TriangleListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 11;\n    }\n>;\n\nexport type InstancedLineListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 108;\n      metadataByIndex?: readonly Readonly<unknown[]>[];\n      scaleInvariant?: boolean;\n    }\n>;\n\nexport type ColorMarker = Readonly<\n  BaseMarker & {\n    type: 110;\n  }\n>;\n\nexport type Marker =\n  | ArrowMarker\n  | CubeMarker\n  | CubeListMarker\n  | SphereMarker\n  | SphereListMarker\n  | CylinderMarker\n  | LineStripMarker\n  | LineListMarker\n  | CubeListMarker\n  | PointsMarker\n  | TextMarker\n  | MeshMarker\n  | TriangleListMarker\n  | MeshMarker\n  | InstancedLineListMarker\n  | ColorMarker;\n\nexport type MarkerArray = Readonly<{\n  markers: readonly Marker[];\n}>;\n\nexport type PointField = Readonly<{\n  name: string;\n  offset: number;\n  datatype: number;\n  count: number;\n}>;\n\n// ts-prune-ignore-next\nexport type PointCloud2 = StampedMessage & {\n  fields: readonly PointField[];\n  height: number;\n  width: number;\n  is_bigendian: boolean;\n  point_step: number; // Length of point in bytes\n  row_step: number; // Length of row in bytes\n  data: Uint8Array;\n  is_dense: boolean | number;\n  // this is appended by scene builder\n  type: 102;\n  // this is appended by scene builder\n  pose?: MutablePose;\n};\n\nexport type Image = Readonly<\n  StampedMessage & {\n    height: number;\n    width: number;\n    encoding: string;\n    is_bigendian: boolean;\n    step: number;\n    data: Uint8Array;\n  }\n>;\n\nexport type CompressedImage = Readonly<\n  StampedMessage & {\n    format: string;\n    data: Uint8Array;\n  }\n>;\n\nexport type VelodynePacket = Readonly<{\n  stamp: Time;\n  data: Uint8Array; // 1206 bytes\n}>;\n\nexport type VelodyneScan = Readonly<\n  StampedMessage & {\n    packets: VelodynePacket[];\n  }\n>;\n\nexport enum ImageMarkerType {\n  CIRCLE = 0,\n  LINE_STRIP = 1,\n  LINE_LIST = 2,\n  POLYGON = 3,\n  POINTS = 4,\n  // TEXT is not part of visualization_msgs/ImageMarker, but we include it to\n  // support existing frameworks that have extended this message definition\n  TEXT = 5,\n}\n\nexport enum ImageMarkerAction {\n  ADD = 0,\n  REMOVE = 1,\n}\n\nexport type ImageMarker = Readonly<{\n  header: Header;\n  ns: string;\n  id: number;\n  type: ImageMarkerType;\n  action: ImageMarkerAction;\n  position: Point;\n  scale: number;\n  outline_color: Color;\n  filled: boolean;\n  fill_color: Color;\n  lifetime: Duration;\n  points: Points;\n  outline_colors: Colors;\n  // `text` is not part of visualization_msgs/ImageMarker, but we include it to\n  // support existing frameworks that have extended this message definition\n  text?: { data: string };\n}>;\n\nexport type ImageMarkerArray = Readonly<{\n  markers: ImageMarker[];\n}>;\n\ntype Roi = Readonly<{\n  x_offset: number;\n  y_offset: number;\n  height: number;\n  width: number;\n  do_rectify: boolean;\n}>;\n\n// Empty string indicates no distortion model\nexport type DistortionModel = \"plumb_bob\" | \"rational_polynomial\" | \"\";\n\nexport type CameraInfo = Readonly<{\n  width: number;\n  height: number;\n  binning_x: number;\n  binning_y: number;\n  roi: Roi;\n  distortion_model: DistortionModel | string;\n  D: FloatArray;\n  K: FloatArray;\n  P: FloatArray;\n  R: FloatArray;\n}>;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { fromNanoSec } from \"@foxglove/rostime\";\nimport { ImageAnnotations, PointsAnnotationType } from \"@foxglove/schemas\";\nimport {\n  ImageMarker,\n  ImageMarkerArray,\n  ImageMarkerType,\n} from \"@foxglove/studio-base/types/Messages\";\nimport { mightActuallyBePartial } from \"@foxglove/studio-base/util/mightActuallyBePartial\";\n\nimport type { Annotation, PointsAnnotation } from \"../types\";\n\n// Supported annotation schema names\nexport const ANNOTATION_DATATYPES = [\n  // Single marker\n  \"visualization_msgs/ImageMarker\",\n  \"visualization_msgs/msg/ImageMarker\",\n  \"ros.visualization_msgs.ImageMarker\",\n  // Marker arrays\n  \"foxglove_msgs/ImageMarkerArray\",\n  \"foxglove_msgs/msg/ImageMarkerArray\",\n  \"studio_msgs/ImageMarkerArray\",\n  \"studio_msgs/msg/ImageMarkerArray\",\n  \"visualization_msgs/ImageMarkerArray\",\n  \"visualization_msgs/msg/ImageMarkerArray\",\n  \"ros.visualization_msgs.ImageMarkerArray\",\n  // backwards compat with webviz\n  \"webviz_msgs/ImageMarkerArray\",\n  // foxglove\n  \"foxglove_msgs/ImageAnnotations\",\n  \"foxglove_msgs/msg/ImageAnnotations\",\n  \"foxglove.ImageAnnotations\",\n] as const;\n\nfunction foxglovePointTypeToStyle(\n  type: PointsAnnotationType,\n): PointsAnnotation[\"style\"] | undefined {\n  switch (type) {\n    case PointsAnnotationType.UNKNOWN:\n    case PointsAnnotationType.POINTS:\n      return \"points\";\n    case PointsAnnotationType.LINE_LOOP:\n      return \"polygon\";\n    case PointsAnnotationType.LINE_STRIP:\n      return \"line_strip\";\n    case PointsAnnotationType.LINE_LIST:\n      return \"line_list\";\n  }\n  return undefined;\n}\n\nfunction normalizeFoxgloveImageAnnotations(\n  message: Partial<ImageAnnotations>,\n): Annotation[] | undefined {\n  if (!message.circles && !message.points) {\n    return undefined;\n  }\n\n  if (message.circles?.length === 0 && message.points?.length === 0) {\n    return undefined;\n  }\n\n  const annotations: Annotation[] = [];\n\n  for (const circle of message.circles ?? []) {\n    const stamp =\n      typeof circle.timestamp === \"bigint\" ? fromNanoSec(circle.timestamp) : circle.timestamp;\n    annotations.push({\n      type: \"circle\",\n      stamp,\n      fillColor: circle.fill_color,\n      outlineColor: circle.outline_color,\n      radius: circle.diameter / 2.0,\n      thickness: circle.thickness,\n      position: circle.position,\n    });\n  }\n  for (const point of message.points ?? []) {\n    const style = foxglovePointTypeToStyle(point.type);\n    if (!style) {\n      continue;\n    }\n    const stamp =\n      typeof point.timestamp === \"bigint\" ? fromNanoSec(point.timestamp) : point.timestamp;\n    annotations.push({\n      type: \"points\",\n      stamp,\n      style,\n      points: point.points,\n      outlineColors: point.outline_colors,\n      outlineColor: mightActuallyBePartial(point).outline_color ?? { r: 1, g: 1, b: 1, a: 1 },\n      thickness: mightActuallyBePartial(point).thickness ?? 1,\n      fillColor: point.fill_color,\n    });\n  }\n\n  return annotations;\n}\n\nfunction normalizeRosImageMarkerArray(message: ImageMarkerArray): Annotation[] | undefined {\n  return filterMap(message.markers, (marker) => normalizeRosImageMarker(marker));\n}\n\nfunction imageMarkerTypeToStyle(\n  type:\n    | ImageMarkerType.LINE_LIST\n    | ImageMarkerType.LINE_STRIP\n    | ImageMarkerType.POINTS\n    | ImageMarkerType.POLYGON,\n): PointsAnnotation[\"style\"] {\n  switch (type) {\n    case ImageMarkerType.LINE_LIST:\n      return \"line_list\";\n    case ImageMarkerType.LINE_STRIP:\n      return \"line_strip\";\n    case ImageMarkerType.POINTS:\n      return \"points\";\n    case ImageMarkerType.POLYGON:\n      return \"polygon\";\n  }\n}\n\nfunction normalizeRosImageMarker(message: ImageMarker): Annotation | undefined {\n  switch (message.type) {\n    case ImageMarkerType.CIRCLE:\n      return {\n        type: \"circle\",\n        stamp: message.header.stamp,\n        fillColor: message.filled ? message.fill_color : undefined,\n        outlineColor: message.outline_color,\n        radius: message.scale,\n        thickness: 1.0,\n        position: message.position,\n      };\n    case ImageMarkerType.TEXT:\n      return {\n        type: \"text\",\n        stamp: message.header.stamp,\n        position: message.position,\n        text: message.text?.data ?? \"\",\n        textColor: message.outline_color,\n        backgroundColor: message.filled ? message.fill_color : undefined,\n        fontSize: message.scale * 12,\n        padding: 4 * message.scale,\n      };\n    case ImageMarkerType.POINTS:\n      return {\n        type: \"points\",\n        stamp: message.header.stamp,\n        style: \"points\",\n        points: message.points,\n        outlineColors: message.outline_colors,\n        outlineColor: message.outline_color,\n        thickness: message.scale,\n        fillColor: message.fill_color,\n      };\n    case ImageMarkerType.LINE_LIST:\n    case ImageMarkerType.LINE_STRIP:\n    case ImageMarkerType.POLYGON: {\n      const style = imageMarkerTypeToStyle(message.type);\n      return {\n        type: \"points\",\n        stamp: message.header.stamp,\n        style,\n        points: message.points,\n        outlineColors: message.outline_colors,\n        outlineColor: message.outline_color,\n        thickness: message.scale,\n        fillColor: message.filled ? message.fill_color : undefined,\n      };\n    }\n  }\n\n  return undefined;\n}\n\nfunction toPOD(message: unknown): unknown {\n  return \"toJSON\" in (message as object)\n    ? (message as { toJSON: () => unknown }).toJSON()\n    : message;\n}\n\nfunction normalizeAnnotations(\n  maybeLazyMessage: unknown,\n  datatype: string,\n): Annotation[] | undefined {\n  // The panel may send the annotations to a web worker, for this we need\n  const message = toPOD(maybeLazyMessage);\n\n  // Cast to the union of all supported datatypes to ensure we handle all cases\n  switch (datatype as (typeof ANNOTATION_DATATYPES)[number]) {\n    // single marker\n    case \"visualization_msgs/ImageMarker\":\n    case \"visualization_msgs/msg/ImageMarker\":\n    case \"ros.visualization_msgs.ImageMarker\": {\n      const normalized = normalizeRosImageMarker(message as ImageMarker);\n      if (normalized) {\n        return [normalized];\n      }\n      break;\n    }\n    // marker arrays\n    case \"foxglove_msgs/ImageMarkerArray\":\n    case \"foxglove_msgs/msg/ImageMarkerArray\":\n    case \"studio_msgs/ImageMarkerArray\":\n    case \"studio_msgs/msg/ImageMarkerArray\":\n    case \"visualization_msgs/ImageMarkerArray\":\n    case \"visualization_msgs/msg/ImageMarkerArray\":\n    case \"ros.visualization_msgs.ImageMarkerArray\":\n      return normalizeRosImageMarkerArray(message as ImageMarkerArray);\n    // backwards compat with webviz\n    case \"webviz_msgs/ImageMarkerArray\":\n      break;\n    // foxglove\n    case \"foxglove_msgs/ImageAnnotations\":\n    case \"foxglove_msgs/msg/ImageAnnotations\":\n    case \"foxglove.ImageAnnotations\": {\n      return normalizeFoxgloveImageAnnotations(message as ImageAnnotations);\n    }\n  }\n\n  return undefined;\n}\n\nexport { normalizeAnnotations };\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { fromNanoSec } from \"@foxglove/rostime\";\nimport { FoxgloveMessages } from \"@foxglove/studio-base/types/FoxgloveMessages\";\nimport { CompressedImage, Image } from \"@foxglove/studio-base/types/Messages\";\n\nimport { NormalizedImageMessage } from \"../types\";\n\n// Supported datatypes for normalization\nexport const NORMALIZABLE_IMAGE_DATATYPES = [\n  \"sensor_msgs/Image\",\n  \"sensor_msgs/msg/Image\",\n  \"ros.sensor_msgs.Image\",\n  \"sensor_msgs/CompressedImage\",\n  \"sensor_msgs/msg/CompressedImage\",\n  \"ros.sensor_msgs.CompressedImage\",\n  \"foxglove.RawImage\",\n  \"foxglove.CompressedImage\",\n  \"foxglove_msgs/RawImage\",\n  \"foxglove_msgs/msg/RawImage\",\n  \"foxglove_msgs/CompressedImage\",\n  \"foxglove_msgs/msg/CompressedImage\",\n] as const;\n\n/**\n * Convert a message based on datatype to a NormalizedImageMessage\n * A NormalizedImageMessage defines consistent semantics across different frameworks\n */\nexport function normalizeImageMessage(\n  message: unknown,\n  datatype: string,\n): NormalizedImageMessage | undefined {\n  // Cast to the union of all supported datatypes to ensure we handle all cases\n  switch (datatype as (typeof NORMALIZABLE_IMAGE_DATATYPES)[number]) {\n    case \"foxglove_msgs/RawImage\":\n    case \"foxglove_msgs/msg/RawImage\":\n    case \"foxglove.RawImage\": {\n      const typedMessage = message as FoxgloveMessages[\"foxglove.RawImage\"];\n      const stamp =\n        typeof typedMessage.timestamp === \"bigint\"\n          ? fromNanoSec(typedMessage.timestamp)\n          : typedMessage.timestamp;\n      return {\n        type: \"raw\",\n        stamp,\n        width: typedMessage.width,\n        height: typedMessage.height,\n        is_bigendian: false,\n        encoding: typedMessage.encoding,\n        step: typedMessage.step,\n        data: typedMessage.data,\n      };\n    }\n    case \"sensor_msgs/Image\":\n    case \"sensor_msgs/msg/Image\":\n    case \"ros.sensor_msgs.Image\": {\n      const typedMessage = message as Image;\n      return {\n        type: \"raw\",\n        stamp: typedMessage.header.stamp,\n        width: typedMessage.width,\n        height: typedMessage.height,\n        is_bigendian: typedMessage.is_bigendian,\n        encoding: typedMessage.encoding,\n        step: typedMessage.step,\n        data: typedMessage.data,\n      };\n    }\n    case \"sensor_msgs/CompressedImage\":\n    case \"sensor_msgs/msg/CompressedImage\":\n    case \"ros.sensor_msgs.CompressedImage\": {\n      const typedMessage = message as CompressedImage;\n      return {\n        type: \"compressed\",\n        stamp: typedMessage.header.stamp,\n        format: typedMessage.format,\n        data: typedMessage.data,\n      };\n    }\n    case \"foxglove_msgs/CompressedImage\":\n    case \"foxglove_msgs/msg/CompressedImage\":\n    case \"foxglove.CompressedImage\": {\n      const typedMessage = message as FoxgloveMessages[\"foxglove.CompressedImage\"];\n      const stamp =\n        typeof typedMessage.timestamp === \"bigint\"\n          ? fromNanoSec(typedMessage.timestamp)\n          : typedMessage.timestamp;\n      return {\n        type: \"compressed\",\n        stamp,\n        format: typedMessage.format,\n        data: typedMessage.data,\n      };\n    }\n  }\n\n  return undefined;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { AVLTree } from \"@foxglove/avl\";\nimport { Time, isLessThan, toNanoSec, fromNanoSec } from \"@foxglove/rostime\";\nimport { MessageEvent } from \"@foxglove/studio\";\n\nimport { normalizeCameraInfo } from \"./normalizeCameraInfo\";\nimport { ImagePanelState, SynchronizationItem } from \"./useImagePanelMessages\";\nimport { normalizeAnnotations } from \"../lib/normalizeAnnotations\";\nimport { normalizeImageMessage } from \"../lib/normalizeMessage\";\nimport { Annotation } from \"../types\";\n\nexport function synchronizedAddMessages(\n  state: Pick<ImagePanelState, \"imageTopic\" | \"cameraInfoTopic\" | \"annotationTopics\" | \"tree\">,\n  messageEvents: readonly MessageEvent<unknown>[],\n): Partial<ImagePanelState> {\n  let newState: Partial<ImagePanelState> | undefined;\n\n  for (const event of messageEvents) {\n    const cameraInfo =\n      event.topic === state.cameraInfoTopic\n        ? normalizeCameraInfo(event.message, event.schemaName)\n        : undefined;\n\n    const image =\n      event.topic === state.imageTopic\n        ? normalizeImageMessage(event.message, event.schemaName)\n        : undefined;\n    const annotations = normalizeAnnotations(event.message, event.schemaName);\n    if (!cameraInfo && !image && !annotations) {\n      continue;\n    }\n\n    if (cameraInfo) {\n      newState ??= {};\n      newState.cameraInfo = cameraInfo;\n    }\n\n    if (image) {\n      // Update the image at the stamp time\n      const item = state.tree.get(image.stamp);\n      if (item) {\n        item.image = image;\n      } else {\n        state.tree.set(image.stamp, {\n          image,\n          annotationsByTopic: new Map(),\n        });\n      }\n    }\n\n    if (annotations) {\n      // Group annotations by timestamp, then update the annotations by topic at each stamp\n      const groups = new Map<bigint, Annotation[]>();\n      for (const annotation of annotations) {\n        const key = toNanoSec(annotation.stamp);\n        const arr = groups.get(key);\n        if (arr) {\n          arr.push(annotation);\n        } else {\n          groups.set(key, [annotation]);\n        }\n      }\n\n      for (const [stampNsec, group] of groups) {\n        const stamp = fromNanoSec(stampNsec);\n        let item = state.tree.get(stamp);\n        if (!item) {\n          item = {\n            image: undefined,\n            annotationsByTopic: new Map(),\n          };\n          state.tree.set(stamp, item);\n        }\n        item.annotationsByTopic.set(event.topic, group);\n      }\n    }\n\n    const validEntry = findSynchronizedSetAndRemoveOlderItems(state.tree, state.annotationTopics);\n    if (validEntry) {\n      newState ??= {};\n      newState.image = validEntry[1].image;\n      newState.annotationsByTopic = validEntry[1].annotationsByTopic;\n    }\n  }\n\n  // with no valid entry, we keep the previous state\n  return newState ?? state;\n}\n\n/** Find the newest entry where we have everything synchronized */\nexport function findSynchronizedSetAndRemoveOlderItems(\n  tree: AVLTree<Time, SynchronizationItem>,\n  annotationTopics: readonly string[],\n): [Time, SynchronizationItem] | undefined {\n  let validEntry: [Time, SynchronizationItem] | undefined = undefined;\n  for (const entry of tree.entries()) {\n    const messageState = entry[1];\n    // If we have an image and all the messages for annotation topics then we have a synchronized set.\n    if (messageState.image && messageState.annotationsByTopic.size === annotationTopics.length) {\n      validEntry = entry;\n    }\n  }\n\n  if (validEntry) {\n    // We've got a set of synchronized messages, remove any older items from the tree\n    let minKey = tree.minKey();\n    while (minKey && isLessThan(minKey, validEntry[0])) {\n      tree.shift();\n      minKey = tree.minKey();\n    }\n  }\n\n  return validEntry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { useState } from \"react\";\nimport { useUpdateEffect } from \"react-use\";\nimport { createStore, useStore } from \"zustand\";\n\nimport { AVLTree } from \"@foxglove/avl\";\nimport { useShallowMemo } from \"@foxglove/hooks\";\nimport { Time, compare as compareTime } from \"@foxglove/rostime\";\nimport { MessageEvent, RenderState } from \"@foxglove/studio\";\nimport { CameraInfo } from \"@foxglove/studio-base/types/Messages\";\n\nimport { normalizeCameraInfo } from \"./normalizeCameraInfo\";\nimport { synchronizedAddMessages } from \"./synchronizedAddMessages\";\nimport { normalizeAnnotations } from \"../lib/normalizeAnnotations\";\nimport { normalizeImageMessage } from \"../lib/normalizeMessage\";\nimport { Annotation, NormalizedImageMessage } from \"../types\";\n\ntype UseImagePanelMessagesParams = {\n  imageTopic: string;\n  cameraInfoTopic: string | undefined;\n  annotationTopics: string[];\n  synchronize: boolean;\n};\n\nexport type ImagePanelState = UseImagePanelMessagesParams & {\n  image?: NormalizedImageMessage;\n  cameraInfo?: CameraInfo;\n  annotationsByTopic: ReadonlyMap<string, Annotation[]>;\n  tree: AVLTree<Time, SynchronizationItem>;\n\n  actions: {\n    setCurrentFrame(currentFrame: NonNullable<RenderState[\"currentFrame\"]>): void;\n    clear(): void;\n    setParams(newParams: UseImagePanelMessagesParams): void;\n  };\n};\n\ntype PublicState = {\n  image: NormalizedImageMessage | undefined;\n  cameraInfo: CameraInfo | undefined;\n  annotations: readonly Annotation[];\n  actions: ImagePanelState[\"actions\"];\n};\n\nconst selectPublicState = (state: ImagePanelState): PublicState => ({\n  actions: state.actions,\n  image: state.image,\n  cameraInfo: state.cameraInfo,\n  annotations: ([] as Annotation[]).concat(...state.annotationsByTopic.values()),\n});\n\nexport type SynchronizationItem = {\n  image?: NormalizedImageMessage;\n  annotationsByTopic: Map<string, Annotation[]>;\n};\n\nfunction addMessages(\n  state: ImagePanelState,\n  messageEvents: readonly MessageEvent<unknown>[],\n): Partial<ImagePanelState> {\n  if (state.synchronize && state.annotationTopics.length > 0) {\n    return synchronizedAddMessages(state, messageEvents);\n  }\n\n  let newState:\n    | (Pick<ImagePanelState, \"image\" | \"cameraInfo\"> & {\n        annotationsByTopic: Map<string, Annotation[]>;\n      })\n    | undefined;\n  for (const event of messageEvents) {\n    // We have to check `event.topic` in all cases because we may occasionally receive messages on\n    // topics that we have already unsubscribed from with context.subscribe().\n    // <https://github.com/foxglove/studio/issues/5479>\n    const normalizedCameraInfo =\n      event.topic === state.cameraInfoTopic\n        ? normalizeCameraInfo(event.message, event.schemaName)\n        : undefined;\n    const normalizedImage =\n      event.topic === state.imageTopic\n        ? normalizeImageMessage(event.message, event.schemaName)\n        : undefined;\n    const normalizedAnnotations = state.annotationTopics.includes(event.topic)\n      ? normalizeAnnotations(event.message, event.schemaName)\n      : undefined;\n    if (!normalizedCameraInfo && !normalizedImage && !normalizedAnnotations) {\n      continue;\n    }\n\n    if (!newState) {\n      newState = {\n        image: state.image,\n        cameraInfo: state.cameraInfo,\n        annotationsByTopic: new Map(state.annotationsByTopic),\n      };\n    }\n\n    if (normalizedCameraInfo) {\n      newState.cameraInfo = normalizedCameraInfo;\n    }\n    if (normalizedImage) {\n      newState.image = normalizedImage;\n    }\n    if (normalizedAnnotations) {\n      newState.annotationsByTopic.set(event.topic, normalizedAnnotations);\n    }\n  }\n\n  return newState ?? state;\n}\n\nexport function useImagePanelMessages(params: UseImagePanelMessagesParams): PublicState {\n  const [store] = useState(() =>\n    createStore<ImagePanelState>((set) => ({\n      imageTopic: params.imageTopic,\n      cameraInfoTopic: params.cameraInfoTopic,\n      annotationTopics: params.annotationTopics,\n      synchronize: params.synchronize,\n\n      image: undefined,\n      cameraInfo: undefined,\n      annotationsByTopic: new Map(),\n      tree: new AVLTree(compareTime),\n\n      actions: {\n        setParams(newParams: UseImagePanelMessagesParams) {\n          set((prevState) => {\n            // Optimize for the common case of toggling annotations on/off while the synchronize\n            // setting is disabled. As long as the image and camera info topics are the same, we can\n            // keep the existing image and need only rebuild the annotationsByTopic.\n            const synchronizeDisabled = !prevState.synchronize && !newParams.synchronize;\n            if (\n              synchronizeDisabled &&\n              prevState.imageTopic === newParams.imageTopic &&\n              prevState.cameraInfoTopic === newParams.cameraInfoTopic\n            ) {\n              if (prevState.annotationTopics === newParams.annotationTopics) {\n                return newParams;\n              }\n\n              const newAnnotationsByTopic = new Map<string, Annotation[]>();\n              for (const topic of newParams.annotationTopics) {\n                const annotation = prevState.annotationsByTopic.get(topic);\n                if (annotation) {\n                  newAnnotationsByTopic.set(topic, annotation);\n                }\n              }\n              return {\n                annotationsByTopic: newAnnotationsByTopic,\n                ...newParams,\n              };\n            }\n\n            // Otherwise, simply clear the image and any annotations when settings\n            // change. More precise/intelligent/complicated logic could be written to keep the image\n            // hidden if a new annotation is enabled but a synchronized set is not available, and\n            // similarly to show the image if an annotation being disabled results in a synchronized\n            // set being available. For now, we just clear everything.\n            return {\n              image: undefined,\n              cameraInfo: undefined,\n              annotationsByTopic: new Map(),\n              tree: new AVLTree(compareTime),\n\n              ...newParams,\n            };\n          });\n        },\n        clear() {\n          set({\n            image: undefined,\n            cameraInfo: undefined,\n            annotationsByTopic: new Map(),\n            tree: new AVLTree(compareTime),\n          });\n        },\n        setCurrentFrame(currentFrame) {\n          set((old) => addMessages(old, currentFrame));\n        },\n      },\n    })),\n  );\n\n  const memoizedParams = useShallowMemo(params);\n  useUpdateEffect(() => {\n    store.getState().actions.setParams(memoizedParams);\n  }, [memoizedParams]);\n\n  return useStore(store, selectPublicState);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Topic } from \"@foxglove/studio-base/players/types\";\nimport { downloadFiles } from \"@foxglove/studio-base/util/download\";\n\nimport { renderImage } from \"./renderImage\";\nimport { Config, NormalizedImageMessage } from \"../types\";\n\nexport async function downloadImage(\n  normalizedImageMessage: NormalizedImageMessage,\n  topic: Topic,\n  config: Config,\n): Promise<void> {\n  // re-render the image onto a new canvas to download the original image\n  const tempCanvas = document.createElement(\"canvas\");\n  const dimensions = await renderImage({\n    canvas: tempCanvas,\n    hitmapCanvas: undefined,\n    geometry: {\n      flipHorizontal: config.flipHorizontal ?? false,\n      flipVertical: config.flipVertical ?? false,\n      panZoom: { x: 0, y: 0, scale: 1 },\n      rotation: config.rotation ?? 0,\n      viewport: { width: 1, height: 1 }, // We'll just use the intrinsic image dimensions.\n      zoomMode: \"other\",\n    },\n    imageMessage: normalizedImageMessage,\n    rawMarkerData: { markers: [], transformMarkers: false },\n    options: {\n      imageSmoothing: config.smooth,\n      minValue: config.minValue,\n      maxValue: config.maxValue,\n      resizeCanvas: true,\n    },\n  });\n\n  if (!dimensions) {\n    return;\n  }\n\n  // context: https://stackoverflow.com/questions/37135417/download-canvas-as-png-in-fabric-js-giving-network-error\n  // read the canvas data as an image (png)\n  return await new Promise((resolve) =>\n    tempCanvas.toBlob((blob) => {\n      if (!blob) {\n        throw new Error(\n          `Failed to create an image from ${dimensions.width}x${dimensions.height} canvas`,\n        );\n      }\n      // name the image the same name as the topic\n      // note: the / characters in the file name will be replaced with _ by the browser\n      // remove any leading / so the image name doesn't start with _\n      const topicName = topic.name.replace(/^\\/+/, \"\");\n      const stamp = normalizedImageMessage.stamp;\n      const fileName = `${topicName}-${stamp.sec}-${stamp.nsec}`;\n      downloadFiles([{ blob, fileName }]);\n      resolve();\n    }, \"image/png\"),\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Immutable } from \"immer\";\nimport { chain } from \"lodash\";\nimport memoizeWeak from \"memoize-weak\";\n\nimport { SettingsTreeNode, SettingsTreeNodes } from \"@foxglove/studio\";\nimport { Topic } from \"@foxglove/studio-base/players/types\";\n\nimport { Config } from \"./types\";\n\nfunction buildMarkersNode(\n  markerTopics: readonly string[],\n  enabledMarkerTopics: readonly string[],\n  relatedMarkerTopics: readonly string[],\n): SettingsTreeNode {\n  const markerFields = chain(markerTopics)\n    .sort()\n    .partition((topic) => relatedMarkerTopics.includes(topic))\n    .thru((topics) => topics.flat())\n    .map((topic) => [topic, { label: topic, visible: enabledMarkerTopics.includes(topic) }])\n    .fromPairs()\n    .value();\n\n  return {\n    label: \"Markers\",\n    children: markerFields,\n  };\n}\n\nconst memoBuildMarkersNode = memoizeWeak(buildMarkersNode);\n\nexport function buildSettingsTree({\n  config,\n  imageTopics,\n  markerTopics,\n  enabledMarkerTopics,\n  relatedMarkerTopics,\n}: {\n  config: Immutable<Config>;\n  imageTopics: readonly Topic[];\n  markerTopics: readonly string[];\n  enabledMarkerTopics: readonly string[];\n  relatedMarkerTopics: readonly string[];\n}): SettingsTreeNodes {\n  return {\n    general: {\n      label: \"General\",\n      fields: {\n        cameraTopic: {\n          label: \"Topic\",\n          input: \"select\",\n          value: config.cameraTopic,\n          options: imageTopics.map((topic) => ({ label: topic.name, value: topic.name })),\n        },\n        transformMarkers: {\n          input: \"boolean\",\n          label: \"Transform markers\",\n          value: config.transformMarkers,\n          help: config.transformMarkers\n            ? \"Markers are being transformed by Foxglove Studio based on the camera model. Click to turn it off.\"\n            : `Markers can be transformed by Foxglove Studio based on the camera model. Click to turn it on.`,\n        },\n        synchronize: {\n          input: \"boolean\",\n          label: \"Synchronize timestamps\",\n          value: config.synchronize,\n        },\n        smooth: {\n          input: \"boolean\",\n          label: \"Bilinear smoothing\",\n          value: config.smooth ?? false,\n        },\n        flipHorizontal: {\n          input: \"boolean\",\n          label: \"Flip horizontal\",\n          value: config.flipHorizontal ?? false,\n        },\n        flipVertical: {\n          input: \"boolean\",\n          label: \"Flip vertical\",\n          value: config.flipVertical ?? false,\n        },\n        rotation: {\n          input: \"select\",\n          label: \"Rotation\",\n          value: config.rotation ?? 0,\n          options: [\n            { label: \"0°\", value: 0 },\n            { label: \"90°\", value: 90 },\n            { label: \"180°\", value: 180 },\n            { label: \"270°\", value: 270 },\n          ],\n        },\n        minValue: {\n          input: \"number\",\n          label: \"Min (depth images)\",\n          placeholder: \"0\",\n          value: config.minValue,\n        },\n        maxValue: {\n          input: \"number\",\n          label: \"Max (depth images)\",\n          placeholder: \"10000\",\n          value: config.maxValue,\n        },\n      },\n    },\n    markers: memoBuildMarkersNode(markerTopics, enabledMarkerTopics, relatedMarkerTopics),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { Typography } from \"@mui/material\";\nimport produce from \"immer\";\nimport { difference, keyBy, set, union } from \"lodash\";\nimport { useEffect, useState, useMemo, useCallback, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { makeStyles } from \"tss-react/mui\";\n\nimport { PanelExtensionContext, SettingsTreeAction, Subscription, Topic } from \"@foxglove/studio\";\nimport {\n  PanelContextMenu,\n  PanelContextMenuItem,\n} from \"@foxglove/studio-base/components/PanelContextMenu\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport inScreenshotTests from \"@foxglove/studio-base/stories/inScreenshotTests\";\nimport ThemeProvider from \"@foxglove/studio-base/theme/ThemeProvider\";\nimport { CameraInfo } from \"@foxglove/studio-base/types/Messages\";\nimport { mightActuallyBePartial } from \"@foxglove/studio-base/util/mightActuallyBePartial\";\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\nimport { formatTimeRaw } from \"@foxglove/studio-base/util/time\";\n\nimport { ImageCanvas, ImageEmptyState, Toolbar } from \"./components\";\nimport { useImagePanelMessages } from \"./hooks\";\nimport { CALIBRATION_DATATYPES } from \"./hooks/normalizeCameraInfo\";\nimport { downloadImage } from \"./lib/downloadImage\";\nimport { ANNOTATION_DATATYPES } from \"./lib/normalizeAnnotations\";\nimport { NORMALIZABLE_IMAGE_DATATYPES } from \"./lib/normalizeMessage\";\nimport { getRelatedMarkerTopics, getMarkerOptions, getCameraInfoTopic } from \"./lib/util\";\nimport { buildSettingsTree } from \"./settings\";\nimport type { Config, PixelData, RawMarkerData } from \"./types\";\n\ntype Props = {\n  context: PanelExtensionContext;\n};\n\nconst SUPPORTED_IMAGE_SCHEMAS = new Set(NORMALIZABLE_IMAGE_DATATYPES);\nconst SUPPORTED_ANNOTATION_SCHEMAS = new Set(ANNOTATION_DATATYPES);\nconst SUPPORTED_CALIBRATION_SCHEMAS = new Set(CALIBRATION_DATATYPES);\n\nfunction topicIsConvertibleToSchema(topic: Topic, supportedSchemaNames: Set<string>): boolean {\n  return (\n    supportedSchemaNames.has(topic.schemaName) ||\n    (topic.convertibleTo?.some((name) => supportedSchemaNames.has(name)) ?? false)\n  );\n}\n\nfunction pickConvertToSchema(topic: Topic, supportedSchemaNames: Set<string>): string | undefined {\n  if (supportedSchemaNames.has(topic.schemaName)) {\n    // This topic schema is supported, don't use a conversion\n    return undefined;\n  }\n  return topic.convertibleTo?.find((name) => supportedSchemaNames.has(name));\n}\n\nconst useStyles = makeStyles<void, \"timestamp\">()((theme, _params, classes) => ({\n  timestamp: {\n    position: \"absolute\",\n    margin: theme.spacing(0.5),\n    right: 0,\n    bottom: 0,\n    fontFamily: fonts.MONOSPACE,\n    color: theme.palette.common.white,\n    zIndex: theme.zIndex.appBar - 1,\n    transition: \"opacity 0.1s ease-in-out\",\n    padding: theme.spacing(0.25, 0.5),\n    userSelect: \"all\",\n    textShadow: `0 1px 4px ${theme.palette.common.black}`,\n\n    \"@media (hover: hover)\": {\n      // only hide if the current device supports hover\n      opacity: 0,\n    },\n  },\n  root: {\n    [`&:hover .${classes.timestamp}`]: {\n      opacity: 1,\n    },\n  },\n  screenshotTest: {\n    [`.${classes.timestamp}`]: {\n      opacity: 1,\n    },\n  },\n}));\n\nexport function ImageView({ context }: Props): JSX.Element {\n  const { classes, cx } = useStyles();\n  const [renderDone, setRenderDone] = useState(() => () => {});\n  const [topics, setTopics] = useState<readonly Topic[]>([]);\n  const [config, setConfig] = useState<Config>(() => {\n    const initialConfig = context.initialState as DeepPartial<Config> & {\n      enabledMarkerTopics?: Config[\"enabledMarkerTopics\"];\n    };\n    return {\n      ...defaultConfig,\n      ...initialConfig,\n      pan: {\n        x: initialConfig.pan?.x ?? 0,\n        y: initialConfig.pan?.y ?? 0,\n      },\n    };\n  });\n\n  const { cameraTopic, enabledMarkerTopics, transformMarkers } = config;\n  const topicsByTopicName = useMemo(() => keyBy(topics, ({ name }) => name), [topics]);\n  const cameraTopicFullObject = useMemo(\n    () => topicsByTopicName[cameraTopic],\n    [cameraTopic, topicsByTopicName],\n  );\n  const [activePixelData, setActivePixelData] = useState<PixelData | undefined>();\n\n  const shouldSynchronize = config.synchronize && enabledMarkerTopics.length > 0;\n\n  const cameraInfoTopic = useMemo(() => getCameraInfoTopic(cameraTopic), [cameraTopic]);\n  const cameraInfoTopicFullObject = useMemo(\n    () => (cameraInfoTopic != undefined ? topicsByTopicName[cameraInfoTopic] : undefined),\n    [cameraInfoTopic, topicsByTopicName],\n  );\n\n  const enabledMarkerTopicsFullObjects = useMemo(\n    () => enabledMarkerTopics.map((topic) => topicsByTopicName[topic]),\n    [enabledMarkerTopics, topicsByTopicName],\n  );\n\n  const subscriptions = useMemo<Subscription[]>(() => {\n    const subs: Subscription[] = [];\n    if (\n      cameraTopicFullObject &&\n      topicIsConvertibleToSchema(cameraTopicFullObject, SUPPORTED_IMAGE_SCHEMAS)\n    ) {\n      subs.push({\n        topic: cameraTopicFullObject.name,\n        preload: false,\n        convertTo: pickConvertToSchema(cameraTopicFullObject, SUPPORTED_IMAGE_SCHEMAS),\n      });\n    }\n    if (\n      cameraInfoTopicFullObject &&\n      topicIsConvertibleToSchema(cameraInfoTopicFullObject, SUPPORTED_CALIBRATION_SCHEMAS)\n    ) {\n      subs.push({\n        topic: cameraInfoTopicFullObject.name,\n        preload: false,\n        convertTo: pickConvertToSchema(cameraInfoTopicFullObject, SUPPORTED_CALIBRATION_SCHEMAS),\n      });\n    }\n    for (const topic of enabledMarkerTopicsFullObjects) {\n      if (topic && topicIsConvertibleToSchema(topic, SUPPORTED_ANNOTATION_SCHEMAS)) {\n        subs.push({\n          topic: topic.name,\n          preload: false,\n          convertTo: pickConvertToSchema(topic, SUPPORTED_ANNOTATION_SCHEMAS),\n        });\n      }\n    }\n    return subs;\n  }, [cameraTopicFullObject, cameraInfoTopicFullObject, enabledMarkerTopicsFullObjects]);\n\n  const [colorScheme, setColorScheme] = useState<\"dark\" | \"light\">(\"light\");\n\n  useEffect(() => {\n    context.saveState(config);\n    context.setDefaultPanelTitle(config.cameraTopic === \"\" ? undefined : config.cameraTopic);\n  }, [config, context]);\n  useEffect(() => {\n    context.watch(\"topics\");\n    context.watch(\"didSeek\");\n    context.watch(\"currentFrame\");\n    context.watch(\"colorScheme\");\n  }, [context]);\n  useEffect(() => {\n    context.subscribe(subscriptions);\n  }, [context, subscriptions]);\n\n  const { image, annotations, cameraInfo, actions } = useImagePanelMessages({\n    imageTopic: cameraTopic,\n    cameraInfoTopic,\n    annotationTopics: enabledMarkerTopics,\n    synchronize: shouldSynchronize,\n  });\n\n  useEffect(() => {\n    context.onRender = (renderState, done) => {\n      ReactDOM.unstable_batchedUpdates(() => {\n        if (renderState.topics) {\n          setTopics(renderState.topics);\n        }\n        setRenderDone(() => done);\n        if (renderState.didSeek ?? false) {\n          actions.clear();\n        }\n        if (renderState.currentFrame) {\n          actions.setCurrentFrame(renderState.currentFrame);\n        }\n        if (renderState.colorScheme) {\n          setColorScheme(renderState.colorScheme);\n        }\n      });\n    };\n  }, [context, actions]);\n\n  const imageTopics = useMemo(() => {\n    return topics.filter((topic) => topicIsConvertibleToSchema(topic, SUPPORTED_IMAGE_SCHEMAS));\n  }, [topics]);\n\n  // If no cameraTopic is selected, automatically select the first available image topic\n  useEffect(() => {\n    const maybeCameraTopic = mightActuallyBePartial(config).cameraTopic;\n    if (maybeCameraTopic == undefined || maybeCameraTopic === \"\") {\n      const firstImageTopic = imageTopics[0];\n      if (firstImageTopic && firstImageTopic.name !== \"\") {\n        setConfig((oldConfig) => ({ ...oldConfig, cameraTopic: firstImageTopic.name }));\n      }\n    }\n  }, [imageTopics, config]);\n\n  const onChangeCameraTopic = useCallback(\n    (newCameraTopic: string) => {\n      const newAvailableMarkerTopics = getMarkerOptions(\n        newCameraTopic,\n        topics,\n        ANNOTATION_DATATYPES,\n      );\n\n      const newEnabledMarkerTopics = getRelatedMarkerTopics(\n        enabledMarkerTopics,\n        newAvailableMarkerTopics,\n      );\n\n      setConfig((oldConfig) => ({\n        ...oldConfig,\n        cameraTopic: newCameraTopic,\n        enabledMarkerTopics: newEnabledMarkerTopics,\n      }));\n    },\n    [enabledMarkerTopics, topics],\n  );\n\n  const relatedMarkerTopics = useMemo(\n    () => getMarkerOptions(config.cameraTopic, topics, ANNOTATION_DATATYPES),\n    [config.cameraTopic, topics],\n  );\n\n  const actionHandler = useCallback(\n    (action: SettingsTreeAction) => {\n      if (action.action !== \"update\") {\n        return;\n      }\n\n      const { path, value } = action.payload;\n      setConfig(\n        produce<Config>((draft) => {\n          if (path[0] === \"markers\") {\n            const markerTopic = path[1] ?? \"unknown\";\n            const newValue =\n              value === true\n                ? union(draft.enabledMarkerTopics, [markerTopic])\n                : difference(draft.enabledMarkerTopics, [markerTopic]);\n            draft.enabledMarkerTopics = newValue;\n          } else {\n            set(draft, path.slice(1), value);\n          }\n        }),\n      );\n\n      if (path[1] === \"cameraTopic\" && typeof value === \"string\") {\n        onChangeCameraTopic(value);\n      }\n    },\n    [onChangeCameraTopic],\n  );\n\n  const markerTopics = useMemo(() => {\n    return topics\n      .filter((topic) => topicIsConvertibleToSchema(topic, SUPPORTED_ANNOTATION_SCHEMAS))\n      .map((topic) => topic.name);\n  }, [topics]);\n\n  useEffect(() => {\n    context.updatePanelSettingsEditor({\n      actionHandler,\n      nodes: buildSettingsTree({\n        config,\n        imageTopics,\n        markerTopics,\n        enabledMarkerTopics,\n        relatedMarkerTopics,\n      }),\n    });\n  }, [\n    actionHandler,\n    config,\n    enabledMarkerTopics,\n    imageTopics,\n    markerTopics,\n    relatedMarkerTopics,\n    context,\n  ]);\n\n  const lastImageMessageRef = useRef(image);\n\n  useEffect(() => {\n    lastImageMessageRef.current = image;\n  }, [image]);\n\n  const doDownloadImage = useCallback(async () => {\n    if (!lastImageMessageRef.current) {\n      return;\n    }\n\n    const topic = imageTopics.find((top) => top.name === cameraTopic);\n    if (!topic) {\n      return;\n    }\n\n    await downloadImage(lastImageMessageRef.current, topic, config);\n  }, [imageTopics, cameraTopic, config]);\n\n  const contextMenuItemsForClickPosition = useCallback<() => PanelContextMenuItem[]>(\n    () => [\n      { type: \"item\", label: \"Download image\", onclick: doDownloadImage },\n      { type: \"divider\" },\n      {\n        type: \"item\",\n        label: \"Flip horizontal\",\n        onclick: () =>\n          setConfig((oldConfig) => ({\n            ...oldConfig,\n            flipHorizontal: !(oldConfig.flipHorizontal ?? false),\n          })),\n      },\n      {\n        type: \"item\",\n        label: \"Flip vertical\",\n        onclick: () =>\n          setConfig((oldConfig) => ({\n            ...oldConfig,\n            flipVertical: !(oldConfig.flipVertical ?? false),\n          })),\n      },\n      {\n        type: \"item\",\n        label: \"Rotate 90°\",\n        onclick: () =>\n          setConfig((oldConfig) => ({\n            ...oldConfig,\n            rotation: ((oldConfig.rotation ?? 0) + 90) % 360,\n          })),\n      },\n    ],\n    [doDownloadImage],\n  );\n\n  const rawMarkerData: RawMarkerData = useMemo(() => {\n    return {\n      markers: annotations,\n      transformMarkers,\n      // Convert to plain object before sending to web worker\n      cameraInfo:\n        (cameraInfo as { toJSON?: () => CameraInfo } | undefined)?.toJSON?.() ?? cameraInfo,\n    };\n  }, [annotations, cameraInfo, transformMarkers]);\n  const saveConfigWithMerging = useCallback(\n    (newConfig: Partial<Config>) => setConfig((oldConfig) => ({ ...oldConfig, ...newConfig })),\n    [setConfig],\n  );\n\n  // Indicate render is complete - the effect runs after the dom is updated. It would be more\n  // correct to call this inside the render callback from ImageCanvas (using onStartRenderImage).\n  // However, the complexity of managing new frames (and new renderDone functions) coming in before\n  // the old one finishes is pretty high and this is good enough for now.\n  useEffect(() => {\n    renderDone();\n  }, [renderDone]);\n  const onStartRenderImage = useCallback(() => {\n    return () => {};\n  }, []);\n\n  return (\n    <ThemeProvider isDark={colorScheme === \"dark\"}>\n      <Stack\n        flex=\"auto\"\n        overflow=\"hidden\"\n        fullWidth\n        fullHeight\n        position=\"relative\"\n        className={cx(classes.root, {\n          [classes.screenshotTest]: inScreenshotTests(),\n        })}\n      >\n        <PanelContextMenu itemsForClickPosition={contextMenuItemsForClickPosition} />\n        <Stack fullWidth fullHeight>\n          {/* Always render the ImageCanvas because it's expensive to unmount and start up. */}\n          <ImageCanvas\n            topic={cameraTopicFullObject}\n            image={image}\n            rawMarkerData={rawMarkerData}\n            config={config}\n            saveConfig={saveConfigWithMerging}\n            onStartRenderImage={onStartRenderImage}\n            setActivePixelData={setActivePixelData}\n          />\n          {/* If rendered, EmptyState will hide the always-present ImageCanvas */}\n          {!image && (\n            <ImageEmptyState\n              cameraTopic={cameraTopic}\n              markerTopics={enabledMarkerTopics}\n              shouldSynchronize={shouldSynchronize}\n            />\n          )}\n          {image && (\n            <Typography\n              className={classes.timestamp}\n              fontFamily={fonts.MONOSPACE}\n              variant=\"caption\"\n              align=\"right\"\n            >\n              {formatTimeRaw(image.stamp)}\n            </Typography>\n          )}\n        </Stack>\n        <Toolbar pixelData={activePixelData} />\n      </Stack>\n    </ThemeProvider>\n  );\n}\n\nexport const defaultConfig: Config = {\n  cameraTopic: \"\",\n  enabledMarkerTopics: [],\n  mode: \"fit\",\n  pan: { x: 0, y: 0 },\n  rotation: 0,\n  synchronize: false,\n  transformMarkers: false,\n  zoom: 1,\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { StrictMode, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { useCrash } from \"@foxglove/hooks\";\nimport { PanelExtensionContext } from \"@foxglove/studio\";\nimport { CaptureErrorBoundary } from \"@foxglove/studio-base/components/CaptureErrorBoundary\";\nimport Panel from \"@foxglove/studio-base/components/Panel\";\nimport { PanelExtensionAdapter } from \"@foxglove/studio-base/components/PanelExtensionAdapter\";\nimport { SaveConfig } from \"@foxglove/studio-base/types/panels\";\n\nimport { defaultConfig, ImageView } from \"./ImageView\";\nimport { Config } from \"./types\";\n\nfunction initPanel(crash: ReturnType<typeof useCrash>, context: PanelExtensionContext) {\n  ReactDOM.render(\n    <StrictMode>\n      <CaptureErrorBoundary onError={crash}>\n        <ImageView context={context} />\n      </CaptureErrorBoundary>\n    </StrictMode>,\n    context.panelElement,\n  );\n  return () => {\n    ReactDOM.unmountComponentAtNode(context.panelElement);\n  };\n}\n\ntype Props = {\n  config: Config;\n  saveConfig: SaveConfig<Config>;\n};\n\nfunction ImagePanelAdapter(props: Props) {\n  const crash = useCrash();\n  const boundInitPanel = useMemo(() => initPanel.bind(undefined, crash), [crash]);\n\n  return (\n    <PanelExtensionAdapter\n      config={props.config}\n      saveConfig={props.saveConfig}\n      initPanel={boundInitPanel}\n    />\n  );\n}\n\nImagePanelAdapter.panelType = \"ImageViewPanel\";\nImagePanelAdapter.defaultConfig = defaultConfig;\n\nexport default Panel(ImagePanelAdapter);\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { CameraInfo, PinholeCameraModel } from \"@foxglove/den/image\";\nimport { Topic } from \"@foxglove/studio-base/players/types\";\n\nimport { Dimensions, MarkerData, RawMarkerData, ZoomMode } from \"../types\";\n\nexport function calculateZoomScale(\n  bitmap: Dimensions,\n  viewport: Dimensions,\n  zoomMode: ZoomMode,\n): number {\n  let imageViewportScale = viewport.width / bitmap.width;\n\n  const calculatedHeight = bitmap.height * imageViewportScale;\n\n  // if we are trying to fit and the height exeeds viewport, we need to scale on height\n  if (zoomMode === \"fit\" && calculatedHeight > viewport.height) {\n    imageViewportScale = viewport.height / bitmap.height;\n  }\n\n  // if we are trying to fill and the height doesn't fill viewport, we need to scale on height\n  if (zoomMode === \"fill\" && calculatedHeight < viewport.height) {\n    imageViewportScale = viewport.height / bitmap.height;\n  }\n\n  if (zoomMode === \"other\") {\n    imageViewportScale = 1;\n  }\n\n  return imageViewportScale;\n}\n\nfunction toPaddedHexString(n: number, length: number) {\n  const str = n.toString(16);\n  return \"0\".repeat(length - str.length) + str;\n}\n\n/**\n * Converts an integer index into a hex color value. Used for encoding\n * hitmaps.\n */\nexport function indexToIDColor(index: number): string {\n  return toPaddedHexString(index, 6);\n}\n\n/**\n * Converts an encoded color back to an index value. Used for decoding hitmaps.\n */\nexport function idColorToIndex(id: Uint8ClampedArray): number | undefined {\n  // Treat pixels without max alpha as empty to avoid blended regions.\n  if (id.length < 4 || id[3] !== 255) {\n    return undefined;\n  }\n\n  return (id[0]! << 16) + (id[1]! << 8) + id[2]!;\n}\n\nexport function getMarkerOptions(\n  imageTopic: string,\n  topics: readonly Topic[],\n  imageMarkerDatatypes: readonly string[],\n): string[] {\n  const results = [];\n  const cameraNamespace = getCameraNamespace(imageTopic);\n  for (const { name, schemaName } of topics) {\n    if (\n      cameraNamespace &&\n      name.startsWith(cameraNamespace + \"/\") &&\n      schemaName != undefined &&\n      imageMarkerDatatypes.includes(schemaName)\n    ) {\n      results.push(name);\n    }\n  }\n  return results.sort();\n}\n\nexport function getRelatedMarkerTopics(\n  enabledMarkerTopics: string[],\n  availableMarkerTopics: string[],\n): string[] {\n  return availableMarkerTopics.filter((topic) => {\n    return enabledMarkerTopics.some((enabledTopic) =>\n      // Splitting with a non-empty string will always produce an array of at least 1 element\n      // \"If the string and separator are both empty strings, an empty array is returned\"\n      topic.endsWith(enabledTopic.split(\"/\").pop()!),\n    );\n  });\n}\n\n// get the sensor_msgs/CameraInfo topic associated with an image topic\nexport function getCameraInfoTopic(imageTopic: string): string | undefined {\n  const cameraNamespace = getCameraNamespace(imageTopic);\n  if (cameraNamespace) {\n    return `${cameraNamespace}/camera_info`;\n  }\n  return undefined;\n}\n\nexport function getCameraNamespace(topicName: string): string | undefined {\n  let splitTopic = topicName.split(\"/\");\n  // Remove the last part of the selected topic to get the camera namespace.\n  splitTopic.pop();\n  splitTopic = splitTopic.filter((topicPart) => topicPart !== \"old\");\n\n  // Since there is a leading slash in the topicName, splitTopic will always have at least one empty string to start.\n  // If we can't find the namespace, return undefined.\n  return splitTopic.length > 1 ? splitTopic.join(\"/\") : undefined;\n}\n\nexport function buildMarkerData(rawMarkerData: RawMarkerData): MarkerData | undefined {\n  const { markers, transformMarkers, cameraInfo } = rawMarkerData;\n  if (markers.length === 0) {\n    return {\n      markers,\n      cameraModel: undefined,\n      originalHeight: undefined,\n      originalWidth: undefined,\n    };\n  }\n  let cameraModel;\n  if (transformMarkers) {\n    if (!cameraInfo) {\n      return undefined;\n    }\n    cameraModel = new PinholeCameraModel(cameraInfo as CameraInfo);\n  }\n\n  return {\n    markers,\n    cameraModel,\n    originalWidth: cameraInfo?.width,\n    originalHeight: cameraInfo?.height,\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport isChromatic from \"chromatic/isChromatic\";\n\nexport default function inScreenshotTests(): boolean {\n  // Integration tests and screenshot tests are not always in a headless Chrome, so need to check for a custom user\n  // agent.\n  return navigator.userAgent.includes(\"PuppeteerTestingChrome\") || isChromatic();\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport sendNotification, {\n  DetailsType,\n  NotificationSeverity,\n  NotificationType,\n} from \"@foxglove/studio-base/util/sendNotification\";\n\nimport Rpc from \"./Rpc\";\n\n// This function should be called inside the parent thread; it sets up receiving a message from the worker thread and\n// calling sendNotification.\nexport function setupReceiveReportErrorHandler(rpc: Rpc): void {\n  rpc.receive(\n    \"sendNotification\",\n    ({\n      message,\n      details,\n      type,\n      severity,\n    }: {\n      message: string;\n      details: DetailsType;\n      type: NotificationType;\n      severity: NotificationSeverity;\n    }) => {\n      sendNotification(message, details, type, severity);\n    },\n  );\n}\n\nexport function setupMainThreadRpc(rpc: Rpc): void {\n  setupReceiveReportErrorHandler(rpc);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport findIndex from \"lodash/findIndex\";\nimport sortBy from \"lodash/sortBy\";\n\nimport Rpc, { Channel } from \"@foxglove/studio-base/util/Rpc\";\nimport { setupMainThreadRpc } from \"@foxglove/studio-base/util/RpcMainThreadUtils\";\n\n// This file provides a convenient way to set up and tear down workers as needed. It will create only a single worker\n// of each class, and terminate the worker when all listeners are unregistered.\n\ntype WorkerListenerState<W> = { rpc: Rpc; worker: W; listenerIds: string[] };\n\nexport default class WebWorkerManager<W extends Channel> {\n  private _createWorker: () => W;\n  private _maxWorkerCount: number;\n  private _workerStates: (WorkerListenerState<W> | undefined)[];\n  private _allListeners: Set<string>;\n\n  public constructor(createWorker: () => W, maxWorkerCount: number) {\n    this._createWorker = createWorker;\n    this._maxWorkerCount = maxWorkerCount;\n    this._workerStates = new Array(maxWorkerCount);\n    this._allListeners = new Set();\n  }\n\n  public testing_workerCount(): number {\n    return this._workerStates.filter(Boolean).length;\n  }\n\n  public testing_getWorkerState(id: string): WorkerListenerState<W> | undefined {\n    return this._workerStates.find((workerState) => workerState?.listenerIds.includes(id));\n  }\n\n  public registerWorkerListener(id: string): Rpc {\n    if (this._allListeners.has(id)) {\n      throw new Error(\"cannot register the same listener id twice\");\n    }\n    this._allListeners.add(id);\n\n    const currentWorkerCount = this._workerStates.filter(Boolean).length;\n    if (currentWorkerCount < this._maxWorkerCount) {\n      const worker = this._createWorker();\n      const rpc = new Rpc(worker);\n      setupMainThreadRpc(rpc);\n\n      const emptyIndex = findIndex(this._workerStates, (x) => !x);\n      this._workerStates[emptyIndex] = { worker, rpc, listenerIds: [id] };\n      return rpc;\n    }\n    const workerStateByListenerCount = sortBy(\n      this._workerStates.filter(Boolean),\n      (workerState) => workerState?.listenerIds.length,\n    );\n    const workerState = workerStateByListenerCount[0];\n    if (!workerState) {\n      throw new Error(\"no worker state\");\n    }\n    workerState.listenerIds.push(id);\n    return workerState.rpc;\n  }\n\n  public unregisterWorkerListener(id: string): void {\n    if (!this._allListeners.has(id)) {\n      throw new Error(\"Cannot find listener to unregister\");\n    }\n    this._allListeners.delete(id);\n\n    const workerStateIndex = findIndex(this._workerStates, (workerState) => {\n      if (!workerState) {\n        return false;\n      }\n      return workerState.listenerIds.includes(id);\n    });\n    const workerState = this._workerStates[workerStateIndex];\n    if (workerStateIndex >= 0 && workerState) {\n      workerState.listenerIds = workerState.listenerIds.filter((_id) => _id !== id);\n      if (workerState.listenerIds.length === 0) {\n        this._workerStates[workerStateIndex] = undefined;\n        workerState.worker.terminate();\n        workerState.rpc.terminate();\n      }\n    }\n  }\n}\n"],"names":["CaptureErrorBoundary","error","PANE_HEIGHT","StyledIconButton","StyledTab","theme","StyledTabs","Content","ToolGroup","children","ToolGroupFixedSizePane","ExpandingToolbar","checked","icon","onSelectTab","selectedTab","tooltip","dataTest","selectedTabLocal","React","child","selectedChild","handleChange","_event","value","PanelContextMenu","props","itemsForClickPosition","rootRef","position","setPosition","handleClose","items","setItems","listener","event","element","parent","Menu","item","index","Divider","MenuItem","ListItemText","usePanelMousePresence","ref","present","setPresent","ev","StyledCard","Card","prop","visible","StyledToggleButton","ToggleButton","StyledToggleButtonGroup","ToggleButtonGroup","ZoomMenu","zoom","setZoom","setZoomMode","resetPanZoom","open","anchorEl","setAnchorEl","mousePresent","menuOpen","handleClick","zoomIn","zoomOut","onZoomFit","onZoomFill","onZoom100","IconButton","Search","Stack","Typography","Remove","Add","useStyles","webWorkerManager","WebWorkerManager","supportsOffscreenCanvas","ImageCanvas","rawMarkerData","normalizedImageMessage","config","saveConfig","onStartRenderImage","mode","classes","cx","renderInMainThread","_","forceUpdate","setError","zoomMode","canvas","setCanvas","canvasContainerRef","width","height","doRenderImage","setDoRenderImage","workerRef","workerId","newCanvas","mounted","id","renderInMain","args","targetWidth","targetHeight","renderImage","worker","workerRender","geometry","imageMessage","options","rawMarkers","transferredCanvas","err","setPan","panX","panY","scaleValue","setContainer","panZoomHandlers","renderOptions","devicePixelRatio","renderError","useAsync","computedViewbox","finishRender","onCanvasClick","setActivePixelData","boundingRect","x","y","r","oldZoom","keyDownHandlers","KeyListener","ImageEmptyState","cameraTopic","markerTopics","shouldSynchronize","EmptyState","topic","TabName","ObjectPane","pixelData","jsonTreeTheme","Toolbar","setSelectedTab","CALIBRATION_DATATYPES","normalizeCameraInfo","message","datatype","typedMessage","mat3Identity","mat4Identity","ImageMarkerType","ImageMarkerAction","ANNOTATION_DATATYPES","foxglovePointTypeToStyle","type","normalizeFoxgloveImageAnnotations","annotations","circle","stamp","point","style","mightActuallyBePartial","normalizeRosImageMarkerArray","marker","normalizeRosImageMarker","imageMarkerTypeToStyle","toPOD","normalizeAnnotations","maybeLazyMessage","normalized","NORMALIZABLE_IMAGE_DATATYPES","normalizeImageMessage","synchronizedAddMessages","state","messageEvents","newState","cameraInfo","image","groups","annotation","key","arr","stampNsec","group","validEntry","findSynchronizedSetAndRemoveOlderItems","tree","annotationTopics","entry","messageState","minKey","selectPublicState","addMessages","normalizedCameraInfo","normalizedImage","normalizedAnnotations","useImagePanelMessages","params","store","set","newParams","prevState","newAnnotationsByTopic","currentFrame","old","memoizedParams","useUpdateEffect","downloadImage","tempCanvas","dimensions","resolve","blob","topicName","fileName","download","buildMarkersNode","enabledMarkerTopics","relatedMarkerTopics","topics","memoBuildMarkersNode","buildSettingsTree","imageTopics","SUPPORTED_IMAGE_SCHEMAS","SUPPORTED_ANNOTATION_SCHEMAS","SUPPORTED_CALIBRATION_SCHEMAS","topicIsConvertibleToSchema","supportedSchemaNames","name","pickConvertToSchema","_params","ImageView","context","renderDone","setRenderDone","setTopics","setConfig","initialConfig","defaultConfig","transformMarkers","topicsByTopicName","cameraTopicFullObject","activePixelData","cameraInfoTopic","cameraInfoTopicFullObject","enabledMarkerTopicsFullObjects","subscriptions","subs","colorScheme","setColorScheme","actions","renderState","done","maybeCameraTopic","firstImageTopic","oldConfig","onChangeCameraTopic","newCameraTopic","newAvailableMarkerTopics","newEnabledMarkerTopics","actionHandler","action","path","draft","markerTopic","newValue","lastImageMessageRef","doDownloadImage","top","contextMenuItemsForClickPosition","saveConfigWithMerging","newConfig","ThemeProvider","inScreenshotTests","initPanel","crash","ImagePanelAdapter","boundInitPanel","PanelExtensionAdapter","Panel","calculateZoomScale","bitmap","viewport","imageViewportScale","calculatedHeight","toPaddedHexString","n","length","str","indexToIDColor","idColorToIndex","getMarkerOptions","imageTopic","imageMarkerDatatypes","results","cameraNamespace","getCameraNamespace","schemaName","getRelatedMarkerTopics","availableMarkerTopics","enabledTopic","getCameraInfoTopic","splitTopic","topicPart","buildMarkerData","markers","cameraModel","setupReceiveReportErrorHandler","rpc","details","severity","sendNotification","setupMainThreadRpc","createWorker","maxWorkerCount","workerState","Rpc","emptyIndex","workerStateIndex","_id"],"sourceRoot":""}