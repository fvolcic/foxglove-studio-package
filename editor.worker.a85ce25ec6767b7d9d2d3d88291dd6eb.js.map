{"version":3,"file":"editor.worker.a85ce25ec6767b7d9d2d3d88291dd6eb.js","mappings":"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","sources":["webpack:///../../packages/studio-base/src/util/process.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/types.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/process.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/path.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///../../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///../../node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Provide a shim for global process variable users\n// We avoid using the npm process module since it has unfavorable performance for process.nextTick\n// and uses setTimeout(..., 0). Instead we use queueMicrotask which is much faster.\nconst process = {\n  // We want to be able to use Function type for _fn_ param\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  nextTick: (fn: Function, ...args: unknown[]): void => {\n    queueMicrotask(() => {\n      fn(...args);\n    });\n  },\n\n  title: \"browser\",\n  browser: true,\n  env: {},\n  argv: [],\n};\n\n// ts-prune-ignore-next\nexport default process;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        let { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function* concatNested(iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concatNested = concatNested;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    /**\n     * Returns whether the iterables are the same length and all items are\n     * equal using the comparator function.\n     */\n    function equals(a, b, comparator = (at, bt) => at === bt) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            if (an.done !== bn.done) {\n                return false;\n            }\n            else if (an.done) {\n                return true;\n            }\n            else if (!comparator(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\nexport class MultiDisposeError extends Error {\n    constructor(errors) {\n        super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n        this.errors = errors;\n    }\n}\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        let errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new MultiDisposeError(errors);\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        try {\n            dispose(this._toDispose.values());\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronRenderer = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string' && nodeProcess.type === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\nexport const setImmediate = (function defineSetImmediate() {\n    if (globals.setImmediate) {\n        return globals.setImmediate.bind(globals);\n    }\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n        let pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeSetImmediateId) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeSetImmediateId) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeSetImmediateId: myId }, '*');\n        };\n    }\n    if (typeof (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.nextTick) === 'function') {\n        return nodeProcess.nextTick.bind(nodeProcess);\n    }\n    const _promise = Promise.resolve();\n    return (callback) => _promise.then(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n","import { onUnexpectedError } from './errors.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function map(event, map) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n    }\n    Event.map = map;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function forEach(event, each) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    }\n    Event.any = any;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function reduce(event, merge, initial) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function snapshot(event) {\n        let listener;\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove() {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function debounce(event, merge, delay = 100, leading = false, leakWarningThreshold) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        const emitter = new Emitter({\n            leakWarningThreshold,\n            onFirstListenerAdd() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(() => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove() {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function latch(event, equals = (a, b) => a === b) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function split(event, isT) {\n        return [\n            Event.filter(event, isT),\n            Event.filter(event, e => !isT(e)),\n        ];\n    }\n    Event.split = split;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function buffer(event, nextTick = false, _buffer = []) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        const flush = () => {\n            if (buffer) {\n                buffer.forEach(e => emitter.fire(e));\n            }\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                }\n            },\n            onFirstListenerDidAdd() {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    class ChainableEvent {\n        constructor(event) {\n            this.event = event;\n        }\n        map(fn) {\n            return new ChainableEvent(map(this.event, fn));\n        }\n        forEach(fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        }\n        filter(fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        }\n        reduce(merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        }\n        latch() {\n            return new ChainableEvent(latch(this.event));\n        }\n        debounce(merge, delay = 100, leading = false, leakWarningThreshold) {\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n        }\n        on(listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        }\n        once(listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        }\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nclass EventProfiling {\n    constructor(name) {\n        this._listenerCount = 0;\n        this._invocationCount = 0;\n        this._elapsedOverall = 0;\n        this._name = `${name}_${EventProfiling._idPool++}`;\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch(true);\n        this._listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this._elapsedOverall += elapsed;\n            this._invocationCount += 1;\n            console.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(customThreshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    }\n    check(listenerCount) {\n        let threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        const count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack) || 0);\n            this._stacks.set(stack, count - 1);\n        };\n    }\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a;\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n        this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                var _a;\n                if (!this._listeners) {\n                    this._listeners = new LinkedList();\n                }\n                const firstListener = this._listeners.isEmpty();\n                if (firstListener && this._options && this._options.onFirstListenerAdd) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                const remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                if (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n                    this._options.onFirstListenerDidAdd(this);\n                }\n                if (this._options && this._options.onListenerDidAdd) {\n                    this._options.onListenerDidAdd(this, listener, thisArgs);\n                }\n                // check and record this emitter for potential leakage\n                const removeMonitor = (_a = this._leakageMon) === null || _a === void 0 ? void 0 : _a.check(this._listeners.size);\n                const result = toDisposable(() => {\n                    if (removeMonitor) {\n                        removeMonitor();\n                    }\n                    if (!this._disposed) {\n                        remove();\n                        if (this._options && this._options.onLastListenerRemove) {\n                            const hasListeners = (this._listeners && !this._listeners.isEmpty());\n                            if (!hasListeners) {\n                                this._options.onLastListenerRemove(this);\n                            }\n                        }\n                    }\n                });\n                if (disposables instanceof DisposableStore) {\n                    disposables.add(result);\n                }\n                else if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b;\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (let listener of this._listeners) {\n                this._deliveryQueue.push([listener, event]);\n            }\n            // start/stop performance insight collection\n            (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n            while (this._deliveryQueue.size > 0) {\n                const [listener, event] = this._deliveryQueue.shift();\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event);\n                    }\n                    else {\n                        listener[0].call(listener[1], event);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n    }\n    dispose() {\n        var _a, _b, _c, _d, _e;\n        if (!this._disposed) {\n            this._disposed = true;\n            (_a = this._listeners) === null || _a === void 0 ? void 0 : _a.clear();\n            (_b = this._deliveryQueue) === null || _b === void 0 ? void 0 : _b.clear();\n            (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onLastListenerRemove) === null || _d === void 0 ? void 0 : _d.call(_c);\n            (_e = this._leakageMon) === null || _e === void 0 ? void 0 : _e.dispose();\n        }\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                const events = Array.from(this._eventQueue);\n                this._eventQueue.clear();\n                super.fire(this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onLastListenerRemove: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport function nextCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const len = str.length;\n    const initialCodePoint = getNextCodePoint(str, len, offset);\n    offset += (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset < len) {\n        const nextCodePoint = getNextCodePoint(str, len, offset);\n        const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n        if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n            break;\n        }\n        offset += (nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = nextGraphemeBreakType;\n    }\n    return (offset - initialOffset);\n}\nexport function prevCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const initialCodePoint = getPrevCodePoint(str, offset);\n    offset -= (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset > 0) {\n        const prevCodePoint = getPrevCodePoint(str, offset);\n        const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n        if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n            break;\n        }\n        offset -= (prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = prevGraphemeBreakType;\n    }\n    return (initialOffset - offset);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129750));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* a */ + n);\n    }\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\n//#region Unicode Grapheme Break\nexport function getGraphemeBreakType(codePoint) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    return graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* CR */) {\n        if (breakTypeB === 3 /* LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* L */) {\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n        if (breakTypeB === 10 /* T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* LineFeed */) {\n                return 3 /* LF */;\n            }\n            if (codePoint === 13 /* CarriageReturn */) {\n                return 2 /* CR */;\n            }\n            return 4 /* Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n    return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n    return offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(offset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    let codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* emojiVariantSelector */ || codePoint === 8419 /* enclosingKeyCap */)) {\n        if (offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = getPrevCodePoint(str, offset);\n        offset -= getUTF16Length(codePoint);\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    if (offset >= 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = getPrevCodePoint(str, offset);\n        if (optionalZwjCodePoint === 8205 /* zwj */) {\n            offset -= getUTF16Length(optionalZwjCodePoint);\n        }\n    }\n    return offset;\n}\nfunction getUTF16Length(codePoint) {\n    return codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { globals, isWeb } from '../platform.js';\nimport * as types from '../types.js';\nimport * as strings from '../strings.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.method = method;\n        this.args = args;\n        this.type = 0 /* Request */;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 /* Reply */;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 /* SubscribeEvent */;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 /* Event */;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 /* UnsubscribeEvent */;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = new Map();\n        this._pendingEvents = new Map();\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        const req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(new RequestMessage(this._workerId, req, method, args));\n        });\n    }\n    listen(eventName, arg) {\n        let req = null;\n        const emitter = new Emitter({\n            onFirstListenerAdd: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(new SubscribeEventMessage(this._workerId, req, eventName, arg));\n            },\n            onLastListenerRemove: () => {\n                this._pendingEmitters.delete(req);\n                this._send(new UnsubscribeEventMessage(this._workerId, req));\n                req = null;\n            }\n        });\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 /* Reply */:\n                return this._handleReplyMessage(msg);\n            case 0 /* Request */:\n                return this._handleRequestMessage(msg);\n            case 2 /* SubscribeEvent */:\n                return this._handleSubscribeEventMessage(msg);\n            case 3 /* Event */:\n                return this._handleEventMessage(msg);\n            case 4 /* UnsubscribeEvent */:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        let reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = new Error();\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        let req = requestMessage.req;\n        let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(new ReplyMessage(this._workerId, req, r, undefined));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n            this._send(new EventMessage(this._workerId, req, event));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!this._pendingEmitters.has(msg.req)) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!this._pendingEvents.has(msg.req)) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        let transfer = [];\n        if (msg.type === 0 /* Request */) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 /* Reply */) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            },\n            handleEvent: (eventName, arg) => {\n                if (propertyIsDynamicEvent(eventName)) {\n                    const event = host[eventName].call(host, arg);\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing dynamic event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                if (propertyIsEvent(eventName)) {\n                    const event = host[eventName];\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                throw new Error(`Malformed event name ${eventName}`);\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        if (typeof globals.require !== 'undefined' && typeof globals.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = globals.require.getConfig();\n        }\n        else if (typeof globals.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = globals.requirejs.s.contexts._.config;\n        }\n        const hostMethods = types.getAllMethodNames(host);\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        // Create proxy to loaded code\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        this._lazyProxy = new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(createProxyObject(availableMethods, proxyMethodRequest, proxyListen));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    // Assume a property is an event if it has a form of \"onSomething\"\n    return name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    // Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n    return /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\nfunction createProxyObject(methodNames, invoke, proxyListen) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const createProxyDynamicEvent = (eventName) => {\n        return function (arg) {\n            return proxyListen(eventName, arg);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        if (propertyIsDynamicEvent(methodName)) {\n            result[methodName] = createProxyDynamicEvent(methodName);\n            continue;\n        }\n        if (propertyIsEvent(methodName)) {\n            result[methodName] = proxyListen(methodName, undefined);\n            continue;\n        }\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args),\n            handleEvent: (eventName, arg) => this._handleEvent(eventName, arg)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(eventName, arg) {\n        if (!this._requestHandler) {\n            throw new Error(`Missing requestHandler`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = this._requestHandler[eventName].call(this._requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = this._requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        const hostProxy = createProxyObject(hostMethods, proxyMethodRequest, proxyListen);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            globals.require.config(loaderConfig);\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            // ESM-comment-begin\n            // \t\t\tconst req = (globals.require || require);\n            // ESM-comment-end\n            // ESM-uncomment-begin\n            const req = globals.require;\n            // ESM-uncomment-end\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve(types.getAllMethodNames(this._requestHandler));\n            }, reject);\n        });\n    }\n}\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* BLOCK_SIZE */;\n            this._totalLen += 64 /* BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nexport class Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nexport class MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            let mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        let mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows, setImmediate } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); },\n        nextTick(callback) { return setImmediate(callback); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n        nextTick(callback) { return process.nextTick(callback); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        nextTick(callback) { return setImmediate(callback); },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string') {\n            return path;\n        }\n        if (path.length === 0) {\n            return '';\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        let aLineNumber = a.lineNumber | 0;\n        let bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            let aColumn = a.column | 0;\n            let bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        let otherStartLineNumber = b.startLineNumber;\n        let otherStartColumn = b.startColumn;\n        let otherEndLineNumber = b.endLineNumber;\n        let otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        return this._columns[i];\n    }\n    getEndLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getEndColumn(i) {\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        let originalStartLineNumber;\n        let originalStartColumn;\n        let originalEndLineNumber;\n        let originalEndColumn;\n        let modifiedStartLineNumber;\n        let modifiedStartColumn;\n        let modifiedEndLineNumber;\n        let modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    changeValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        let maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        let insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        let newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = {\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset, config = _defaultConfig) {\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        let result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        let defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        let asciiMap = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        let value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport class Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        let states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        let result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 42 /* Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* Asterisk */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 124 /* Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* Pipe */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 32 /* Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    let chClass;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            let result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            let result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        let numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        let n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 126 /* MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [0, 1, 0 /* None */, 'None', 0 /* Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [0, 1, 1 /* Hyper */, 'Hyper', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 2 /* Super */, 'Super', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 3 /* Fn */, 'Fn', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 4 /* FnLock */, 'FnLock', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 5 /* Suspend */, 'Suspend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 6 /* Resume */, 'Resume', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 7 /* Turbo */, 'Turbo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 8 /* Sleep */, 'Sleep', 0 /* Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [0, 1, 9 /* WakeUp */, 'WakeUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [31, 0, 10 /* KeyA */, 'KeyA', 31 /* KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [32, 0, 11 /* KeyB */, 'KeyB', 32 /* KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [33, 0, 12 /* KeyC */, 'KeyC', 33 /* KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [34, 0, 13 /* KeyD */, 'KeyD', 34 /* KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [35, 0, 14 /* KeyE */, 'KeyE', 35 /* KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [36, 0, 15 /* KeyF */, 'KeyF', 36 /* KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [37, 0, 16 /* KeyG */, 'KeyG', 37 /* KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [38, 0, 17 /* KeyH */, 'KeyH', 38 /* KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [39, 0, 18 /* KeyI */, 'KeyI', 39 /* KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [40, 0, 19 /* KeyJ */, 'KeyJ', 40 /* KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [41, 0, 20 /* KeyK */, 'KeyK', 41 /* KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [42, 0, 21 /* KeyL */, 'KeyL', 42 /* KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [43, 0, 22 /* KeyM */, 'KeyM', 43 /* KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [44, 0, 23 /* KeyN */, 'KeyN', 44 /* KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [45, 0, 24 /* KeyO */, 'KeyO', 45 /* KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [46, 0, 25 /* KeyP */, 'KeyP', 46 /* KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [47, 0, 26 /* KeyQ */, 'KeyQ', 47 /* KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [48, 0, 27 /* KeyR */, 'KeyR', 48 /* KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [49, 0, 28 /* KeyS */, 'KeyS', 49 /* KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [50, 0, 29 /* KeyT */, 'KeyT', 50 /* KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [51, 0, 30 /* KeyU */, 'KeyU', 51 /* KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [52, 0, 31 /* KeyV */, 'KeyV', 52 /* KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [53, 0, 32 /* KeyW */, 'KeyW', 53 /* KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [54, 0, 33 /* KeyX */, 'KeyX', 54 /* KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [55, 0, 34 /* KeyY */, 'KeyY', 55 /* KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [56, 0, 35 /* KeyZ */, 'KeyZ', 56 /* KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [22, 0, 36 /* Digit1 */, 'Digit1', 22 /* Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [23, 0, 37 /* Digit2 */, 'Digit2', 23 /* Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [24, 0, 38 /* Digit3 */, 'Digit3', 24 /* Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [25, 0, 39 /* Digit4 */, 'Digit4', 25 /* Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [26, 0, 40 /* Digit5 */, 'Digit5', 26 /* Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [27, 0, 41 /* Digit6 */, 'Digit6', 27 /* Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [28, 0, 42 /* Digit7 */, 'Digit7', 28 /* Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [29, 0, 43 /* Digit8 */, 'Digit8', 29 /* Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [30, 0, 44 /* Digit9 */, 'Digit9', 30 /* Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [21, 0, 45 /* Digit0 */, 'Digit0', 21 /* Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [3, 1, 46 /* Enter */, 'Enter', 3 /* Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [9, 1, 47 /* Escape */, 'Escape', 9 /* Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 1, 48 /* Backspace */, 'Backspace', 1 /* Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [2, 1, 49 /* Tab */, 'Tab', 2 /* Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [10, 1, 50 /* Space */, 'Space', 10 /* Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [83, 0, 51 /* Minus */, 'Minus', 83 /* Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [81, 0, 52 /* Equal */, 'Equal', 81 /* Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [87, 0, 53 /* BracketLeft */, 'BracketLeft', 87 /* BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [89, 0, 54 /* BracketRight */, 'BracketRight', 89 /* BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [88, 0, 55 /* Backslash */, 'Backslash', 88 /* Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 0, 56 /* IntlHash */, 'IntlHash', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [80, 0, 57 /* Semicolon */, 'Semicolon', 80 /* Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [90, 0, 58 /* Quote */, 'Quote', 90 /* Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [86, 0, 59 /* Backquote */, 'Backquote', 86 /* Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [82, 0, 60 /* Comma */, 'Comma', 82 /* Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [84, 0, 61 /* Period */, 'Period', 84 /* Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [85, 0, 62 /* Slash */, 'Slash', 85 /* Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [8, 1, 63 /* CapsLock */, 'CapsLock', 8 /* CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [59, 1, 64 /* F1 */, 'F1', 59 /* F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [60, 1, 65 /* F2 */, 'F2', 60 /* F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [61, 1, 66 /* F3 */, 'F3', 61 /* F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [62, 1, 67 /* F4 */, 'F4', 62 /* F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [63, 1, 68 /* F5 */, 'F5', 63 /* F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [64, 1, 69 /* F6 */, 'F6', 64 /* F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [65, 1, 70 /* F7 */, 'F7', 65 /* F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [66, 1, 71 /* F8 */, 'F8', 66 /* F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [67, 1, 72 /* F9 */, 'F9', 67 /* F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [68, 1, 73 /* F10 */, 'F10', 68 /* F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [69, 1, 74 /* F11 */, 'F11', 69 /* F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [70, 1, 75 /* F12 */, 'F12', 70 /* F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [0, 1, 76 /* PrintScreen */, 'PrintScreen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [79, 1, 77 /* ScrollLock */, 'ScrollLock', 79 /* ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [7, 1, 78 /* Pause */, 'Pause', 7 /* PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [19, 1, 79 /* Insert */, 'Insert', 19 /* Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [14, 1, 80 /* Home */, 'Home', 14 /* Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [11, 1, 81 /* PageUp */, 'PageUp', 11 /* PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [20, 1, 82 /* Delete */, 'Delete', 20 /* Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [13, 1, 83 /* End */, 'End', 13 /* End */, 'End', 35, 'VK_END', empty, empty],\n        [12, 1, 84 /* PageDown */, 'PageDown', 12 /* PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [17, 1, 85 /* ArrowRight */, 'ArrowRight', 17 /* RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [15, 1, 86 /* ArrowLeft */, 'ArrowLeft', 15 /* LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [18, 1, 87 /* ArrowDown */, 'ArrowDown', 18 /* DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [16, 1, 88 /* ArrowUp */, 'ArrowUp', 16 /* UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [78, 1, 89 /* NumLock */, 'NumLock', 78 /* NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [108, 1, 90 /* NumpadDivide */, 'NumpadDivide', 108 /* NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [103, 1, 91 /* NumpadMultiply */, 'NumpadMultiply', 103 /* NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [106, 1, 92 /* NumpadSubtract */, 'NumpadSubtract', 106 /* NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [104, 1, 93 /* NumpadAdd */, 'NumpadAdd', 104 /* NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [3, 1, 94 /* NumpadEnter */, 'NumpadEnter', 3 /* Enter */, empty, 0, empty, empty, empty],\n        [94, 1, 95 /* Numpad1 */, 'Numpad1', 94 /* Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [95, 1, 96 /* Numpad2 */, 'Numpad2', 95 /* Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [96, 1, 97 /* Numpad3 */, 'Numpad3', 96 /* Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [97, 1, 98 /* Numpad4 */, 'Numpad4', 97 /* Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [98, 1, 99 /* Numpad5 */, 'Numpad5', 98 /* Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [99, 1, 100 /* Numpad6 */, 'Numpad6', 99 /* Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [100, 1, 101 /* Numpad7 */, 'Numpad7', 100 /* Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [101, 1, 102 /* Numpad8 */, 'Numpad8', 101 /* Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [102, 1, 103 /* Numpad9 */, 'Numpad9', 102 /* Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [93, 1, 104 /* Numpad0 */, 'Numpad0', 93 /* Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [107, 1, 105 /* NumpadDecimal */, 'NumpadDecimal', 107 /* NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [92, 0, 106 /* IntlBackslash */, 'IntlBackslash', 92 /* IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [58, 1, 107 /* ContextMenu */, 'ContextMenu', 58 /* ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [0, 1, 108 /* Power */, 'Power', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 109 /* NumpadEqual */, 'NumpadEqual', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [71, 1, 110 /* F13 */, 'F13', 71 /* F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [72, 1, 111 /* F14 */, 'F14', 72 /* F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [73, 1, 112 /* F15 */, 'F15', 73 /* F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [74, 1, 113 /* F16 */, 'F16', 74 /* F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [75, 1, 114 /* F17 */, 'F17', 75 /* F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [76, 1, 115 /* F18 */, 'F18', 76 /* F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [77, 1, 116 /* F19 */, 'F19', 77 /* F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [0, 1, 117 /* F20 */, 'F20', 0 /* Unknown */, empty, 0, 'VK_F20', empty, empty],\n        [0, 1, 118 /* F21 */, 'F21', 0 /* Unknown */, empty, 0, 'VK_F21', empty, empty],\n        [0, 1, 119 /* F22 */, 'F22', 0 /* Unknown */, empty, 0, 'VK_F22', empty, empty],\n        [0, 1, 120 /* F23 */, 'F23', 0 /* Unknown */, empty, 0, 'VK_F23', empty, empty],\n        [0, 1, 121 /* F24 */, 'F24', 0 /* Unknown */, empty, 0, 'VK_F24', empty, empty],\n        [0, 1, 122 /* Open */, 'Open', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 123 /* Help */, 'Help', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 124 /* Select */, 'Select', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 125 /* Again */, 'Again', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 126 /* Undo */, 'Undo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 127 /* Cut */, 'Cut', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 128 /* Copy */, 'Copy', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 129 /* Paste */, 'Paste', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 130 /* Find */, 'Find', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 131 /* AudioVolumeMute */, 'AudioVolumeMute', 112 /* AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [0, 1, 132 /* AudioVolumeUp */, 'AudioVolumeUp', 113 /* AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [0, 1, 133 /* AudioVolumeDown */, 'AudioVolumeDown', 114 /* AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [105, 1, 134 /* NumpadComma */, 'NumpadComma', 105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [110, 0, 135 /* IntlRo */, 'IntlRo', 110 /* ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [0, 1, 136 /* KanaMode */, 'KanaMode', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 0, 137 /* IntlYen */, 'IntlYen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 138 /* Convert */, 'Convert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 139 /* NonConvert */, 'NonConvert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 140 /* Lang1 */, 'Lang1', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 141 /* Lang2 */, 'Lang2', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 142 /* Lang3 */, 'Lang3', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 143 /* Lang4 */, 'Lang4', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 144 /* Lang5 */, 'Lang5', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 145 /* Abort */, 'Abort', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 146 /* Props */, 'Props', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 147 /* NumpadParenLeft */, 'NumpadParenLeft', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 148 /* NumpadParenRight */, 'NumpadParenRight', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 149 /* NumpadBackspace */, 'NumpadBackspace', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 150 /* NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 151 /* NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 152 /* NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 153 /* NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 154 /* NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 155 /* NumpadClear */, 'NumpadClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 156 /* NumpadClearEntry */, 'NumpadClearEntry', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [5, 1, 0 /* None */, empty, 5 /* Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [4, 1, 0 /* None */, empty, 4 /* Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [6, 1, 0 /* None */, empty, 6 /* Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [57, 1, 0 /* None */, empty, 57 /* Meta */, 'Meta', 0, 'VK_COMMAND', empty, empty],\n        [5, 1, 157 /* ControlLeft */, 'ControlLeft', 5 /* Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [4, 1, 158 /* ShiftLeft */, 'ShiftLeft', 4 /* Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [6, 1, 159 /* AltLeft */, 'AltLeft', 6 /* Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [57, 1, 160 /* MetaLeft */, 'MetaLeft', 57 /* Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [5, 1, 161 /* ControlRight */, 'ControlRight', 5 /* Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [4, 1, 162 /* ShiftRight */, 'ShiftRight', 4 /* Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [6, 1, 163 /* AltRight */, 'AltRight', 6 /* Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [57, 1, 164 /* MetaRight */, 'MetaRight', 57 /* Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [0, 1, 165 /* BrightnessUp */, 'BrightnessUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 166 /* BrightnessDown */, 'BrightnessDown', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 167 /* MediaPlay */, 'MediaPlay', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 168 /* MediaRecord */, 'MediaRecord', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 169 /* MediaFastForward */, 'MediaFastForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 170 /* MediaRewind */, 'MediaRewind', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [114, 1, 171 /* MediaTrackNext */, 'MediaTrackNext', 119 /* MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [115, 1, 172 /* MediaTrackPrevious */, 'MediaTrackPrevious', 120 /* MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [116, 1, 173 /* MediaStop */, 'MediaStop', 121 /* MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [0, 1, 174 /* Eject */, 'Eject', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [117, 1, 175 /* MediaPlayPause */, 'MediaPlayPause', 122 /* MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [0, 1, 176 /* MediaSelect */, 'MediaSelect', 123 /* LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [0, 1, 177 /* LaunchMail */, 'LaunchMail', 124 /* LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [0, 1, 178 /* LaunchApp2 */, 'LaunchApp2', 125 /* LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [0, 1, 179 /* LaunchApp1 */, 'LaunchApp1', 0 /* Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [0, 1, 180 /* SelectTask */, 'SelectTask', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 181 /* LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 182 /* BrowserSearch */, 'BrowserSearch', 115 /* BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [0, 1, 183 /* BrowserHome */, 'BrowserHome', 116 /* BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [112, 1, 184 /* BrowserBack */, 'BrowserBack', 117 /* BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [113, 1, 185 /* BrowserForward */, 'BrowserForward', 118 /* BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [0, 1, 186 /* BrowserStop */, 'BrowserStop', 0 /* Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [0, 1, 187 /* BrowserRefresh */, 'BrowserRefresh', 0 /* Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [0, 1, 188 /* BrowserFavorites */, 'BrowserFavorites', 0 /* Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [0, 1, 189 /* ZoomToggle */, 'ZoomToggle', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 190 /* MailReply */, 'MailReply', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 191 /* MailForward */, 'MailForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 192 /* MailSend */, 'MailSend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [109, 1, 0 /* None */, empty, 109 /* KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [111, 1, 0 /* None */, empty, 111 /* ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [91, 1, 0 /* None */, empty, 91 /* OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CLEAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    let seenKeyCode = [];\n    let seenScanCode = [];\n    for (const mapping of mappings) {\n        const [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* Unknown */)\n                    && (keyCode !== 3 /* Enter */)\n                    && (keyCode !== 5 /* Ctrl */)\n                    && (keyCode !== 4 /* Shift */)\n                    && (keyCode !== 6 /* Alt */)\n                    && (keyCode !== 57 /* Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* Enter */] = 46 /* Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 93 /* Numpad0 */ && keyCode <= 108 /* NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* UpArrow */:\n                return 'Up';\n            case 18 /* DownArrow */:\n                return 'Down';\n            case 15 /* LeftArrow */:\n                return 'Left';\n            case 17 /* RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Token {\n    constructor(offset, type, language) {\n        this._tokenBrand = undefined;\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this._tokenizationResultBrand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\nexport class TokenizationResult2 {\n    constructor(tokens, endState) {\n        this._tokenizationResult2Brand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 12] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 13] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 14] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 15] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 16] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 17] = \"colorDecorators\";\n    EditorOption[EditorOption[\"columnSelection\"] = 18] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 19] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 20] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 21] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 22] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 23] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 24] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 25] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 26] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 27] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 28] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 29] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 30] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 31] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 32] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 33] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 34] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 35] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 36] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 37] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 38] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 39] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 40] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 41] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 42] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 43] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 44] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 45] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 46] = \"fontWeight\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 47] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 48] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 49] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 50] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 51] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 52] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 53] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 54] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 55] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 56] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 57] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 58] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 59] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 60] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 61] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 62] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 63] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 64] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 65] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 66] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 67] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 68] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 69] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 70] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 71] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 72] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 73] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 74] = \"padding\";\n    EditorOption[EditorOption[\"parameterHints\"] = 75] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 76] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 77] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 78] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 79] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 80] = \"readOnly\";\n    EditorOption[EditorOption[\"renameOnType\"] = 81] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 82] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 83] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 84] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 85] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 86] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 87] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 88] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 89] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 90] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 91] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 92] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 93] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 94] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 95] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 96] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 97] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 98] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 99] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 100] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 101] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 102] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 103] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 104] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 105] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 106] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 107] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 108] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 109] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 110] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 111] = \"tabIndex\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 112] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 113] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 114] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 115] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 116] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 117] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 118] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 119] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 120] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 121] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 122] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 123] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 124] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 125] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 126] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 127] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 128] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 129] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 130] = \"wrappingInfo\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Other\"] = 0] = \"Other\";\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"Semicolon\"] = 80] = \"Semicolon\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"Equal\"] = 81] = \"Equal\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"Comma\"] = 82] = \"Comma\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"Minus\"] = 83] = \"Minus\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"Period\"] = 84] = \"Period\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"Slash\"] = 85] = \"Slash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"Backquote\"] = 86] = \"Backquote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"BracketLeft\"] = 87] = \"BracketLeft\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"Backslash\"] = 88] = \"Backslash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"BracketRight\"] = 89] = \"BracketRight\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"Quote\"] = 90] = \"Quote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"IntlBackslash\"] = 92] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 93] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 94] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 95] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 96] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 97] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 98] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 99] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 100] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 101] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 102] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 103] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 104] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 106] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 107] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 108] = \"NumpadDivide\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 112] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 113] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 114] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 115] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 116] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 117] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 118] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 119] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 120] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 121] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 122] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 123] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 124] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 125] = \"LaunchApp2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 126] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nexport class KeyMod {\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nKeyMod.CtrlCmd = 2048 /* CtrlCmd */;\nKeyMod.Shift = 1024 /* Shift */;\nKeyMod.Alt = 512 /* Alt */;\nKeyMod.WinCtrl = 256 /* WinCtrl */;\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n/**\n * @internal\n */\nexport class MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        let content = this._lines[lineNumber - 1];\n        let ranges = this._wordenize(content, wordDefinition);\n        let words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        let lineEnding = this._eol;\n        let startLineIndex = range.startLineNumber - 1;\n        let endLineIndex = range.endLineNumber - 1;\n        let resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        let out = this._lineStarts.getIndexOf(offset);\n        let lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            let maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        let all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        let model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const original = this._getModel(originalUrl);\n            const modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            const originalLines = original.getLinesContent();\n            const modifiedLines = modified.getLinesContent();\n            const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n                shouldComputeCharChanges: true,\n                shouldPostProcessCharChanges: true,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldMakePrettyDiff: true,\n                maxComputationTime: maxComputationTime\n            });\n            const diffResult = diffComputer.computeDiff();\n            const identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n            return {\n                quitEarly: diffResult.quitEarly,\n                identical: identical,\n                changes: diffResult.changes\n            };\n        });\n    }\n    _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    computeMoreMinimalEdits(modelUrl, edits) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return edits;\n            }\n            const result = [];\n            let lastEol = undefined;\n            edits = edits.slice(0).sort((a, b) => {\n                if (a.range && b.range) {\n                    return Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                let aRng = a.range ? 0 : 1;\n                let bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n            });\n            for (let { range, text, eol } of edits) {\n                if (typeof eol === 'number') {\n                    lastEol = eol;\n                }\n                if (Range.isEmpty(range) && !text) {\n                    // empty change\n                    continue;\n                }\n                const original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n                if (original === text) {\n                    // noop\n                    continue;\n                }\n                // make sure diff won't take too long\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                    result.push({ range, text });\n                    continue;\n                }\n                // compute diff between original and edit.text\n                const changes = stringDiff(original, text, false);\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n                for (const change of changes) {\n                    const start = model.positionAt(editOffset + change.originalStart);\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    const newEdit = {\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                    };\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                        result.push(newEdit);\n                    }\n                }\n            }\n            if (typeof lastEol === 'number') {\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n            }\n            return result;\n        });\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    computeLinks(modelUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return computeLinks(model);\n        });\n    }\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sw = new StopWatch(true);\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const seen = new Set();\n            outer: for (let url of modelUrls) {\n                const model = this._getModel(url);\n                if (!model) {\n                    continue;\n                }\n                for (let word of model.words(wordDefRegExp)) {\n                    if (word === leadingWord || !isNaN(Number(word))) {\n                        continue;\n                    }\n                    seen.add(word);\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                        break outer;\n                    }\n                }\n            }\n            return { words: Array.from(seen), duration: sw.elapsed() };\n        });\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return Object.create(null);\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const result = Object.create(null);\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n                let words = model.getLineWords(line, wordDefRegExp);\n                for (const word of words) {\n                    if (!isNaN(Number(word.word))) {\n                        continue;\n                    }\n                    let array = result[word.word];\n                    if (!array) {\n                        array = [];\n                        result[word.word] = array;\n                    }\n                    array.push({\n                        startLineNumber: line,\n                        startColumn: word.startColumn,\n                        endLineNumber: line,\n                        endColumn: word.endColumn\n                    });\n                }\n            }\n            return result;\n        });\n    }\n    //#endregion\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                };\n            }\n            let selectionText = model.getValueInRange(range);\n            let wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            if (!wordRange) {\n                return null;\n            }\n            let word = model.getValueInRange(wordRange);\n            let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return result;\n        });\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n        let ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        self.postMessage(msg);\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\n    self.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"names":["fn","args","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","exports","definition","key","obj","prop","ErrorHandler","e","listener","errorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","error","name","message","stack","canceledName","canceled","illegalArgument","illegalState","NotSupportedError","once","_this","didCall","result","Iterable","is","thing","_empty","empty","single","element","from","iterable","isEmpty","first","some","predicate","find","filter","map","index","concat","iterables","concatNested","reduce","reducer","initialValue","value","slice","arr","to","consume","atMost","consumed","iterator","i","next","equals","a","b","comparator","at","bt","ai","bi","an","bn","TRACK_DISPOSABLES","disposableTracker","setDisposableTracker","tracker","__is_disposable_tracked__","x","child","parent","disposable","trackDisposable","markAsDisposed","setParentOfDisposable","setParentOfDisposables","children","markAsSingleton","singleton","MultiDisposeError","errors","isDisposable","dispose","arg","d","combinedDisposable","disposables","toDisposable","self","DisposableStore","o","MutableDisposable","_a","oldValue","ImmortalReference","object","Node","node","atTheEnd","newNode","oldLast","oldFirst","didRemove","res","anchor","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","nodeProcess","process","isElectronRenderer","rawNlsConfig","nlsConfig","resolved","_platform","isWindows","isMacintosh","isLinux","isNative","isIOS","userAgent","setImmediate","pending","len","candidate","lastId","callback","myId","_promise","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","hasPerformanceNow","StopWatch","highResolution","Event","event","thisArgs","didFire","snapshot","forEach","each","signal","any","events","merge","initial","output","emitter","Emitter","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","firstCall","cache","shouldEmit","split","isT","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","resolve","EventProfiling","listenerCount","elapsed","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","threshold","count","topStack","topCount","options","firstListener","remove","removeMonitor","_b","_c","_d","_e","PauseableEmitter","DebounceEmitter","EventBufferer","Relay","isArray","array","isString","str","isObject","isNumber","isBoolean","isUndefined","isDefined","isUndefinedOrNull","assertType","condition","type","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","getAllPropertyNames","proto","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","assertNever","isFalsyOrWhitespace","_formatRegexp","format","match","group","idx","html","escapeRegExpCharacters","trim","haystack","needle","trimmed","ltrim","rtrim","needleLen","offset","haystackLen","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","modifiers","regExpLeadsToEndlessLoop","regexp","regExpFlags","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","start","end","lastNonWhitespaceIndex","startIndex","compare","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","code","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","nextCharLength","graphemeBreakTree","GraphemeBreakTree","initialOffset","initialCodePoint","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCharLength","prevCodePoint","prevGraphemeBreakType","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","startsWithUTF8BOM","containsUppercaseCharacter","target","ignoreEscapedChars","singleLetterHash","n","getGraphemeBreakType","codePoint","breakTypeA","breakTypeB","getGraphemeBreakRawData","data","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","getOffsetBeforeLastEmojiComponent","getUTF16Length","isEmojiModifier","optionalZwjCodePoint","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","err","RequestMessage","vsWorker","req","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","handler","workerId","reject","msg","replyMessage","reply","requestMessage","r","transfer","SimpleWorkerClient","workerFactory","host","lazyProxyReject","propertyIsDynamicEvent","propertyIsEvent","loaderConfiguration","hostMethods","proxyMethodRequest","proxyListen","availableMethods","createProxyDynamicEvent","SimpleWorkerServer","postMessage","requestHandlerFactory","loaderConfig","hostProxy","create","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","hash","doHash","hashVal","numberHash","arrayHash","objectHash","stringHash","booleanHash","val","initialHashVal","s","length","item","leftRotate","bits","totalBits","delta","mask","fill","dest","leftPad","char","toHexString","bufferOrValue","bitsize","StringSHA1","strLen","buff","buffLen","leftoverHighSurrogate","ml","bigBlock32","j","c","f","k","temp","StringDiffSequence","source","characters","stringDiff","original","modified","pretty","LcsDiff","Debug","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","originalIndex","modifiedIndex","originalSequence","modifiedSequence","continueProcessingPredicate","originalStringElements","originalElementsOrHash","originalHasStrings","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","sequence","elements","hashes","newIndex","originalElement","modifiedElement","index1","index2","originalEnd","modifiedEnd","quitEarlyArr","changes","midOriginalArr","midModifiedArr","midOriginal","midModified","leftChanges","rightChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","tempOriginalIndex","matchLengthOfLongest","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","prevChange","bestDelta","bestScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","l","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","safeProcess","sandboxProcess","cwd","env","platform","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","sep","pathObject","dir","base","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","last","firstPart","tail","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","ext","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","posix","trailingSeparator","hasRoot","normalize","relative","dirname","basename","extname","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_regexp","URI","schemeOrData","authority","query","fragment","uriToFsPath","Uri","percentDecode","components","uri","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","aLineNumber","bLineNumber","aColumn","bColumn","Range","startLineNumber","startColumn","endLineNumber","endColumn","range","position","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","DiffComputer","originalLines","modifiedLines","opts","createContinueProcessingPredicate","diffResult","quitEarly","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","txt","defaultValue","maximumRuntime","startTime","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","PrefixSumComputer","values","insertIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","maxCount","sum","low","high","mid","midStop","midStart","MirrorTextModel","eol","versionId","eolLength","linesLength","lineStartValues","lineIndex","newValue","insertText","insertLines","newLengths","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","_defaultConfig","getWordAtText","text","textOffset","config","t1","prevRegexIndex","regexIndex","thisMatch","_findRegexMatchEnclosingPosition","stopPos","matchIndex","CharacterClassifier","_defaultValue","asciiMap","_value","CharacterSet","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","model","stateMachine","lineCount","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","computeLinks","BasicInplaceReplace","range1","text1","range2","text2","up","numberResult","precision","n1","n2","valueSets","valueSet","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","CancellationTokenSource","cancel","KeyCodeStrMap","keyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","mappings","seenKeyCode","seenScanCode","mapping","_keyCodeOrd","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","KeyChord","secondPart","chordPart","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","sel","direction","Token","language","TokenizationResult","tokens","endState","TokenizationResult2","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","InlayHintKind","InlineCompletionTriggerKind","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","KeyMod","createMonacoBaseAPI","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","rejected","MirrorModel","wordAtText","wordenize","lineText","wordRangesIdx","wordRanges","content","ranges","words","lineEnding","startLineIndex","endLineIndex","resultLines","lineLength","hasChanged","maxCharacter","EditorSimpleWorker","foreignModuleFactory","all","strURL","originalUrl","modifiedUrl","ignoreTrimWhitespace","maxComputationTime","identical","originalLineCount","modifiedLineCount","modelUrl","edits","lastEol","aRng","bRng","editOffset","newEdit","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","url","word","selectionText","wordRange","createData","foreignHostMethods","ctx","initialized","initialize","foreignModule","simpleWorker"],"sourceRoot":""}