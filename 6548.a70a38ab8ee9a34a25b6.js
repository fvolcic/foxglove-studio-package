(()=>{var S={80859:(e,r,t)=>{"use strict";var g=t(90758),a=t(41253),o=t(16514),u=t(13791),y=t(17417),v=t(92897),b=t(44668),$=t(20865),j=t(88499);function P(w){const c=w.slice().sort((p,i)=>(0,b.compare)(p.startTime,i.startTime));let l={sec:-1/0,nsec:0},d=0;return c.forEach(({startTime:p,endTime:i})=>{(0,b.isLessThan)(p,l)&&(d+=1),(0,b.isGreaterThan)(i,l)&&(l=i)}),d}var R=t(94789),B=t(3400),O=t.n(B);class E{constructor(c){this._readersByConnectionId=new Map,this._datatypesByConnectionId=new Map,this._source=c}async initialize(){await O().isLoaded;const c=await R.default.init();let l;if(this._source.type==="remote"){const f=this._source.url,n=new $.Z(f),m=new j.Z({fileReader:n,cacheSizeInBytes:1024*1024*200,keepReconnectingCallback:I=>{}});await m.open(),l=m}else l=new u.BlobReader(this._source.file);this._bag=new o.N(l,{parse:!1,decompress:{bz2:(f,n)=>c.decompress(f,n,{small:!1}),lz4:(f,n)=>O()(f,n)}}),await this._bag.open();const d=[],p=P(this._bag.chunkInfos);if(p>this._bag.chunkInfos.length*.25){const f=`This bag has many overlapping chunks (${p} out of ${this._bag.chunkInfos.length}). This results in more memory use during playback.`,n="Re-sort the messages in your bag by receive time.";d.push({severity:"warn",message:f,tip:n})}const i=new Array(this._bag.connections.size).fill(0);this._bag.chunkInfos.forEach(f=>{f.connections.forEach(({conn:n,count:m})=>{i[n]+=m})});const h=new Map,_=new Map,k=new Map,C=new Map;for(const[f,n]of this._bag.connections){const m=n.type;if(!m)continue;let I=C.get(n.topic);I||(I=new Set,C.set(n.topic,I)),I.add(n.callerid??String(n.conn));const M=_.get(n.topic);M&&M.schemaName!==m&&d.push({severity:"warn",message:`Conflicting datatypes on topic (${n.topic}): ${m}, ${M.schemaName}`,tip:`Studio requires all connections on a topic to have the same datatype. Make sure all your nodes are publishing the same message on ${n.topic}.`}),M||_.set(n.topic,{name:n.topic,schemaName:m});const N=(k.get(n.topic)?.numMessages??0)+(i[n.conn]??0);k.set(n.topic,{numMessages:N});const z=(0,y.parse)(n.messageDefinition),A=new v.MessageReader(z);this._readersByConnectionId.set(f,A),this._datatypesByConnectionId.set(f,m);for(const T of z)T.name?h.set(T.name,T):h.set(m,T)}return{topics:Array.from(_.values()),topicStats:k,start:this._bag.startTime??{sec:0,nsec:0},end:this._bag.endTime??{sec:0,nsec:0},problems:d,profile:"ros1",datatypes:h,publishersByTopic:C}}async*messageIterator(c){yield*this._messageIterator({...c,reverse:!1})}async*_messageIterator(c){if(!this._bag)throw new Error("Invariant: uninitialized");const l=c.end,d=this._bag.messageIterator({topics:c.topics,reverse:c.reverse,start:c.start}),p=this._readersByConnectionId;for await(const i of d){const h=i.connectionId,_=p.get(h);if(l&&(0,b.compare)(i.timestamp,l)>0)return;const k=this._datatypesByConnectionId.get(h);if(!k){yield{type:"problem",connectionId:h,problem:{severity:"error",message:`Cannot missing datatype for connection id ${h}`,tip:"Check that your bag file is well-formed. It should have a connection record for every connection id referenced from a message record."}};return}if(_){const C=i.data.slice(),f=_.readMessage(C);yield{type:"message-event",connectionId:h,msgEvent:{topic:i.topic,receiveTime:i.timestamp,sizeInBytes:i.data.byteLength,message:f,schemaName:k}}}else yield{type:"problem",connectionId:h,problem:{severity:"error",message:`Cannot deserialize message for missing connection id ${h}`,tip:"Check that your bag file is well-formed. It should have a connection record for every connection id referenced from a message record."}}}}async getBackfillMessages({topics:c,time:l}){const d=[];for(const p of c)for await(const i of this._messageIterator({topics:[p],start:l,reverse:!0})){i.type==="message-event"&&d.push(i.msgEvent);break}return d.sort((p,i)=>(0,b.compare)(p.receiveTime,i.receiveTime)),d}}function L(w){if(w.file){const c=new E({type:"file",file:w.file}),l=new a.a(c);return g.sj(l)}else if(w.url){const c=new E({type:"remote",url:w.url}),l=new a.a(c);return g.sj(l)}throw new Error("file or url required")}g.Jj(L)},63136:(e,r,t)=>{"use strict";t.d(r,{Z:()=>a});const a={nextTick:(o,...u)=>{queueMicrotask(()=>{o(...u)})},title:"browser",browser:!0,env:{},argv:[]}},62891:()=>{},16471:()=>{}},x={};function s(e){var r=x[e];if(r!==void 0)return r.exports;var t=x[e]={id:e,loaded:!1,exports:{}};return S[e].call(t.exports,t,t.exports,s),t.loaded=!0,t.exports}s.m=S,s.x=()=>{var e=s.O(void 0,[8953,5704,3005,8071,8834,363,1343,4812],()=>s(80859));return e=s.O(e),e},(()=>{var e=[];s.O=(r,t,g,a)=>{if(t){a=a||0;for(var o=e.length;o>0&&e[o-1][2]>a;o--)e[o]=e[o-1];e[o]=[t,g,a];return}for(var u=1/0,o=0;o<e.length;o++){for(var[t,g,a]=e[o],y=!0,v=0;v<t.length;v++)(a&!1||u>=a)&&Object.keys(s.O).every(B=>s.O[B](t[v]))?t.splice(v--,1):(y=!1,a<u&&(u=a));if(y){e.splice(o--,1);var b=g();b!==void 0&&(r=b)}}return r}})(),s.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return s.d(r,{a:r}),r},s.d=(e,r)=>{for(var t in r)s.o(r,t)&&!s.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},s.f={},s.e=e=>Promise.all(Object.keys(s.f).reduce((r,t)=>(s.f[t](e,r),r),[])),s.u=e=>""+e+"."+{363:"a69c968f4f37b5b8437f",1343:"47caff8377d579065976",3005:"4a7ae5f4422d544b7fca",4812:"1dafbaa2f668973cd9d7",5704:"65ef628d0eb9fe1e3785",8071:"e6f0b5441155766163bd",8834:"200c3ccaf1c2987be130",8953:"e4b4427fe714c235cf10"}[e]+".js",s.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),s.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),s.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var r=s.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),(()=>{var e={6548:1,4334:1},r=a=>{var[o,u,y]=a;for(var v in u)s.o(u,v)&&(s.m[v]=u[v]);for(y&&y(s);o.length;)e[o.pop()]=1;g(a)};s.f.i=(a,o)=>{e[a]||importScripts(s.p+s.u(a))};var t=self.webpackChunk=self.webpackChunk||[],g=t.push.bind(t);t.push=r})(),(()=>{var e=s.x;s.x=()=>Promise.all([8953,5704,3005,8071,8834,363,1343,4812].map(s.e,s)).then(e)})();var F=s.x()})();

//# sourceMappingURL=6548.a70a38ab8ee9a34a25b6.js.map