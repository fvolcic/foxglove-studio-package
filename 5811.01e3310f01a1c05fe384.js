"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5811],{25811:(Y,P,H)=>{H.d(P,{RS:()=>N,c1:()=>q});function V({polynomial:n,numTables:e}){const t=new Uint32Array(256*e);for(let r=0;r<256;r++){let i=r;i=(i&1)*n^i>>>1,i=(i&1)*n^i>>>1,i=(i&1)*n^i>>>1,i=(i&1)*n^i>>>1,i=(i&1)*n^i>>>1,i=(i&1)*n^i>>>1,i=(i&1)*n^i>>>1,i=(i&1)*n^i>>>1,t[r]=i}for(let r=256;r<t.length;r++){const i=t[r-256];t[r]=t[i&255]^i>>>8}return t}const S=V({polynomial:3988292384,numTables:8});function $(){return-1}function O(n,e){const t=e.byteLength,r=new DataView(e.buffer,e.byteOffset,t);let i=n,a=0;const h=-r.byteOffset&3;for(;a<h&&a<t;a++)i=S[(i^r.getUint8(a))&255]^i>>>8;if(a===t)return i;a=h;let c=t-a;for(;c>=8;a+=8,c-=8){i^=r.getUint32(a,!0);const s=r.getUint32(a+4,!0);i=S[0*256+(s>>>24&255)]^S[1*256+(s>>>16&255)]^S[2*256+(s>>>8&255)]^S[3*256+(s>>>0&255)]^S[4*256+(i>>>24&255)]^S[5*256+(i>>>16&255)]^S[6*256+(i>>>8&255)]^S[7*256+(i>>>0&255)]}for(let s=a;s<t;s++)i=S[(i^r.getUint8(s))&255]^i>>>8;return i}function D(n){return(n^-1)>>>0}function _(n){return D(O($(),n))}var z=function(n,e){var t={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},r,i,a,h;return h={next:c(0),throw:c(1),return:c(2)},typeof Symbol=="function"&&(h[Symbol.iterator]=function(){return this}),h;function c(o){return function(u){return s([o,u])}}function s(o){if(r)throw new TypeError("Generator is already executing.");for(;t;)try{if(r=1,i&&(a=o[0]&2?i.return:o[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,o[1])).done)return a;switch(i=0,a&&(o=[o[0]&2,a.value]),o[0]){case 0:case 1:a=o;break;case 4:return t.label++,{value:o[1],done:!1};case 5:t.label++,i=o[1],o=[0];continue;case 7:o=t.ops.pop(),t.trys.pop();continue;default:if(a=t.trys,!(a=a.length>0&&a[a.length-1])&&(o[0]===6||o[0]===2)){t=0;continue}if(o[0]===3&&(!a||o[1]>a[0]&&o[1]<a[3])){t.label=o[1];break}if(o[0]===6&&t.label<a[1]){t.label=a[1],a=o;break}if(a&&t.label<a[2]){t.label=a[2],t.ops.push(o);break}a[2]&&t.ops.pop(),t.trys.pop();continue}o=e.call(n,t)}catch(u){o=[6,u],i=0}finally{r=a=0}if(o[0]&5)throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}},w=function(n,e){var t=typeof Symbol=="function"&&n[Symbol.iterator];if(!t)return n;var r=t.call(n),i,a=[],h;try{for(;(e===void 0||e-- >0)&&!(i=r.next()).done;)a.push(i.value)}catch(c){h={error:c}}finally{try{i&&!i.done&&(t=r.return)&&t.call(r)}finally{if(h)throw h.error}}return a},A=function(n,e,t){if(t||arguments.length===2)for(var r=0,i=e.length,a;r<i;r++)(a||!(r in e))&&(a||(a=Array.prototype.slice.call(e,0,r)),a[r]=e[r]);return n.concat(a||Array.prototype.slice.call(e))},J=function(n){return~~n},W=function(){function n(e){e===void 0&&(e=n.minComparator);var t=this;this.compare=e,this.heapArray=[],this._limit=0,this.offer=this.add,this.element=this.peek,this.poll=this.pop,this._invertedCompare=function(r,i){return-1*t.compare(r,i)}}return n.getChildrenIndexOf=function(e){return[e*2+1,e*2+2]},n.getParentIndexOf=function(e){if(e<=0)return-1;var t=e%2?1:2;return Math.floor((e-t)/2)},n.getSiblingIndexOf=function(e){if(e<=0)return-1;var t=e%2?1:-1;return e+t},n.minComparator=function(e,t){return e>t?1:e<t?-1:0},n.maxComparator=function(e,t){return t>e?1:t<e?-1:0},n.minComparatorNumber=function(e,t){return e-t},n.maxComparatorNumber=function(e,t){return t-e},n.defaultIsEqual=function(e,t){return e===t},n.print=function(e){function t(u){var f=n.getParentIndexOf(u);return Math.floor(Math.log2(f+1))}function r(u,f){for(var d="";f>0;--f)d+=u;return d}for(var i=0,a=[],h=t(e.length-1)+2,c=0;i<e.length;){var s=t(i)+1;i===0&&(s=0);var o=String(e.get(i));o.length>c&&(c=o.length),a[s]=a[s]||[],a[s].push(o),i+=1}return a.map(function(u,f){var d=Math.pow(2,h-f)-1;return r(" ",Math.floor(d/2)*c)+u.map(function(g){var m=(c-g.length)/2;return r(" ",Math.ceil(m))+g+r(" ",Math.floor(m))}).join(r(" ",d*c))}).join(`
`)},n.heapify=function(e,t){var r=new n(t);return r.heapArray=e,r.init(),r},n.heappop=function(e,t){var r=new n(t);return r.heapArray=e,r.pop()},n.heappush=function(e,t,r){var i=new n(r);i.heapArray=e,i.push(t)},n.heappushpop=function(e,t,r){var i=new n(r);return i.heapArray=e,i.pushpop(t)},n.heapreplace=function(e,t,r){var i=new n(r);return i.heapArray=e,i.replace(t)},n.heaptop=function(e,t,r){t===void 0&&(t=1);var i=new n(r);return i.heapArray=e,i.top(t)},n.heapbottom=function(e,t,r){t===void 0&&(t=1);var i=new n(r);return i.heapArray=e,i.bottom(t)},n.nlargest=function(e,t,r){var i=new n(r);return i.heapArray=A([],w(t),!1),i.init(),i.top(e)},n.nsmallest=function(e,t,r){var i=new n(r);return i.heapArray=A([],w(t),!1),i.init(),i.bottom(e)},n.prototype.add=function(e){return this._sortNodeUp(this.heapArray.push(e)-1),this._applyLimit(),!0},n.prototype.addAll=function(e){var t,r=this.length;(t=this.heapArray).push.apply(t,A([],w(e),!1));for(var i=this.length;r<i;++r)this._sortNodeUp(r);return this._applyLimit(),!0},n.prototype.bottom=function(e){if(e===void 0&&(e=1),this.heapArray.length===0||e<=0)return[];if(this.heapArray.length===1)return[this.heapArray[0]];if(e>=this.heapArray.length)return A([],w(this.heapArray),!1);var t=this._bottomN_push(~~e);return t},n.prototype.check=function(){var e=this;return this.heapArray.find(function(t,r){return!!e.getChildrenOf(r).find(function(i){return e.compare(t,i)>0})})},n.prototype.clear=function(){this.heapArray=[]},n.prototype.clone=function(){var e=new n(this.comparator());return e.heapArray=this.toArray(),e._limit=this._limit,e},n.prototype.comparator=function(){return this.compare},n.prototype.contains=function(e,t){return t===void 0&&(t=n.defaultIsEqual),this.heapArray.findIndex(function(r){return t(r,e)})>=0},n.prototype.init=function(e){e&&(this.heapArray=A([],w(e),!1));for(var t=Math.floor(this.heapArray.length);t>=0;--t)this._sortNodeDown(t);this._applyLimit()},n.prototype.isEmpty=function(){return this.length===0},n.prototype.leafs=function(){if(this.heapArray.length===0)return[];var e=n.getParentIndexOf(this.heapArray.length-1);return this.heapArray.slice(e+1)},Object.defineProperty(n.prototype,"length",{get:function(){return this.heapArray.length},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"limit",{get:function(){return this._limit},set:function(e){this._limit=~~e,this._applyLimit()},enumerable:!1,configurable:!0}),n.prototype.peek=function(){return this.heapArray[0]},n.prototype.pop=function(){var e=this.heapArray.pop();return this.length>0&&e!==void 0?this.replace(e):e},n.prototype.push=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.length<1?!1:e.length===1?this.add(e[0]):this.addAll(e)},n.prototype.pushpop=function(e){var t;return this.compare(this.heapArray[0],e)<0&&(t=w([this.heapArray[0],e],2),e=t[0],this.heapArray[0]=t[1],this._sortNodeDown(0)),e},n.prototype.remove=function(e,t){if(t===void 0&&(t=n.defaultIsEqual),this.length>0){if(e===void 0)return this.pop(),!0;var r=this.heapArray.findIndex(function(i){return t(i,e)});if(r>=0)return r===0?this.pop():r===this.length-1?this.heapArray.pop():(this.heapArray.splice(r,1,this.heapArray.pop()),this._sortNodeUp(r),this._sortNodeDown(r)),!0}return!1},n.prototype.replace=function(e){var t=this.heapArray[0];return this.heapArray[0]=e,this._sortNodeDown(0),t},n.prototype.size=function(){return this.length},n.prototype.top=function(e){if(e===void 0&&(e=1),this.heapArray.length===0||e<=0)return[];if(this.heapArray.length===1||e===1)return[this.heapArray[0]];if(e>=this.heapArray.length)return A([],w(this.heapArray),!1);var t=this._topN_push(~~e);return t},n.prototype.toArray=function(){return A([],w(this.heapArray),!1)},n.prototype.toString=function(){return this.heapArray.toString()},n.prototype.get=function(e){return this.heapArray[e]},n.prototype.getChildrenOf=function(e){var t=this;return n.getChildrenIndexOf(e).map(function(r){return t.heapArray[r]}).filter(function(r){return r!==void 0})},n.prototype.getParentOf=function(e){var t=n.getParentIndexOf(e);return this.heapArray[t]},n.prototype[Symbol.iterator]=function(){return z(this,function(e){switch(e.label){case 0:return this.length?[4,this.pop()]:[3,2];case 1:return e.sent(),[3,0];case 2:return[2]}})},n.prototype.iterator=function(){return this.toArray()},n.prototype._applyLimit=function(){if(this._limit&&this._limit<this.heapArray.length)for(var e=this.heapArray.length-this._limit;e;)this.heapArray.pop(),--e},n.prototype._bottomN_push=function(e){var t=new n(this.compare);t.limit=e,t.heapArray=this.heapArray.slice(-e),t.init();for(var r=this.heapArray.length-1-e,i=n.getParentIndexOf(r),a=[],h=r;h>i;--h)a.push(h);for(var c=this.heapArray;a.length;){var h=a.shift();this.compare(c[h],t.peek())>0&&(t.replace(c[h]),h%2&&a.push(n.getParentIndexOf(h)))}return t.toArray()},n.prototype._moveNode=function(e,t){var r;r=w([this.heapArray[t],this.heapArray[e]],2),this.heapArray[e]=r[0],this.heapArray[t]=r[1]},n.prototype._sortNodeDown=function(e){for(var t=this,r=e<this.heapArray.length-1,i=this.heapArray[e],a=function(o,u){return t.heapArray.length>u&&t.compare(t.heapArray[u],t.heapArray[o])<0&&(o=u),o};r;){var h=n.getChildrenIndexOf(e),c=h.reduce(a,h[0]),s=this.heapArray[c];typeof s<"u"&&this.compare(i,s)>0?(this._moveNode(e,c),e=c):r=!1}},n.prototype._sortNodeUp=function(e){for(var t=e>0;t;){var r=n.getParentIndexOf(e);r>=0&&this.compare(this.heapArray[r],this.heapArray[e])>0?(this._moveNode(e,r),e=r):t=!1}},n.prototype._topN_push=function(e){var t=new n(this._invertedCompare);t.limit=e;for(var r=[0],i=this.heapArray;r.length;){var a=r.shift();a<i.length&&(t.length<e?(t.push(i[a]),r.push.apply(r,A([],w(n.getChildrenIndexOf(a)),!1))):this.compare(i[a],t.peek())<0&&(t.replace(i[a]),r.push.apply(r,A([],w(n.getChildrenIndexOf(a)),!1))))}return t.toArray()},n.prototype._topN_fill=function(e){var t=this.heapArray,r=new n(this._invertedCompare);r.limit=e,r.heapArray=t.slice(0,e),r.init();for(var i=n.getParentIndexOf(e-1)+1,a=[],h=i;h<e;++h)a.push.apply(a,A([],w(n.getChildrenIndexOf(h).filter(function(c){return c<t.length})),!1));for((e-1)%2&&a.push(e);a.length;){var h=a.shift();h<t.length&&this.compare(t[h],r.peek())<0&&(r.replace(t[h]),a.push.apply(a,A([],w(n.getChildrenIndexOf(h)),!1)))}return r.toArray()},n.prototype._topN_heap=function(e){for(var t=this.clone(),r=[],i=0;i<e;++i)r.push(t.pop());return r},n.prototype._topIdxOf=function(e){if(!e.length)return-1;for(var t=0,r=e[t],i=1;i<e.length;++i){var a=this.compare(e[i],r);a<0&&(t=i,r=e[i])}return t},n.prototype._topOf=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=new n(this.compare);return r.init(e),r.peek()},n}();const F=typeof DataView.prototype.getBigUint64=="function"?DataView.prototype.getBigUint64:function(n,e){const t=e===!0?this.getUint32(n,e):this.getUint32(n+4,e),r=e===!0?this.getUint32(n+4,e):this.getUint32(n,e);return BigInt(r)<<32n|BigInt(t)};class U{constructor(e,t=0){this.textDecoder=new TextDecoder,this.view=e,this.offset=t}uint8(){const e=this.view.getUint8(this.offset);return this.offset+=1,e}uint16(){const e=this.view.getUint16(this.offset,!0);return this.offset+=2,e}uint32(){const e=this.view.getUint32(this.offset,!0);return this.offset+=4,e}uint64(){const e=F.call(this.view,this.offset,!0);return this.offset+=8,e}string(){const e=this.uint32();if(this.offset+e>this.view.byteLength)throw new Error(`String length ${e} exceeds bounds of buffer`);const t=this.textDecoder.decode(new Uint8Array(this.view.buffer,this.view.byteOffset+this.offset,e));return this.offset+=e,t}keyValuePairs(e,t){const r=this.uint32();if(this.offset+r>this.view.byteLength)throw new Error(`Key-value pairs length ${r} exceeds bounds of buffer`);const i=[],a=this.offset+r;try{for(;this.offset<a;)i.push([e(this),t(this)])}catch(h){throw new Error(`Error reading key-value pairs: ${h.message}`)}if(this.offset!==a)throw new Error(`Key-value pairs length (${this.offset-a+r}) greater than expected (${r})`);return i}map(e,t){const r=this.uint32();if(this.offset+r>this.view.byteLength)throw new Error(`Map length ${r} exceeds bounds of buffer`);const i=new Map,a=this.offset+r;try{for(;this.offset<a;){const h=e(this),c=t(this),s=i.get(h);if(s!=null)throw new Error(`Duplicate key ${String(h)} (${String(s)} vs ${String(c)})`);i.set(h,c)}}catch(h){throw new Error(`Error reading map: ${h.message}`)}if(this.offset!==a)throw new Error(`Map length (${this.offset-a+r}) greater than expected (${r})`);return i}}const b=Object.freeze([137,77,67,65,80,48,13,10]);var p;(function(n){n[n.MIN=1]="MIN",n[n.HEADER=1]="HEADER",n[n.FOOTER=2]="FOOTER",n[n.SCHEMA=3]="SCHEMA",n[n.CHANNEL=4]="CHANNEL",n[n.MESSAGE=5]="MESSAGE",n[n.CHUNK=6]="CHUNK",n[n.MESSAGE_INDEX=7]="MESSAGE_INDEX",n[n.CHUNK_INDEX=8]="CHUNK_INDEX",n[n.ATTACHMENT=9]="ATTACHMENT",n[n.ATTACHMENT_INDEX=10]="ATTACHMENT_INDEX",n[n.STATISTICS=11]="STATISTICS",n[n.METADATA=12]="METADATA",n[n.METADATA_INDEX=13]="METADATA_INDEX",n[n.SUMMARY_OFFSET=14]="SUMMARY_OFFSET",n[n.DATA_END=15]="DATA_END",n[n.MAX=15]="MAX"})(p||(p={}));function X(n){return n>=p.MIN&&n<=p.MAX}function L(n,e){if(e+b.length>n.byteLength)return{usedBytes:0};if(!b.every((t,r)=>t===n.getUint8(e+r)))throw new Error(`Expected MCAP magic '${b.map(t=>t.toString(16).padStart(2,"0")).join(" ")}', found '${Array.from(b,(t,r)=>n.getUint8(e+r).toString(16).padStart(2,"0")).join(" ")}'`);return{magic:{specVersion:"0"},usedBytes:b.length}}function B({view:n,startOffset:e,validateCrcs:t}){if(e+1+8>=n.byteLength)return{usedBytes:0};const r=new U(n,e),i=r.uint8(),a=r.uint64();if(a>Number.MAX_SAFE_INTEGER)throw new Error(`Record content length ${a} is too large`);const h=r.offset+Number(a);if(h>n.byteLength)return{usedBytes:0};if(!X(i))return{record:{type:"Unknown",opcode:i,data:new Uint8Array(n.buffer,n.byteOffset+r.offset,Number(a))},usedBytes:h-e};const c=new DataView(n.buffer,n.byteOffset+r.offset,Number(a)),s=new U(c);switch(i){case p.HEADER:{const o=s.string(),u=s.string();return{record:{type:"Header",profile:o,library:u},usedBytes:h-e}}case p.FOOTER:{const o=s.uint64(),u=s.uint64(),f=s.uint32();return{record:{type:"Footer",summaryStart:o,summaryOffsetStart:u,summaryCrc:f},usedBytes:h-e}}case p.SCHEMA:{const o=s.uint16(),u=s.string(),f=s.string(),d=s.uint32();if(s.offset+d>c.byteLength)throw new Error(`Schema data length ${d} exceeds bounds of record`);const g=new Uint8Array(c.buffer.slice(c.byteOffset+s.offset,c.byteOffset+s.offset+d));return s.offset+=d,{record:{type:"Schema",id:o,encoding:f,name:u,data:g},usedBytes:h-e}}case p.CHANNEL:{const o=s.uint16(),u=s.uint16(),f=s.string(),d=s.string(),g=s.map(y=>y.string(),y=>y.string());return{record:{type:"Channel",id:o,schemaId:u,topic:f,messageEncoding:d,metadata:g},usedBytes:h-e}}case p.MESSAGE:{const o=s.uint16(),u=s.uint32(),f=s.uint64(),d=s.uint64(),g=new Uint8Array(c.buffer.slice(c.byteOffset+s.offset,c.byteOffset+c.byteLength));return{record:{type:"Message",channelId:o,sequence:u,logTime:f,publishTime:d,data:g},usedBytes:h-e}}case p.CHUNK:{const o=s.uint64(),u=s.uint64(),f=s.uint64(),d=s.uint32(),g=s.string(),m=Number(s.uint64());if(m+s.offset>c.byteLength)throw new Error("Chunk records length exceeds remaining record size");const y=new Uint8Array(c.buffer.slice(c.byteOffset+s.offset,c.byteOffset+s.offset+m));return{record:{type:"Chunk",messageStartTime:o,messageEndTime:u,compression:g,uncompressedSize:f,uncompressedCrc:d,records:y},usedBytes:h-e}}case p.MESSAGE_INDEX:{const o=s.uint16(),u=s.keyValuePairs(d=>d.uint64(),d=>d.uint64());return{record:{type:"MessageIndex",channelId:o,records:u},usedBytes:h-e}}case p.CHUNK_INDEX:{const o=s.uint64(),u=s.uint64(),f=s.uint64(),d=s.uint64(),g=s.map(C=>C.uint16(),C=>C.uint64()),m=s.uint64(),y=s.string(),I=s.uint64(),v=s.uint64();return{record:{type:"ChunkIndex",messageStartTime:o,messageEndTime:u,chunkStartOffset:f,chunkLength:d,messageIndexOffsets:g,messageIndexLength:m,compression:y,compressedSize:I,uncompressedSize:v},usedBytes:h-e}}case p.ATTACHMENT:{const o=s.uint64(),u=s.uint64(),f=s.string(),d=s.string(),g=s.uint64();if(BigInt(c.byteOffset+s.offset)+g>Number.MAX_SAFE_INTEGER)throw new Error(`Attachment too large: ${g}`);if(s.offset+Number(g)+4>c.byteLength)throw new Error(`Attachment data length ${g} exceeds bounds of record`);const m=new Uint8Array(c.buffer.slice(c.byteOffset+s.offset,c.byteOffset+s.offset+Number(g)));s.offset+=Number(g);const y=s.offset,I=s.uint32();if(t&&I!==0){const T=_(new DataView(c.buffer,c.byteOffset,y));if(T!==I)throw new Error(`Attachment CRC32 mismatch: expected ${I}, actual ${T}`)}return{record:{type:"Attachment",logTime:o,createTime:u,name:f,mediaType:d,data:m},usedBytes:h-e}}case p.ATTACHMENT_INDEX:{const o=s.uint64(),u=s.uint64(),f=s.uint64(),d=s.uint64(),g=s.uint64(),m=s.string(),y=s.string();return{record:{type:"AttachmentIndex",offset:o,length:u,logTime:f,createTime:d,dataSize:g,name:m,mediaType:y},usedBytes:h-e}}case p.STATISTICS:{const o=s.uint64(),u=s.uint16(),f=s.uint32(),d=s.uint32(),g=s.uint32(),m=s.uint32(),y=s.uint64(),I=s.uint64(),v=s.map(C=>C.uint16(),C=>C.uint64());return{record:{type:"Statistics",messageCount:o,schemaCount:u,channelCount:f,attachmentCount:d,metadataCount:g,chunkCount:m,messageStartTime:y,messageEndTime:I,channelMessageCounts:v},usedBytes:h-e}}case p.METADATA:{const o=s.string();return{record:{type:"Metadata",metadata:s.map(d=>d.string(),d=>d.string()),name:o},usedBytes:h-e}}case p.METADATA_INDEX:{const o=s.uint64(),u=s.uint64(),f=s.string();return{record:{type:"MetadataIndex",offset:o,length:u,name:f},usedBytes:h-e}}case p.SUMMARY_OFFSET:{const o=s.uint8(),u=s.uint64(),f=s.uint64();return{record:{type:"SummaryOffset",groupOpcode:o,groupStart:u,groupLength:f},usedBytes:h-e}}case p.DATA_END:return{record:{type:"DataEnd",dataSectionCrc:s.uint32()},usedBytes:h-e}}}function R(n,e,t){let r=0,i=n.length;if(i===0)return 0;const a=t(e);for(;r<i;){const h=r+i>>>1;t(n[h][0])<a?r=h+1:i=h}return i}class G{constructor(e){if(this.chunkIndex=e.chunkIndex,this.relevantChannels=e.relevantChannels,this.startTime=e.startTime,this.endTime=e.endTime,this.reverse=e.reverse,this.chunkIndex.messageIndexLength===0n)throw new Error("Chunks without message indexes are not currently supported")}compare(e){if(this.reverse!==e.reverse)throw new Error("Cannot compare a reversed ChunkCursor to a non-reversed ChunkCursor");let t=Number(this.getSortTime()-e.getSortTime());return t===0&&(t=Number(this.chunkIndex.chunkStartOffset-e.chunkIndex.chunkStartOffset)),this.reverse?-t:t}hasMoreMessages(){if(!this.messageIndexCursors)throw new Error("loadMessageIndexes() must be called before hasMore()");return this.messageIndexCursors.size()>0}popMessage(){if(!this.messageIndexCursors)throw new Error("loadMessageIndexes() must be called before popMessage()");const e=this.messageIndexCursors.peek();if(!e)throw new Error(`Unexpected popMessage() call when no more messages are available, in chunk at offset ${this.chunkIndex.chunkStartOffset}`);const t=e.records[e.index],[r]=t;if(this.startTime!=null&&r<this.startTime)throw new Error(`Encountered message with logTime (${r}) prior to startTime (${this.startTime}) in chunk at offset ${this.chunkIndex.chunkStartOffset}`);if(this.endTime!=null&&r>this.endTime)throw new Error(`Encountered message with logTime (${r}) after endTime (${this.endTime}) in chunk at offset ${this.chunkIndex.chunkStartOffset}`);const i=e.records[e.index+1];if(i&&this.reverse){if(this.startTime==null||i[0]>=this.startTime)return e.index++,this.messageIndexCursors.replace(e),t}else if(i&&(this.endTime==null||i[0]<=this.endTime))return e.index++,this.messageIndexCursors.replace(e),t;return this.messageIndexCursors.pop(),t}hasMessageIndexes(){return this.messageIndexCursors!=null}async loadMessageIndexes(e){const t=this.reverse;this.messageIndexCursors=new W((o,u)=>{const f=o.records[o.index]?.[0],d=u.records[u.index]?.[0];return t?f==null?-1:d==null?1:Number(d-f):f==null?1:d==null?-1:Number(f-d)});let r,i;for(const[o,u]of this.chunkIndex.messageIndexOffsets)(r==null||u<r)&&(r=u),(!this.relevantChannels||this.relevantChannels.has(o))&&(i==null||u<i)&&(i=u);if(r==null||i==null)return;const a=r+this.chunkIndex.messageIndexLength,h=await e.read(i,a-i),c=new DataView(h.buffer,h.byteOffset,h.byteLength);let s=0;for(let o;o=B({view:c,startOffset:s,validateCrcs:!0}),o.record;s+=o.usedBytes){if(o.record.type!=="MessageIndex"||o.record.records.length===0||this.relevantChannels&&!this.relevantChannels.has(o.record.channelId))continue;o.record.records.sort(([f],[d])=>Number(f-d)),t&&o.record.records.reverse();for(let f=0;f<o.record.records.length;f++){const[d]=o.record.records[f];if(d<this.chunkIndex.messageStartTime)throw new Error(`Encountered message index entry in channel ${o.record.channelId} with logTime (${d}) earlier than chunk messageStartTime (${this.chunkIndex.messageStartTime}) in chunk at offset ${this.chunkIndex.chunkStartOffset}`);if(d>this.chunkIndex.messageEndTime)throw new Error(`Encountered message index entry in channel ${o.record.channelId} with logTime (${d}) later than chunk messageEndTime (${this.chunkIndex.messageEndTime}) in chunk at offset ${this.chunkIndex.chunkStartOffset}`)}let u=0;if(t?this.endTime!=null&&(u=R(o.record.records,this.endTime,f=>-f)):this.startTime!=null&&(u=R(o.record.records,this.startTime,f=>f)),!(u>=o.record.records.length)){if(t){if(this.startTime!=null&&o.record.records[u][0]<this.startTime)continue}else if(this.endTime!=null&&o.record.records[u][0]>this.endTime)continue;this.messageIndexCursors.push({index:u,channelId:o.record.channelId,records:o.record.records})}}if(s!==c.byteLength)throw new Error(`${c.byteLength-s} bytes remaining in message index section`)}getSortTime(){if(!this.messageIndexCursors)return this.reverse?this.chunkIndex.messageEndTime:this.chunkIndex.messageStartTime;const e=this.messageIndexCursors.peek();if(!e)throw new Error(`Unexpected empty cursor for chunk at offset ${this.chunkIndex.chunkStartOffset}`);return e.records[e.index][0]}}class N{constructor(e){this.metadataIndexes=[],this.readable=e.readable,this.chunkIndexes=e.chunkIndexes,this.attachmentIndexes=e.attachmentIndexes,this.metadataIndexes=e.metadataIndexes,this.statistics=e.statistics,this.decompressHandlers=e.decompressHandlers,this.channelsById=e.channelsById,this.schemasById=e.schemasById,this.summaryOffsetsByOpcode=e.summaryOffsetsByOpcode,this.header=e.header,this.footer=e.footer;for(const t of e.chunkIndexes)(this.messageStartTime==null||t.messageStartTime<this.messageStartTime)&&(this.messageStartTime=t.messageStartTime),(this.messageEndTime==null||t.messageEndTime>this.messageEndTime)&&(this.messageEndTime=t.messageEndTime);for(const t of e.attachmentIndexes)(this.attachmentStartTime==null||t.logTime<this.attachmentStartTime)&&(this.attachmentStartTime=t.logTime),(this.attachmentEndTime==null||t.logTime>this.attachmentEndTime)&&(this.attachmentEndTime=t.logTime)}errorWithLibrary(e){return new Error(`${e} [library=${this.header.library}]`)}static async Initialize({readable:e,decompressHandlers:t}){const r=await e.size();let i;{const l=await e.read(0n,BigInt(b.length+1+8)),x=new DataView(l.buffer,l.byteOffset,l.byteLength);L(x,0);const k=x.getBigUint64(b.length+1,!0),E=await e.read(BigInt(b.length),1n+8n+k),M=B({view:new DataView(E.buffer,E.byteOffset,E.byteLength),startOffset:0,validateCrcs:!0});if(M.record?.type!=="Header")throw new Error(`Unable to read header at beginning of file; found ${M.record?.type??"nothing"}`);if(M.usedBytes!==E.byteLength)throw new Error(`${E.byteLength-M.usedBytes} bytes remaining after parsing header`);i=M.record}function a(l){return new Error(`${l} [library=${i.library}]`)}let h,c;{const l=BigInt(b.length+1+8+4+4),x=BigInt(1+8+8+8+4+b.length);if(r<l+x)throw a(`File size (${r}) is too small to be valid MCAP`);h=r-x;const k=await e.read(h,x);c=new DataView(k.buffer,k.byteOffset,k.byteLength)}try{L(c,c.byteLength-b.length)}catch(l){throw a(l.message)}let s;{const l=B({view:c,startOffset:0,validateCrcs:!0});if(l.record?.type!=="Footer")throw a(`Unable to read footer from end of file (offset ${h}); found ${l.record?.type??"nothing"}`);if(l.usedBytes!==c.byteLength-b.length)throw a(`${c.byteLength-b.length-l.usedBytes} bytes remaining after parsing footer`);s=l.record}if(s.summaryStart===0n)throw a("File is not indexed");const o=new Uint8Array(1+8+8+8);o.set(new Uint8Array(c.buffer,c.byteOffset,o.byteLength));const u=await e.read(s.summaryStart,h-s.summaryStart);if(s.summaryCrc!==0){let l=$();if(l=O(l,u),l=O(l,o),l=D(l),l!==s.summaryCrc)throw a(`Incorrect summary CRC ${l} (expected ${s.summaryCrc})`)}const f=new DataView(u.buffer,u.byteOffset,u.byteLength),d=new Map,g=new Map,m=[],y=[],I=[],v=new Map;let T,C=0;for(let l;l=B({view:f,startOffset:C,validateCrcs:!0}),l.record;C+=l.usedBytes)switch(l.record.type){case"Schema":g.set(l.record.id,l.record);break;case"Channel":d.set(l.record.id,l.record);break;case"ChunkIndex":m.push(l.record);break;case"AttachmentIndex":y.push(l.record);break;case"MetadataIndex":I.push(l.record);break;case"Statistics":if(T)throw a("Duplicate Statistics record");T=l.record;break;case"SummaryOffset":v.set(l.record.groupOpcode,l.record);break;case"Header":case"Footer":case"Message":case"Chunk":case"MessageIndex":case"Attachment":case"Metadata":case"DataEnd":throw a(`${l.record.type} record not allowed in index section`);case"Unknown":break}if(C!==f.byteLength)throw a(`${f.byteLength-C} bytes remaining in index section`);return new N({readable:e,chunkIndexes:m,attachmentIndexes:y,metadataIndexes:I,statistics:T,decompressHandlers:t,channelsById:d,schemasById:g,summaryOffsetsByOpcode:v,header:i,footer:s})}async*readMessages(e={}){const{topics:t,startTime:r=this.messageStartTime,endTime:i=this.messageEndTime,reverse:a=!1,validateCrcs:h}=e;if(r==null||i==null)return;let c;if(t){c=new Set;for(const u of this.channelsById.values())t.includes(u.topic)&&c.add(u.id)}const s=new W((u,f)=>u.compare(f));for(const u of this.chunkIndexes)u.messageStartTime<=i&&u.messageEndTime>=r&&s.push(new G({chunkIndex:u,relevantChannels:c,startTime:r,endTime:i,reverse:a}));const o=new Map;for(let u;u=s.peek();){if(!u.hasMessageIndexes()){await u.loadMessageIndexes(this.readable),u.hasMoreMessages()?s.replace(u):s.pop();continue}let f=o.get(u.chunkIndex.chunkStartOffset);f||(f=await this.loadChunkData(u.chunkIndex),o.set(u.chunkIndex.chunkStartOffset,f));const[d,g]=u.popMessage();if(g>=BigInt(f.byteLength))throw this.errorWithLibrary(`Message offset beyond chunk bounds (log time ${d}, offset ${g}, chunk data length ${f.byteLength}) in chunk at offset ${u.chunkIndex.chunkStartOffset}`);const m=B({view:f,startOffset:Number(g),validateCrcs:h??!0});if(!m.record)throw this.errorWithLibrary(`Unable to parse record at offset ${g} in chunk at offset ${u.chunkIndex.chunkStartOffset}`);if(m.record.type!=="Message")throw this.errorWithLibrary(`Unexpected record type ${m.record.type} in message index (time ${d}, offset ${g} in chunk at offset ${u.chunkIndex.chunkStartOffset})`);if(m.record.logTime!==d)throw this.errorWithLibrary(`Message log time ${m.record.logTime} did not match message index entry (${d} at offset ${g} in chunk at offset ${u.chunkIndex.chunkStartOffset})`);yield m.record,u.hasMoreMessages()?s.replace(u):(s.pop(),o.delete(u.chunkIndex.chunkStartOffset))}}async*readMetadata(e={}){const{name:t}=e;for(const r of this.metadataIndexes){if(t!=null&&r.name!==t)continue;const i=await this.readable.read(r.offset,r.length),a=B({view:new DataView(i.buffer,i.byteOffset,i.byteLength),startOffset:0,validateCrcs:!1});if(a.record?.type!=="Metadata")throw this.errorWithLibrary(`Metadata data at offset ${r.offset} does not point to metadata record (found ${String(a.record?.type)})`);yield a.record}}async*readAttachments(e={}){const{name:t,mediaType:r,startTime:i=this.attachmentStartTime,endTime:a=this.attachmentEndTime,validateCrcs:h}=e;if(!(i==null||a==null))for(const c of this.attachmentIndexes){if(t!=null&&c.name!==t||r!=null&&c.mediaType!==r||c.logTime>a||c.logTime<i)continue;const s=await this.readable.read(c.offset,c.length),o=B({view:new DataView(s.buffer,s.byteOffset,s.byteLength),startOffset:0,validateCrcs:h??!0});if(o.record?.type!=="Attachment")throw this.errorWithLibrary(`Attachment data at offset ${c.offset} does not point to attachment record (found ${String(o.record?.type)})`);yield o.record}}async loadChunkData(e){const t=await this.readable.read(e.chunkStartOffset,e.chunkLength),r=B({view:new DataView(t.buffer,t.byteOffset,t.byteLength),startOffset:0,validateCrcs:!0});if(r.record?.type!=="Chunk")throw this.errorWithLibrary(`Chunk start offset ${e.chunkStartOffset} does not point to chunk record (found ${String(r.record?.type)})`);const i=r.record;let a=i.records;if(i.compression!==""&&a.byteLength>0){const h=this.decompressHandlers?.[i.compression];if(!h)throw this.errorWithLibrary(`Unsupported compression ${i.compression}`);a=h(a,i.uncompressedSize)}if(i.uncompressedCrc!==0){const h=_(a);if(h!==i.uncompressedCrc)throw this.errorWithLibrary(`Incorrect chunk CRC ${h} (expected ${i.uncompressedCrc})`)}return new DataView(a.buffer,a.byteOffset,a.byteLength)}}class K{constructor(e=0){this.buffer=new ArrayBuffer(e),this.view=new DataView(this.buffer,0,0)}bytesRemaining(){return this.view.byteLength}consume(e){this.view=new DataView(this.buffer,this.view.byteOffset+e,this.view.byteLength-e)}append(e){if(this.view.byteOffset+this.view.byteLength+e.byteLength<=this.buffer.byteLength)new Uint8Array(this.view.buffer,this.view.byteOffset).set(e,this.view.byteLength),this.view=new DataView(this.buffer,this.view.byteOffset,this.view.byteLength+e.byteLength);else if(this.view.byteLength+e.byteLength<=this.buffer.byteLength){const t=new Uint8Array(this.buffer,this.view.byteOffset,this.view.byteLength),r=new Uint8Array(this.buffer);r.set(t,0),r.set(e,t.byteLength),this.view=new DataView(this.buffer,0,this.view.byteLength+e.byteLength)}else{const t=new Uint8Array(this.buffer,this.view.byteOffset,this.view.byteLength);this.buffer=new ArrayBuffer((this.view.byteLength+e.byteLength)*2);const r=new Uint8Array(this.buffer);r.set(t,0),r.set(e,t.byteLength),this.view=new DataView(this.buffer,0,this.view.byteLength+e.byteLength)}}}class q{constructor({includeChunks:e=!1,decompressHandlers:t={},validateCrcs:r=!0,noMagicPrefix:i=!1}={}){this.buffer=new K(b.length*2),this.doneReading=!1,this.generator=this.read(),this.channelsById=new Map,this.includeChunks=e,this.decompressHandlers=t,this.validateCrcs=r,this.noMagicPrefix=i}done(){return this.doneReading}bytesRemaining(){return this.buffer.bytesRemaining()}append(e){if(this.doneReading)throw new Error("Already done reading");this.buffer.append(e)}nextRecord(){if(this.doneReading)return;const e=this.generator.next();if(e.value?.type==="Channel"){const t=this.channelsById.get(e.value.id);if(this.channelsById.set(e.value.id,e.value),t&&!j(t,e.value))throw new Error(`Channel record for id ${e.value.id} (topic: ${e.value.topic}) differs from previous channel record of the same id.`)}else if(e.value?.type==="Message"){const t=e.value.channelId;if(!this.channelsById.get(t))throw new Error(`Encountered message on channel ${t} without prior channel record`)}return e.done===!0&&(this.doneReading=!0),e.value}*read(){if(!this.noMagicPrefix){let r,i;for(;{magic:r,usedBytes:i}=L(this.buffer.view,0),!r;)yield;this.buffer.consume(i)}let e;function t(r){return new Error(`${r} ${e?`[library=${e.library}]`:"[no header]"}`)}for(;;){let r;{let i;for(;{record:r,usedBytes:i}=B({view:this.buffer.view,startOffset:0,validateCrcs:this.validateCrcs}),!r;)yield;this.buffer.consume(i)}switch(r.type){case"Unknown":break;case"Header":if(e)throw new Error(`Duplicate Header record: library=${e.library} profile=${e.profile} vs. library=${r.library} profile=${r.profile}`);e=r,yield r;break;case"Schema":case"Channel":case"Message":case"MessageIndex":case"ChunkIndex":case"Attachment":case"AttachmentIndex":case"Statistics":case"Metadata":case"MetadataIndex":case"SummaryOffset":case"DataEnd":yield r;break;case"Chunk":{this.includeChunks&&(yield r);let i=r.records;if(r.compression!==""&&i.byteLength>0){const c=this.decompressHandlers[r.compression];if(!c)throw t(`Unsupported compression ${r.compression}`);i=c(i,r.uncompressedSize)}if(this.validateCrcs&&r.uncompressedCrc!==0){const c=_(i);if(c!==r.uncompressedCrc)throw t(`Incorrect chunk CRC ${c} (expected ${r.uncompressedCrc})`)}const a=new DataView(i.buffer,i.byteOffset,i.byteLength);let h=0;for(let c;c=B({view:a,startOffset:h,validateCrcs:this.validateCrcs}),c.record;h+=c.usedBytes)switch(c.record.type){case"Unknown":break;case"Header":case"Footer":case"Chunk":case"MessageIndex":case"ChunkIndex":case"Attachment":case"AttachmentIndex":case"Statistics":case"Metadata":case"MetadataIndex":case"SummaryOffset":case"DataEnd":throw t(`${c.record.type} record not allowed inside a chunk`);case"Schema":case"Channel":case"Message":yield c.record;break}if(h!==i.byteLength)throw t(`${i.byteLength-h} bytes remaining in chunk`);break}case"Footer":try{let i,a;for(;{magic:i,usedBytes:a}=L(this.buffer.view,0),!i;)yield;this.buffer.consume(a)}catch(i){throw t(i.message)}if(this.buffer.bytesRemaining()!==0)throw t(`${this.buffer.bytesRemaining()} bytes remaining after MCAP footer and trailing magic`);return r}}}}function j(n,e){if(!(n.id===e.id&&n.messageEncoding===e.messageEncoding&&n.schemaId===e.schemaId&&n.topic===e.topic&&n.metadata.size===e.metadata.size))return!1;for(const[t,r]of n.metadata.entries()){const i=e.metadata.get(t);if(r!==i)return!1}return!0}class Q{constructor(e){this.options=e,this.bufferBuilder=new BufferBuilder}get length(){return this.bufferBuilder.length}get buffer(){return this.bufferBuilder.buffer}reset(){this.bufferBuilder.reset()}writeMagic(){this.bufferBuilder.bytes(new Uint8Array(MCAP_MAGIC))}writeHeader(e){this.bufferBuilder.uint8(Opcode.HEADER);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).string(e.profile).string(e.library),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeFooter(e){return this.bufferBuilder.uint8(Opcode.FOOTER).uint64(20n).uint64(e.summaryStart).uint64(e.summaryOffsetStart).uint32(e.summaryCrc),20n}writeSchema(e){this.bufferBuilder.uint8(Opcode.SCHEMA);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint16(e.id).string(e.name).string(e.encoding).uint32(e.data.byteLength).bytes(e.data),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeChannel(e){this.bufferBuilder.uint8(Opcode.CHANNEL);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint16(e.id).uint16(e.schemaId).string(e.topic).string(e.messageEncoding).tupleArray(i=>this.bufferBuilder.string(i),i=>this.bufferBuilder.string(i),e.metadata),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeMessage(e){this.bufferBuilder.uint8(Opcode.MESSAGE);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint16(e.channelId).uint32(e.sequence).uint64(e.logTime).uint64(e.publishTime).bytes(e.data);const r=this.bufferBuilder.length;this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r)}writeAttachment(e){this.bufferBuilder.uint8(Opcode.ATTACHMENT);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n);const r=this.bufferBuilder.length;this.bufferBuilder.uint64(e.logTime).uint64(e.createTime).string(e.name).string(e.mediaType).uint64(BigInt(e.data.byteLength)).bytes(e.data),this.bufferBuilder.uint32(crc32(this.bufferBuilder.bufferView(r,this.bufferBuilder.length-r))),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const i=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(i-t-8)).seek(i),BigInt(i-t+1)}writeAttachmentIndex(e){this.bufferBuilder.uint8(Opcode.ATTACHMENT_INDEX);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint64(e.offset).uint64(e.length).uint64(e.logTime).uint64(e.createTime).uint64(e.dataSize).string(e.name).string(e.mediaType),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeChunk(e){this.bufferBuilder.uint8(Opcode.CHUNK);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint64(e.messageStartTime).uint64(e.messageEndTime).uint64(e.uncompressedSize).uint32(e.uncompressedCrc).string(e.compression).uint64(BigInt(e.records.byteLength)).bytes(e.records);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeChunkIndex(e){this.bufferBuilder.uint8(Opcode.CHUNK_INDEX);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint64(e.messageStartTime).uint64(e.messageEndTime).uint64(e.chunkStartOffset).uint64(e.chunkLength).uint32(e.messageIndexOffsets.size*10);for(const[i,a]of e.messageIndexOffsets)this.bufferBuilder.uint16(i).uint64(a);this.bufferBuilder.uint64(e.messageIndexLength).string(e.compression).uint64(e.compressedSize).uint64(e.uncompressedSize),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeMessageIndex(e){this.bufferBuilder.uint8(Opcode.MESSAGE_INDEX);const t=this.bufferBuilder.length,r=e.records.length*16;this.bufferBuilder.uint64(0n).uint16(e.channelId).uint32(r);for(const a of e.records)this.bufferBuilder.uint64(a[0]).uint64(a[1]);this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const i=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(i-t-8)).seek(i),BigInt(i-t+1)}writeMetadata(e){this.bufferBuilder.uint8(Opcode.METADATA);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).string(e.name).tupleArray(i=>this.bufferBuilder.string(i),i=>this.bufferBuilder.string(i),e.metadata),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeMetadataIndex(e){this.bufferBuilder.uint8(Opcode.METADATA_INDEX);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint64(e.offset).uint64(e.length).string(e.name),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeSummaryOffset(e){this.bufferBuilder.uint8(Opcode.SUMMARY_OFFSET);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint8(e.groupOpcode).uint64(e.groupStart).uint64(e.groupLength),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeStatistics(e){this.bufferBuilder.uint8(Opcode.STATISTICS);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint64(e.messageCount).uint16(e.schemaCount).uint32(e.channelCount).uint32(e.attachmentCount).uint32(e.metadataCount).uint32(e.chunkCount).uint64(e.messageStartTime).uint64(e.messageEndTime).tupleArray(i=>this.bufferBuilder.uint16(i),i=>this.bufferBuilder.uint64(i),e.channelMessageCounts),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}writeDataEnd(e){this.bufferBuilder.uint8(Opcode.DATA_END);const t=this.bufferBuilder.length;this.bufferBuilder.uint64(0n).uint32(e.dataSectionCrc),this.options?.padRecords===!0&&this.bufferBuilder.uint8(1).uint8(255).uint8(255);const r=this.bufferBuilder.length;return this.bufferBuilder.seek(t).uint64(BigInt(r-t-8)).seek(r),BigInt(r-t+1)}}class Z{constructor({useMessageIndex:e=!0}){this.recordWriter=new McapRecordBuilder,this.totalMessageCount=0,this.messageStartTime=0n,this.messageEndTime=0n,e&&(this.messageIndices=new Map)}get numMessages(){return this.totalMessageCount}get buffer(){return this.recordWriter.buffer}get byteLength(){return this.recordWriter.length}get indices(){return this.messageIndices?this.messageIndices.values():[]}addSchema(e){this.recordWriter.writeSchema(e)}addChannel(e){this.messageIndices&&!this.messageIndices.has(e.id)&&this.messageIndices.set(e.id,{channelId:e.id,records:[]}),this.recordWriter.writeChannel(e)}addMessage(e){if((this.totalMessageCount===0||e.logTime<this.messageStartTime)&&(this.messageStartTime=e.logTime),(this.totalMessageCount===0||e.logTime>this.messageEndTime)&&(this.messageEndTime=e.logTime),this.messageIndices){let t=this.messageIndices.get(e.channelId);t||(t={channelId:e.channelId,records:[]},this.messageIndices.set(e.channelId,t)),t.records.push([e.logTime,BigInt(this.recordWriter.length)])}this.totalMessageCount+=1,this.recordWriter.writeMessage(e)}reset(){this.messageStartTime=0n,this.messageEndTime=0n,this.totalMessageCount=0,this.messageIndices?.clear(),this.recordWriter.reset()}}class ee{constructor(e){this.nextChannelId=0,this.nextSchemaId=1,this.recordWriter=new McapRecordBuilder,this.schemas=new Map,this.channels=new Map,this.writtenSchemaIds=new Set,this.writtenChannelIds=new Set,this.dataSectionCrc=crc32Init();const{writable:t,useStatistics:r=!0,useSummaryOffsets:i=!0,useChunks:a=!0,repeatSchemas:h=!0,repeatChannels:c=!0,useAttachmentIndex:s=!0,useMetadataIndex:o=!0,useMessageIndex:u=!0,useChunkIndex:f=!0,startChannelId:d=0,chunkSize:g=1024*1024,compressChunk:m}=e;this.writable=t,this.useSummaryOffsets=i,r&&(this.statistics={messageCount:0n,schemaCount:0,channelCount:0,attachmentCount:0,metadataCount:0,chunkCount:0,messageStartTime:0n,messageEndTime:0n,channelMessageCounts:new Map}),a&&(this.chunkBuilder=new ChunkBuilder({useMessageIndex:u})),this.repeatSchemas=h,this.repeatChannels=c,s&&(this.attachmentIndices=[]),o&&(this.metadataIndices=[]),f&&(this.chunkIndices=[]),this.nextChannelId=d,this.chunkSize=g,this.compressChunk=m}async start(e){this.recordWriter.writeMagic(),this.recordWriter.writeHeader(e),this.dataSectionCrc=crc32Update(this.dataSectionCrc,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset()}async end(){await this.finalizeChunk(),this.dataSectionCrc=crc32Update(this.dataSectionCrc,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset(),this.recordWriter.writeDataEnd({dataSectionCrc:crc32Final(this.dataSectionCrc)}),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const e=[],t=this.writable.position();let r=crc32Init();if(this.repeatSchemas){const s=this.writable.position();let o=0n;for(const u of this.schemas.values())o+=this.recordWriter.writeSchema(u);e.push({groupOpcode:Opcode.SCHEMA,groupStart:s,groupLength:o})}if(this.repeatChannels){r=crc32Update(r,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const s=this.writable.position();let o=0n;for(const u of this.channels.values())o+=this.recordWriter.writeChannel(u);e.push({groupOpcode:Opcode.CHANNEL,groupStart:s,groupLength:o})}if(this.statistics){r=crc32Update(r,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const s=this.writable.position(),o=this.recordWriter.writeStatistics(this.statistics);e.push({groupOpcode:Opcode.STATISTICS,groupStart:s,groupLength:o})}if(r=crc32Update(r,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset(),this.metadataIndices){r=crc32Update(r,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const s=this.writable.position();let o=0n;for(const u of this.metadataIndices)o+=this.recordWriter.writeMetadataIndex(u);e.push({groupOpcode:Opcode.METADATA_INDEX,groupStart:s,groupLength:o})}if(this.attachmentIndices){r=crc32Update(r,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const s=this.writable.position();let o=0n;for(const u of this.attachmentIndices)o+=this.recordWriter.writeAttachmentIndex(u);e.push({groupOpcode:Opcode.ATTACHMENT_INDEX,groupStart:s,groupLength:o})}if(this.chunkIndices){r=crc32Update(r,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const s=this.writable.position();let o=0n;for(const u of this.chunkIndices)o+=this.recordWriter.writeChunkIndex(u);e.push({groupOpcode:Opcode.CHUNK_INDEX,groupStart:s,groupLength:o})}r=crc32Update(r,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const i=this.writable.position(),a=i-t;if(this.useSummaryOffsets)for(const s of e)s.groupLength!==0n&&this.recordWriter.writeSummaryOffset(s);r=crc32Update(r,this.recordWriter.buffer);const h={summaryStart:a===0n?0n:t,summaryOffsetStart:this.useSummaryOffsets?i:0n,summaryCrc:0},c=new DataView(new ArrayBuffer(1+8+8+8));c.setUint8(0,Opcode.FOOTER),c.setBigUint64(1,8n+8n+4n,!0),c.setBigUint64(1+8,h.summaryStart,!0),c.setBigUint64(1+8+8,h.summaryOffsetStart,!0),r=crc32Update(r,c),h.summaryCrc=crc32Final(r),this.recordWriter.writeFooter(h),this.recordWriter.writeMagic(),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset()}async registerSchema(e){const t=this.nextSchemaId++;return this.schemas.set(t,{...e,id:t}),this.statistics&&++this.statistics.schemaCount,t}async registerChannel(e){const t=this.nextChannelId++;return this.channels.set(t,{...e,id:t}),this.statistics&&++this.statistics.channelCount,t}async addMessage(e){if(this.statistics&&(this.statistics.messageCount===0n?(this.statistics.messageStartTime=e.logTime,this.statistics.messageEndTime=e.logTime):(e.logTime<this.statistics.messageStartTime&&(this.statistics.messageStartTime=e.logTime),e.logTime>this.statistics.messageEndTime&&(this.statistics.messageEndTime=e.logTime)),this.statistics.channelMessageCounts.set(e.channelId,(this.statistics.channelMessageCounts.get(e.channelId)??0n)+1n),++this.statistics.messageCount),!this.writtenChannelIds.has(e.channelId)){const t=this.channels.get(e.channelId);if(!t)throw new Error(`McapWriter#addMessage failed: missing channel for id ${e.channelId}`);if(t.schemaId!==0&&!this.writtenSchemaIds.has(t.schemaId)){const r=this.schemas.get(t.schemaId);if(!r)throw new Error(`McapWriter#addMessage failed: missing schema for id ${t.schemaId}`);this.chunkBuilder?this.chunkBuilder.addSchema(r):this.recordWriter.writeSchema(r),this.writtenSchemaIds.add(t.schemaId)}this.chunkBuilder?this.chunkBuilder.addChannel(t):this.recordWriter.writeChannel(t),this.writtenChannelIds.add(e.channelId)}this.chunkBuilder?this.chunkBuilder.addMessage(e):this.recordWriter.writeMessage(e),this.chunkBuilder&&this.chunkBuilder.byteLength>this.chunkSize&&await this.finalizeChunk()}async addAttachment(e){const t=this.recordWriter.writeAttachment(e);if(this.statistics&&++this.statistics.attachmentCount,this.attachmentIndices){const r=this.writable.position();this.attachmentIndices.push({logTime:e.logTime,createTime:e.createTime,name:e.name,mediaType:e.mediaType,offset:r,dataSize:BigInt(e.data.byteLength),length:t})}this.dataSectionCrc=crc32Update(this.dataSectionCrc,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset()}async addMetadata(e){const t=this.recordWriter.writeMetadata(e);if(this.statistics&&++this.statistics.metadataCount,this.metadataIndices){const r=this.writable.position();this.metadataIndices.push({name:e.name,offset:r,length:t})}this.dataSectionCrc=crc32Update(this.dataSectionCrc,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset()}async finalizeChunk(){if(!this.chunkBuilder||this.chunkBuilder.numMessages===0)return;this.statistics&&++this.statistics.chunkCount;const e=this.chunkBuilder.buffer,t=BigInt(e.length),r=crc32(e);let i="",a=e;this.compressChunk&&({compression:i,compressedData:a}=this.compressChunk(e));const h={messageStartTime:this.chunkBuilder.messageStartTime,messageEndTime:this.chunkBuilder.messageEndTime,uncompressedSize:t,uncompressedCrc:r,compression:i,records:a},c=this.writable.position(),s=this.recordWriter.writeChunk(h),o=this.chunkIndices?new Map:void 0;this.dataSectionCrc=crc32Update(this.dataSectionCrc,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset();const u=this.writable.position();let f=0n;for(const d of this.chunkBuilder.indices)o?.set(d.channelId,u+f),f+=this.recordWriter.writeMessageIndex(d);this.chunkIndices&&this.chunkIndices.push({messageStartTime:h.messageStartTime,messageEndTime:h.messageEndTime,chunkStartOffset:c,chunkLength:s,messageIndexOffsets:o,messageIndexLength:f,compression:h.compression,compressedSize:BigInt(h.records.byteLength),uncompressedSize:h.uncompressedSize}),this.chunkBuilder.reset(),this.dataSectionCrc=crc32Update(this.dataSectionCrc,this.recordWriter.buffer),await this.writable.write(this.recordWriter.buffer),this.recordWriter.reset()}}function te(n){return n.byteLength>=MCAP_MAGIC.length&&MCAP_MAGIC.every((e,t)=>e===n.getUint8(t))}}}]);

//# sourceMappingURL=5811.01e3310f01a1c05fe384.js.map