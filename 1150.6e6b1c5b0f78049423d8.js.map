{"version":3,"file":"1150.6e6b1c5b0f78049423d8.js","mappings":"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","sources":["webpack:///../../node_modules/@protobufjs/aspromise/index.js","webpack:///../../node_modules/@protobufjs/base64/index.js","webpack:///../../node_modules/@protobufjs/codegen/index.js","webpack:///../../node_modules/@protobufjs/eventemitter/index.js","webpack:///../../node_modules/@protobufjs/fetch/index.js","webpack:///../../node_modules/@protobufjs/float/index.js","webpack:///../../node_modules/@protobufjs/inquire/index.js","webpack:///../../node_modules/@protobufjs/path/index.js","webpack:///../../node_modules/@protobufjs/pool/index.js","webpack:///../../node_modules/@protobufjs/utf8/index.js","webpack:///../../node_modules/flatbuffers/mjs/constants.js","webpack:///../../node_modules/flatbuffers/mjs/utils.js","webpack:///../../node_modules/flatbuffers/mjs/encoding.js","webpack:///../../node_modules/flatbuffers/mjs/byte-buffer.js","webpack:///../../node_modules/flatbuffers/mjs/builder.js","webpack:///../../node_modules/flatbuffers_reflection/dist/esm/reflection_generated.js","webpack:///../../node_modules/flatbuffers_reflection/dist/esm/reflection.js","webpack:///../../node_modules/protobufjs/ext/descriptor/index.js","webpack:///../../node_modules/protobufjs/index.js","webpack:///../../node_modules/protobufjs/src/common.js","webpack:///../../node_modules/protobufjs/src/converter.js","webpack:///../../node_modules/protobufjs/src/decoder.js","webpack:///../../node_modules/protobufjs/src/encoder.js","webpack:///../../node_modules/protobufjs/src/enum.js","webpack:///../../node_modules/protobufjs/src/field.js","webpack:///../../node_modules/protobufjs/src/index-light.js","webpack:///../../node_modules/protobufjs/src/index-minimal.js","webpack:///../../node_modules/protobufjs/src/index.js","webpack:///../../node_modules/protobufjs/src/mapfield.js","webpack:///../../node_modules/protobufjs/src/message.js","webpack:///../../node_modules/protobufjs/src/method.js","webpack:///../../node_modules/protobufjs/src/namespace.js","webpack:///../../node_modules/protobufjs/src/object.js","webpack:///../../node_modules/protobufjs/src/oneof.js","webpack:///../../node_modules/protobufjs/src/parse.js","webpack:///../../node_modules/protobufjs/src/reader.js","webpack:///../../node_modules/protobufjs/src/reader_buffer.js","webpack:///../../node_modules/protobufjs/src/root.js","webpack:///../../node_modules/protobufjs/src/roots.js","webpack:///../../node_modules/protobufjs/src/rpc.js","webpack:///../../node_modules/protobufjs/src/rpc/service.js","webpack:///../../node_modules/protobufjs/src/service.js","webpack:///../../node_modules/protobufjs/src/tokenize.js","webpack:///../../node_modules/protobufjs/src/type.js","webpack:///../../node_modules/protobufjs/src/types.js","webpack:///../../node_modules/protobufjs/src/util.js","webpack:///../../node_modules/protobufjs/src/util/longbits.js","webpack:///../../node_modules/protobufjs/src/util/minimal.js","webpack:///../../node_modules/protobufjs/src/verifier.js","webpack:///../../node_modules/protobufjs/src/wrappers.js","webpack:///../../node_modules/protobufjs/src/writer.js","webpack:///../../node_modules/protobufjs/src/writer_buffer.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","export const SIZEOF_SHORT = 2;\nexport const SIZEOF_INT = 4;\nexport const FILE_IDENTIFIER_LENGTH = 4;\nexport const SIZE_PREFIX_LENGTH = 4;\n","export const int32 = new Int32Array(2);\nexport const float32 = new Float32Array(int32.buffer);\nexport const float64 = new Float64Array(int32.buffer);\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n","export var Encoding;\n(function (Encoding) {\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\n})(Encoding || (Encoding = {}));\n","import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants.js\";\nimport { int32, isLittleEndian, float32, float64 } from \"./utils.js\";\nimport { Encoding } from \"./encoding.js\";\nexport class ByteBuffer {\n    /**\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\n     */\n    constructor(bytes_) {\n        this.bytes_ = bytes_;\n        this.position_ = 0;\n        this.text_decoder_ = new TextDecoder();\n    }\n    /**\n     * Create and allocate a new ByteBuffer with a given size.\n     */\n    static allocate(byte_size) {\n        return new ByteBuffer(new Uint8Array(byte_size));\n    }\n    clear() {\n        this.position_ = 0;\n    }\n    /**\n     * Get the underlying `Uint8Array`.\n     */\n    bytes() {\n        return this.bytes_;\n    }\n    /**\n     * Get the buffer's position.\n     */\n    position() {\n        return this.position_;\n    }\n    /**\n     * Set the buffer's position.\n     */\n    setPosition(position) {\n        this.position_ = position;\n    }\n    /**\n     * Get the buffer's capacity.\n     */\n    capacity() {\n        return this.bytes_.length;\n    }\n    readInt8(offset) {\n        return this.readUint8(offset) << 24 >> 24;\n    }\n    readUint8(offset) {\n        return this.bytes_[offset];\n    }\n    readInt16(offset) {\n        return this.readUint16(offset) << 16 >> 16;\n    }\n    readUint16(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n    }\n    readInt32(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n    }\n    readUint32(offset) {\n        return this.readInt32(offset) >>> 0;\n    }\n    readInt64(offset) {\n        return BigInt.asIntN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readUint64(offset) {\n        return BigInt.asUintN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readFloat32(offset) {\n        int32[0] = this.readInt32(offset);\n        return float32[0];\n    }\n    readFloat64(offset) {\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n        return float64[0];\n    }\n    writeInt8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeUint8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeInt16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeUint16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeInt32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeUint32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeInt64(offset, value) {\n        this.writeInt32(offset, Number(BigInt.asIntN(32, value)));\n        this.writeInt32(offset + 4, Number(BigInt.asIntN(32, value >> BigInt(32))));\n    }\n    writeUint64(offset, value) {\n        this.writeUint32(offset, Number(BigInt.asUintN(32, value)));\n        this.writeUint32(offset + 4, Number(BigInt.asUintN(32, value >> BigInt(32))));\n    }\n    writeFloat32(offset, value) {\n        float32[0] = value;\n        this.writeInt32(offset, int32[0]);\n    }\n    writeFloat64(offset, value) {\n        float64[0] = value;\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\n    }\n    /**\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n     * schema does not include a file_identifier (likely points at padding or the\n     * start of a the root vtable).\n     */\n    getBufferIdentifier() {\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\n            FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\n        }\n        let result = \"\";\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\n        }\n        return result;\n    }\n    /**\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\n     * field is not present.\n     */\n    __offset(bb_pos, vtable_offset) {\n        const vtable = bb_pos - this.readInt32(bb_pos);\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n    }\n    /**\n     * Initialize any Table-derived type to point to the union at the given offset.\n     */\n    __union(t, offset) {\n        t.bb_pos = offset + this.readInt32(offset);\n        t.bb = this;\n        return t;\n    }\n    /**\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n     * This allocates a new string and converts to wide chars upon each access.\n     *\n     * To avoid the conversion to string, pass Encoding.UTF8_BYTES as the\n     * \"optionalEncoding\" argument. This is useful for avoiding conversion when\n     * the data will just be packaged back up in another FlatBuffer later on.\n     *\n     * @param offset\n     * @param opt_encoding Defaults to UTF16_STRING\n     */\n    __string(offset, opt_encoding) {\n        offset += this.readInt32(offset);\n        const length = this.readInt32(offset);\n        offset += SIZEOF_INT;\n        const utf8bytes = this.bytes_.subarray(offset, offset + length);\n        if (opt_encoding === Encoding.UTF8_BYTES)\n            return utf8bytes;\n        else\n            return this.text_decoder_.decode(utf8bytes);\n    }\n    /**\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\n     * if a string then return a new one\n     *\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\n     * makes the behaviour of __union_with_string different compared to __union\n     */\n    __union_with_string(o, offset) {\n        if (typeof o === 'string') {\n            return this.__string(offset);\n        }\n        return this.__union(o, offset);\n    }\n    /**\n     * Retrieve the relative offset stored at \"offset\"\n     */\n    __indirect(offset) {\n        return offset + this.readInt32(offset);\n    }\n    /**\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector(offset) {\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\n    }\n    /**\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector_len(offset) {\n        return this.readInt32(offset + this.readInt32(offset));\n    }\n    __has_identifier(ident) {\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: file identifier must be length ' +\n                FILE_IDENTIFIER_LENGTH);\n        }\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * A helper function for generating list for obj api\n     */\n    createScalarList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val);\n            }\n        }\n        return ret;\n    }\n    /**\n     * A helper function for generating list for obj api\n     * @param listAccessor function that accepts an index and return data at that index\n     * @param listLength listLength\n     * @param res result list\n     */\n    createObjList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val.unpack());\n            }\n        }\n        return ret;\n    }\n}\n","import { ByteBuffer } from \"./byte-buffer.js\";\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants.js\";\nexport class Builder {\n    /**\n     * Create a FlatBufferBuilder.\n     */\n    constructor(opt_initial_size) {\n        /** Minimum alignment encountered so far. */\n        this.minalign = 1;\n        /** The vtable for the current table. */\n        this.vtable = null;\n        /** The amount of fields we're actually using. */\n        this.vtable_in_use = 0;\n        /** Whether we are currently serializing a table. */\n        this.isNested = false;\n        /** Starting offset of the current struct/table. */\n        this.object_start = 0;\n        /** List of offsets of all vtables. */\n        this.vtables = [];\n        /** For the current vector being built. */\n        this.vector_num_elems = 0;\n        /** False omits default values from the serialized data */\n        this.force_defaults = false;\n        this.string_maps = null;\n        this.text_encoder = new TextEncoder();\n        let initial_size;\n        if (!opt_initial_size) {\n            initial_size = 1024;\n        }\n        else {\n            initial_size = opt_initial_size;\n        }\n        /**\n         * @type {ByteBuffer}\n         * @private\n         */\n        this.bb = ByteBuffer.allocate(initial_size);\n        this.space = initial_size;\n    }\n    clear() {\n        this.bb.clear();\n        this.space = this.bb.capacity();\n        this.minalign = 1;\n        this.vtable = null;\n        this.vtable_in_use = 0;\n        this.isNested = false;\n        this.object_start = 0;\n        this.vtables = [];\n        this.vector_num_elems = 0;\n        this.force_defaults = false;\n        this.string_maps = null;\n    }\n    /**\n     * In order to save space, fields that are set to their default value\n     * don't get serialized into the buffer. Forcing defaults provides a\n     * way to manually disable this optimization.\n     *\n     * @param forceDefaults true always serializes default values\n     */\n    forceDefaults(forceDefaults) {\n        this.force_defaults = forceDefaults;\n    }\n    /**\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n     * called finish(). The actual data starts at the ByteBuffer's current position,\n     * not necessarily at 0.\n     */\n    dataBuffer() {\n        return this.bb;\n    }\n    /**\n     * Get the bytes representing the FlatBuffer. Only call this after you've\n     * called finish().\n     */\n    asUint8Array() {\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n    }\n    /**\n     * Prepare to write an element of `size` after `additional_bytes` have been\n     * written, e.g. if you write a string, you need to align such the int length\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\n     * you need to do is alignment, `additional_bytes` will be 0.\n     *\n     * @param size This is the of the new element to write\n     * @param additional_bytes The padding size\n     */\n    prep(size, additional_bytes) {\n        // Track the biggest thing we've ever aligned to.\n        if (size > this.minalign) {\n            this.minalign = size;\n        }\n        // Find the amount of alignment needed such that `size` is properly\n        // aligned after `additional_bytes`\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n        // Reallocate the buffer if needed.\n        while (this.space < align_size + size + additional_bytes) {\n            const old_buf_size = this.bb.capacity();\n            this.bb = Builder.growByteBuffer(this.bb);\n            this.space += this.bb.capacity() - old_buf_size;\n        }\n        this.pad(align_size);\n    }\n    pad(byte_size) {\n        for (let i = 0; i < byte_size; i++) {\n            this.bb.writeInt8(--this.space, 0);\n        }\n    }\n    writeInt8(value) {\n        this.bb.writeInt8(this.space -= 1, value);\n    }\n    writeInt16(value) {\n        this.bb.writeInt16(this.space -= 2, value);\n    }\n    writeInt32(value) {\n        this.bb.writeInt32(this.space -= 4, value);\n    }\n    writeInt64(value) {\n        this.bb.writeInt64(this.space -= 8, value);\n    }\n    writeFloat32(value) {\n        this.bb.writeFloat32(this.space -= 4, value);\n    }\n    writeFloat64(value) {\n        this.bb.writeFloat64(this.space -= 8, value);\n    }\n    /**\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int8` to add the buffer.\n     */\n    addInt8(value) {\n        this.prep(1, 0);\n        this.writeInt8(value);\n    }\n    /**\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int16` to add the buffer.\n     */\n    addInt16(value) {\n        this.prep(2, 0);\n        this.writeInt16(value);\n    }\n    /**\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int32` to add the buffer.\n     */\n    addInt32(value) {\n        this.prep(4, 0);\n        this.writeInt32(value);\n    }\n    /**\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int64` to add the buffer.\n     */\n    addInt64(value) {\n        this.prep(8, 0);\n        this.writeInt64(value);\n    }\n    /**\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float32` to add the buffer.\n     */\n    addFloat32(value) {\n        this.prep(4, 0);\n        this.writeFloat32(value);\n    }\n    /**\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float64` to add the buffer.\n     */\n    addFloat64(value) {\n        this.prep(8, 0);\n        this.writeFloat64(value);\n    }\n    addFieldInt8(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt8(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt16(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt16(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt64(voffset, value, defaultValue) {\n        if (this.force_defaults || value !== defaultValue) {\n            this.addInt64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat64(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldOffset(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addOffset(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n     */\n    addFieldStruct(voffset, value, defaultValue) {\n        if (value != defaultValue) {\n            this.nested(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structures are always stored inline, they need to be created right\n     * where they're used.  You'll get this assertion failure if you\n     * created it elsewhere.\n     */\n    nested(obj) {\n        if (obj != this.offset()) {\n            throw new Error('FlatBuffers: struct must be serialized inline.');\n        }\n    }\n    /**\n     * Should not be creating any other object, string or vector\n     * while an object is being constructed\n     */\n    notNested() {\n        if (this.isNested) {\n            throw new Error('FlatBuffers: object serialization must not be nested.');\n        }\n    }\n    /**\n     * Set the current vtable at `voffset` to the current location in the buffer.\n     */\n    slot(voffset) {\n        if (this.vtable !== null)\n            this.vtable[voffset] = this.offset();\n    }\n    /**\n     * @returns Offset relative to the end of the buffer.\n     */\n    offset() {\n        return this.bb.capacity() - this.space;\n    }\n    /**\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\n     * the end of the new buffer (since we build the buffer backwards).\n     *\n     * @param bb The current buffer with the existing data\n     * @returns A new byte buffer with the old data copied\n     * to it. The data is located at the end of the buffer.\n     *\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n     * it a uint8Array we need to suppress the type check:\n     * @suppress {checkTypes}\n     */\n    static growByteBuffer(bb) {\n        const old_buf_size = bb.capacity();\n        // Ensure we don't grow beyond what fits in an int.\n        if (old_buf_size & 0xC0000000) {\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n        }\n        const new_buf_size = old_buf_size << 1;\n        const nbb = ByteBuffer.allocate(new_buf_size);\n        nbb.setPosition(new_buf_size - old_buf_size);\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n        return nbb;\n    }\n    /**\n     * Adds on offset, relative to where it will be written.\n     *\n     * @param offset The offset to add.\n     */\n    addOffset(offset) {\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\n    }\n    /**\n     * Start encoding a new object in the buffer.  Users will not usually need to\n     * call this directly. The FlatBuffers compiler will generate helper methods\n     * that call this method internally.\n     */\n    startObject(numfields) {\n        this.notNested();\n        if (this.vtable == null) {\n            this.vtable = [];\n        }\n        this.vtable_in_use = numfields;\n        for (let i = 0; i < numfields; i++) {\n            this.vtable[i] = 0; // This will push additional elements as needed\n        }\n        this.isNested = true;\n        this.object_start = this.offset();\n    }\n    /**\n     * Finish off writing the object that is under construction.\n     *\n     * @returns The offset to the object inside `dataBuffer`\n     */\n    endObject() {\n        if (this.vtable == null || !this.isNested) {\n            throw new Error('FlatBuffers: endObject called without startObject');\n        }\n        this.addInt32(0);\n        const vtableloc = this.offset();\n        // Trim trailing zeroes.\n        let i = this.vtable_in_use - 1;\n        // eslint-disable-next-line no-empty\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\n        const trimmed_size = i + 1;\n        // Write out the current vtable.\n        for (; i >= 0; i--) {\n            // Offset relative to the start of the table.\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n        }\n        const standard_fields = 2; // The fields below:\n        this.addInt16(vtableloc - this.object_start);\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\n        this.addInt16(len);\n        // Search for an existing vtable that matches the current one.\n        let existing_vtable = 0;\n        const vt1 = this.space;\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\n            const vt2 = this.bb.capacity() - this.vtables[i];\n            if (len == this.bb.readInt16(vt2)) {\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n                        continue outer_loop;\n                    }\n                }\n                existing_vtable = this.vtables[i];\n                break;\n            }\n        }\n        if (existing_vtable) {\n            // Found a match:\n            // Remove the current vtable.\n            this.space = this.bb.capacity() - vtableloc;\n            // Point table to existing vtable.\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n        }\n        else {\n            // No match:\n            // Add the location of the current vtable to the list of vtables.\n            this.vtables.push(this.offset());\n            // Point table to current vtable.\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n        }\n        this.isNested = false;\n        return vtableloc;\n    }\n    /**\n     * Finalize a buffer, poiting to the given `root_table`.\n     */\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\n        if (opt_file_identifier) {\n            const file_identifier = opt_file_identifier;\n            this.prep(this.minalign, SIZEOF_INT +\n                FILE_IDENTIFIER_LENGTH + size_prefix);\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\n                throw new Error('FlatBuffers: file identifier must be length ' +\n                    FILE_IDENTIFIER_LENGTH);\n            }\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n                this.writeInt8(file_identifier.charCodeAt(i));\n            }\n        }\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\n        this.addOffset(root_table);\n        if (size_prefix) {\n            this.addInt32(this.bb.capacity() - this.space);\n        }\n        this.bb.setPosition(this.space);\n    }\n    /**\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\n     */\n    finishSizePrefixed(root_table, opt_file_identifier) {\n        this.finish(root_table, opt_file_identifier, true);\n    }\n    /**\n     * This checks a required field has been set in a given table that has\n     * just been constructed.\n     */\n    requiredField(table, field) {\n        const table_start = this.bb.capacity() - table;\n        const vtable_start = table_start - this.bb.readInt32(table_start);\n        const ok = field < this.bb.readInt16(vtable_start) &&\n            this.bb.readInt16(vtable_start + field) != 0;\n        // If this fails, the caller will show what field needs to be set.\n        if (!ok) {\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\n        }\n    }\n    /**\n     * Start a new array/vector of objects.  Users usually will not call\n     * this directly. The FlatBuffers compiler will create a start/end\n     * method for vector types in generated code.\n     *\n     * @param elem_size The size of each element in the array\n     * @param num_elems The number of elements in the array\n     * @param alignment The alignment of the array\n     */\n    startVector(elem_size, num_elems, alignment) {\n        this.notNested();\n        this.vector_num_elems = num_elems;\n        this.prep(SIZEOF_INT, elem_size * num_elems);\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n    }\n    /**\n     * Finish off the creation of an array and all its elements. The array must be\n     * created with `startVector`.\n     *\n     * @returns The offset at which the newly created array\n     * starts.\n     */\n    endVector() {\n        this.writeInt32(this.vector_num_elems);\n        return this.offset();\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\n     * already been seen, we return the offset of the already written string\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createSharedString(s) {\n        if (!s) {\n            return 0;\n        }\n        if (!this.string_maps) {\n            this.string_maps = new Map();\n        }\n        if (this.string_maps.has(s)) {\n            return this.string_maps.get(s);\n        }\n        const offset = this.createString(s);\n        this.string_maps.set(s, offset);\n        return offset;\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createString(s) {\n        if (s === null || s === undefined) {\n            return 0;\n        }\n        let utf8;\n        if (s instanceof Uint8Array) {\n            utf8 = s;\n        }\n        else {\n            utf8 = this.text_encoder.encode(s);\n        }\n        this.addInt8(0);\n        this.startVector(1, utf8.length, 1);\n        this.bb.setPosition(this.space -= utf8.length);\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n            bytes[offset++] = utf8[i];\n        }\n        return this.endVector();\n    }\n    /**\n     * A helper function to pack an object\n     *\n     * @returns offset of obj\n     */\n    createObjectOffset(obj) {\n        if (obj === null) {\n            return 0;\n        }\n        if (typeof obj === 'string') {\n            return this.createString(obj);\n        }\n        else {\n            return obj.pack(this);\n        }\n    }\n    /**\n     * A helper function to pack a list of object\n     *\n     * @returns list of offsets of each non null object\n     */\n    createObjectOffsetList(list) {\n        const ret = [];\n        for (let i = 0; i < list.length; ++i) {\n            const val = list[i];\n            if (val !== null) {\n                ret.push(this.createObjectOffset(val));\n            }\n            else {\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\n            }\n        }\n        return ret;\n    }\n    createStructOffsetList(list, startFunc) {\n        startFunc(this, list.length);\n        this.createObjectOffsetList(list.slice().reverse());\n        return this.endVector();\n    }\n}\n","/* eslint-disable */\n// This is a generated file, generated using the flatc flatbuffer\n// compiler.\nimport * as flatbuffers from 'flatbuffers';\n// @ts-ignore\nimport { BaseType as reflectionBaseType, Enum as reflectionEnum, EnumVal as reflectionEnumVal, Field as reflectionField, KeyValue as reflectionKeyValue, Object_ as reflectionObject, RPCCall as reflectionRPCCall, Schema as reflectionSchema, SchemaFile as reflectionSchemaFile, Service as reflectionService, Type as reflectionType } from './reflection_generated';\nexport var BaseType;\n(function (BaseType) {\n    BaseType[BaseType[\"None\"] = 0] = \"None\";\n    BaseType[BaseType[\"UType\"] = 1] = \"UType\";\n    BaseType[BaseType[\"Bool\"] = 2] = \"Bool\";\n    BaseType[BaseType[\"Byte\"] = 3] = \"Byte\";\n    BaseType[BaseType[\"UByte\"] = 4] = \"UByte\";\n    BaseType[BaseType[\"Short\"] = 5] = \"Short\";\n    BaseType[BaseType[\"UShort\"] = 6] = \"UShort\";\n    BaseType[BaseType[\"Int\"] = 7] = \"Int\";\n    BaseType[BaseType[\"UInt\"] = 8] = \"UInt\";\n    BaseType[BaseType[\"Long\"] = 9] = \"Long\";\n    BaseType[BaseType[\"ULong\"] = 10] = \"ULong\";\n    BaseType[BaseType[\"Float\"] = 11] = \"Float\";\n    BaseType[BaseType[\"Double\"] = 12] = \"Double\";\n    BaseType[BaseType[\"String\"] = 13] = \"String\";\n    BaseType[BaseType[\"Vector\"] = 14] = \"Vector\";\n    BaseType[BaseType[\"Obj\"] = 15] = \"Obj\";\n    BaseType[BaseType[\"Union\"] = 16] = \"Union\";\n    BaseType[BaseType[\"Array\"] = 17] = \"Array\";\n    BaseType[BaseType[\"MaxBaseType\"] = 18] = \"MaxBaseType\";\n})(BaseType || (BaseType = {}));\n/**\n * New schema language features that are not supported by old code generators.\n */\n// ts-prune-ignore-next\nexport var AdvancedFeatures;\n(function (AdvancedFeatures) {\n    AdvancedFeatures[\"AdvancedArrayFeatures\"] = \"1\";\n    AdvancedFeatures[\"AdvancedUnionFeatures\"] = \"2\";\n    AdvancedFeatures[\"OptionalScalars\"] = \"4\";\n    AdvancedFeatures[\"DefaultVectorsAndStrings\"] = \"8\";\n})(AdvancedFeatures || (AdvancedFeatures = {}));\nexport class Type {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsType(bb, obj) {\n        return (obj || new Type()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsType(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Type()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    baseType() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : reflectionBaseType.None;\n    }\n    mutate_base_type(value) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, value);\n        return true;\n    }\n    element() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : reflectionBaseType.None;\n    }\n    mutate_element(value) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, value);\n        return true;\n    }\n    index() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : -1;\n    }\n    mutate_index(value) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt32(this.bb_pos + offset, value);\n        return true;\n    }\n    fixedLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;\n    }\n    mutate_fixed_length(value) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeUint16(this.bb_pos + offset, value);\n        return true;\n    }\n    /**\n     * The size (octets) of the `base_type` field.\n     */\n    baseSize() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.readUint32(this.bb_pos + offset) : 4;\n    }\n    mutate_base_size(value) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeUint32(this.bb_pos + offset, value);\n        return true;\n    }\n    /**\n     * The size (octets) of the `element` field, if present.\n     */\n    elementSize() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n    }\n    mutate_element_size(value) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeUint32(this.bb_pos + offset, value);\n        return true;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.Type';\n    }\n    static startType(builder) {\n        builder.startObject(6);\n    }\n    static addBaseType(builder, baseType) {\n        builder.addFieldInt8(0, baseType, reflectionBaseType.None);\n    }\n    static addElement(builder, element) {\n        builder.addFieldInt8(1, element, reflectionBaseType.None);\n    }\n    static addIndex(builder, index) {\n        builder.addFieldInt32(2, index, -1);\n    }\n    static addFixedLength(builder, fixedLength) {\n        builder.addFieldInt16(3, fixedLength, 0);\n    }\n    static addBaseSize(builder, baseSize) {\n        builder.addFieldInt32(4, baseSize, 4);\n    }\n    static addElementSize(builder, elementSize) {\n        builder.addFieldInt32(5, elementSize, 0);\n    }\n    static endType(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createType(builder, baseType, element, index, fixedLength, baseSize, elementSize) {\n        Type.startType(builder);\n        Type.addBaseType(builder, baseType);\n        Type.addElement(builder, element);\n        Type.addIndex(builder, index);\n        Type.addFixedLength(builder, fixedLength);\n        Type.addBaseSize(builder, baseSize);\n        Type.addElementSize(builder, elementSize);\n        return Type.endType(builder);\n    }\n    unpack() {\n        return new TypeT(this.baseType(), this.element(), this.index(), this.fixedLength(), this.baseSize(), this.elementSize());\n    }\n    unpackTo(_o) {\n        _o.baseType = this.baseType();\n        _o.element = this.element();\n        _o.index = this.index();\n        _o.fixedLength = this.fixedLength();\n        _o.baseSize = this.baseSize();\n        _o.elementSize = this.elementSize();\n    }\n}\nexport class TypeT {\n    constructor(baseType = reflectionBaseType.None, element = reflectionBaseType.None, index = -1, fixedLength = 0, baseSize = 4, elementSize = 0) {\n        this.baseType = baseType;\n        this.element = element;\n        this.index = index;\n        this.fixedLength = fixedLength;\n        this.baseSize = baseSize;\n        this.elementSize = elementSize;\n    }\n    pack(builder) {\n        return reflectionType.createType(builder, this.baseType, this.element, this.index, this.fixedLength, this.baseSize, this.elementSize);\n    }\n}\nexport class KeyValue {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsKeyValue(bb, obj) {\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsKeyValue(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    key(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    value(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.KeyValue';\n    }\n    static startKeyValue(builder) {\n        builder.startObject(2);\n    }\n    static addKey(builder, keyOffset) {\n        builder.addFieldOffset(0, keyOffset, 0);\n    }\n    static addValue(builder, valueOffset) {\n        builder.addFieldOffset(1, valueOffset, 0);\n    }\n    static endKeyValue(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // key\n        return offset;\n    }\n    static createKeyValue(builder, keyOffset, valueOffset) {\n        KeyValue.startKeyValue(builder);\n        KeyValue.addKey(builder, keyOffset);\n        KeyValue.addValue(builder, valueOffset);\n        return KeyValue.endKeyValue(builder);\n    }\n    unpack() {\n        return new KeyValueT(this.key(), this.value());\n    }\n    unpackTo(_o) {\n        _o.key = this.key();\n        _o.value = this.value();\n    }\n}\nexport class KeyValueT {\n    constructor(key = null, value = null) {\n        this.key = key;\n        this.value = value;\n    }\n    pack(builder) {\n        const key = (this.key !== null ? builder.createString(this.key) : 0);\n        const value = (this.value !== null ? builder.createString(this.value) : 0);\n        return reflectionKeyValue.createKeyValue(builder, key, value);\n    }\n}\nexport class EnumVal {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsEnumVal(bb, obj) {\n        return (obj || new EnumVal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsEnumVal(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new EnumVal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    value() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');\n    }\n    mutate_value(value) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt64(this.bb_pos + offset, value);\n        return true;\n    }\n    unionType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new reflectionType()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    documentation(index, optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n    documentationLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.EnumVal';\n    }\n    static startEnumVal(builder) {\n        builder.startObject(5);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addValue(builder, value) {\n        builder.addFieldInt64(1, value, BigInt('0'));\n    }\n    static addUnionType(builder, unionTypeOffset) {\n        builder.addFieldOffset(3, unionTypeOffset, 0);\n    }\n    static addDocumentation(builder, documentationOffset) {\n        builder.addFieldOffset(4, documentationOffset, 0);\n    }\n    static createDocumentationVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startDocumentationVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endEnumVal(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // name\n        return offset;\n    }\n    unpack() {\n        return new EnumValT(this.name(), this.value(), (this.unionType() !== null ? this.unionType().unpack() : null), this.bb.createScalarList(this.documentation.bind(this), this.documentationLength()));\n    }\n    unpackTo(_o) {\n        _o.name = this.name();\n        _o.value = this.value();\n        _o.unionType = (this.unionType() !== null ? this.unionType().unpack() : null);\n        _o.documentation = this.bb.createScalarList(this.documentation.bind(this), this.documentationLength());\n    }\n}\nexport class EnumValT {\n    constructor(name = null, value = BigInt('0'), unionType = null, documentation = []) {\n        this.name = name;\n        this.value = value;\n        this.unionType = unionType;\n        this.documentation = documentation;\n    }\n    pack(builder) {\n        const name = (this.name !== null ? builder.createString(this.name) : 0);\n        const unionType = (this.unionType !== null ? this.unionType.pack(builder) : 0);\n        const documentation = reflectionEnumVal.createDocumentationVector(builder, builder.createObjectOffsetList(this.documentation));\n        reflectionEnumVal.startEnumVal(builder);\n        reflectionEnumVal.addName(builder, name);\n        reflectionEnumVal.addValue(builder, this.value);\n        reflectionEnumVal.addUnionType(builder, unionType);\n        reflectionEnumVal.addDocumentation(builder, documentation);\n        return reflectionEnumVal.endEnumVal(builder);\n    }\n}\nexport class Enum {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsEnum(bb, obj) {\n        return (obj || new Enum()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsEnum(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Enum()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    values(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new reflectionEnumVal()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    valuesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    isUnion() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    mutate_is_union(value) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, +value);\n        return true;\n    }\n    underlyingType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new reflectionType()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    attributes(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new reflectionKeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    attributesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    documentation(index, optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n    documentationLength() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    declarationFile(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.Enum';\n    }\n    static startEnum(builder) {\n        builder.startObject(7);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addValues(builder, valuesOffset) {\n        builder.addFieldOffset(1, valuesOffset, 0);\n    }\n    static createValuesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startValuesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addIsUnion(builder, isUnion) {\n        builder.addFieldInt8(2, +isUnion, +false);\n    }\n    static addUnderlyingType(builder, underlyingTypeOffset) {\n        builder.addFieldOffset(3, underlyingTypeOffset, 0);\n    }\n    static addAttributes(builder, attributesOffset) {\n        builder.addFieldOffset(4, attributesOffset, 0);\n    }\n    static createAttributesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startAttributesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDocumentation(builder, documentationOffset) {\n        builder.addFieldOffset(5, documentationOffset, 0);\n    }\n    static createDocumentationVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startDocumentationVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDeclarationFile(builder, declarationFileOffset) {\n        builder.addFieldOffset(6, declarationFileOffset, 0);\n    }\n    static endEnum(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // name\n        builder.requiredField(offset, 6); // values\n        builder.requiredField(offset, 10); // underlying_type\n        return offset;\n    }\n    unpack() {\n        return new EnumT(this.name(), this.bb.createObjList(this.values.bind(this), this.valuesLength()), this.isUnion(), (this.underlyingType() !== null ? this.underlyingType().unpack() : null), this.bb.createObjList(this.attributes.bind(this), this.attributesLength()), this.bb.createScalarList(this.documentation.bind(this), this.documentationLength()), this.declarationFile());\n    }\n    unpackTo(_o) {\n        _o.name = this.name();\n        _o.values = this.bb.createObjList(this.values.bind(this), this.valuesLength());\n        _o.isUnion = this.isUnion();\n        _o.underlyingType = (this.underlyingType() !== null ? this.underlyingType().unpack() : null);\n        _o.attributes = this.bb.createObjList(this.attributes.bind(this), this.attributesLength());\n        _o.documentation = this.bb.createScalarList(this.documentation.bind(this), this.documentationLength());\n        _o.declarationFile = this.declarationFile();\n    }\n}\nexport class EnumT {\n    constructor(name = null, values = [], isUnion = false, underlyingType = null, attributes = [], documentation = [], declarationFile = null) {\n        this.name = name;\n        this.values = values;\n        this.isUnion = isUnion;\n        this.underlyingType = underlyingType;\n        this.attributes = attributes;\n        this.documentation = documentation;\n        this.declarationFile = declarationFile;\n    }\n    pack(builder) {\n        const name = (this.name !== null ? builder.createString(this.name) : 0);\n        const values = reflectionEnum.createValuesVector(builder, builder.createObjectOffsetList(this.values));\n        const underlyingType = (this.underlyingType !== null ? this.underlyingType.pack(builder) : 0);\n        const attributes = reflectionEnum.createAttributesVector(builder, builder.createObjectOffsetList(this.attributes));\n        const documentation = reflectionEnum.createDocumentationVector(builder, builder.createObjectOffsetList(this.documentation));\n        const declarationFile = (this.declarationFile !== null ? builder.createString(this.declarationFile) : 0);\n        reflectionEnum.startEnum(builder);\n        reflectionEnum.addName(builder, name);\n        reflectionEnum.addValues(builder, values);\n        reflectionEnum.addIsUnion(builder, this.isUnion);\n        reflectionEnum.addUnderlyingType(builder, underlyingType);\n        reflectionEnum.addAttributes(builder, attributes);\n        reflectionEnum.addDocumentation(builder, documentation);\n        reflectionEnum.addDeclarationFile(builder, declarationFile);\n        return reflectionEnum.endEnum(builder);\n    }\n}\nexport class Field {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsField(bb, obj) {\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsField(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    type(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new reflectionType()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    id() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;\n    }\n    mutate_id(value) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeUint16(this.bb_pos + offset, value);\n        return true;\n    }\n    offset() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;\n    }\n    mutate_offset(value) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeUint16(this.bb_pos + offset, value);\n        return true;\n    }\n    defaultInteger() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');\n    }\n    mutate_default_integer(value) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt64(this.bb_pos + offset, value);\n        return true;\n    }\n    defaultReal() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n    }\n    mutate_default_real(value) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeFloat64(this.bb_pos + offset, value);\n        return true;\n    }\n    deprecated() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    mutate_deprecated(value) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, +value);\n        return true;\n    }\n    required() {\n        const offset = this.bb.__offset(this.bb_pos, 18);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    mutate_required(value) {\n        const offset = this.bb.__offset(this.bb_pos, 18);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, +value);\n        return true;\n    }\n    key() {\n        const offset = this.bb.__offset(this.bb_pos, 20);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    mutate_key(value) {\n        const offset = this.bb.__offset(this.bb_pos, 20);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, +value);\n        return true;\n    }\n    attributes(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 22);\n        return offset ? (obj || new reflectionKeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    attributesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 22);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    documentation(index, optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 24);\n        return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n    documentationLength() {\n        const offset = this.bb.__offset(this.bb_pos, 24);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    optional() {\n        const offset = this.bb.__offset(this.bb_pos, 26);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    mutate_optional(value) {\n        const offset = this.bb.__offset(this.bb_pos, 26);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, +value);\n        return true;\n    }\n    /**\n     * Number of padding octets to always add after this field. Structs only.\n     */\n    padding() {\n        const offset = this.bb.__offset(this.bb_pos, 28);\n        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;\n    }\n    mutate_padding(value) {\n        const offset = this.bb.__offset(this.bb_pos, 28);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeUint16(this.bb_pos + offset, value);\n        return true;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.Field';\n    }\n    static startField(builder) {\n        builder.startObject(13);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addType(builder, typeOffset) {\n        builder.addFieldOffset(1, typeOffset, 0);\n    }\n    static addId(builder, id) {\n        builder.addFieldInt16(2, id, 0);\n    }\n    static addOffset(builder, offset) {\n        builder.addFieldInt16(3, offset, 0);\n    }\n    static addDefaultInteger(builder, defaultInteger) {\n        builder.addFieldInt64(4, defaultInteger, BigInt('0'));\n    }\n    static addDefaultReal(builder, defaultReal) {\n        builder.addFieldFloat64(5, defaultReal, 0.0);\n    }\n    static addDeprecated(builder, deprecated) {\n        builder.addFieldInt8(6, +deprecated, +false);\n    }\n    static addRequired(builder, required) {\n        builder.addFieldInt8(7, +required, +false);\n    }\n    static addKey(builder, key) {\n        builder.addFieldInt8(8, +key, +false);\n    }\n    static addAttributes(builder, attributesOffset) {\n        builder.addFieldOffset(9, attributesOffset, 0);\n    }\n    static createAttributesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startAttributesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDocumentation(builder, documentationOffset) {\n        builder.addFieldOffset(10, documentationOffset, 0);\n    }\n    static createDocumentationVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startDocumentationVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addOptional(builder, optional) {\n        builder.addFieldInt8(11, +optional, +false);\n    }\n    static addPadding(builder, padding) {\n        builder.addFieldInt16(12, padding, 0);\n    }\n    static endField(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // name\n        builder.requiredField(offset, 6); // type\n        return offset;\n    }\n    unpack() {\n        return new FieldT(this.name(), (this.type() !== null ? this.type().unpack() : null), this.id(), this.offset(), this.defaultInteger(), this.defaultReal(), this.deprecated(), this.required(), this.key(), this.bb.createObjList(this.attributes.bind(this), this.attributesLength()), this.bb.createScalarList(this.documentation.bind(this), this.documentationLength()), this.optional(), this.padding());\n    }\n    unpackTo(_o) {\n        _o.name = this.name();\n        _o.type = (this.type() !== null ? this.type().unpack() : null);\n        _o.id = this.id();\n        _o.offset = this.offset();\n        _o.defaultInteger = this.defaultInteger();\n        _o.defaultReal = this.defaultReal();\n        _o.deprecated = this.deprecated();\n        _o.required = this.required();\n        _o.key = this.key();\n        _o.attributes = this.bb.createObjList(this.attributes.bind(this), this.attributesLength());\n        _o.documentation = this.bb.createScalarList(this.documentation.bind(this), this.documentationLength());\n        _o.optional = this.optional();\n        _o.padding = this.padding();\n    }\n}\nexport class FieldT {\n    constructor(name = null, type = null, id = 0, offset = 0, defaultInteger = BigInt('0'), defaultReal = 0.0, deprecated = false, required = false, key = false, attributes = [], documentation = [], optional = false, padding = 0) {\n        this.name = name;\n        this.type = type;\n        this.id = id;\n        this.offset = offset;\n        this.defaultInteger = defaultInteger;\n        this.defaultReal = defaultReal;\n        this.deprecated = deprecated;\n        this.required = required;\n        this.key = key;\n        this.attributes = attributes;\n        this.documentation = documentation;\n        this.optional = optional;\n        this.padding = padding;\n    }\n    pack(builder) {\n        const name = (this.name !== null ? builder.createString(this.name) : 0);\n        const type = (this.type !== null ? this.type.pack(builder) : 0);\n        const attributes = reflectionField.createAttributesVector(builder, builder.createObjectOffsetList(this.attributes));\n        const documentation = reflectionField.createDocumentationVector(builder, builder.createObjectOffsetList(this.documentation));\n        reflectionField.startField(builder);\n        reflectionField.addName(builder, name);\n        reflectionField.addType(builder, type);\n        reflectionField.addId(builder, this.id);\n        reflectionField.addOffset(builder, this.offset);\n        reflectionField.addDefaultInteger(builder, this.defaultInteger);\n        reflectionField.addDefaultReal(builder, this.defaultReal);\n        reflectionField.addDeprecated(builder, this.deprecated);\n        reflectionField.addRequired(builder, this.required);\n        reflectionField.addKey(builder, this.key);\n        reflectionField.addAttributes(builder, attributes);\n        reflectionField.addDocumentation(builder, documentation);\n        reflectionField.addOptional(builder, this.optional);\n        reflectionField.addPadding(builder, this.padding);\n        return reflectionField.endField(builder);\n    }\n}\nexport class Object_ {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsObject(bb, obj) {\n        return (obj || new Object_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsObject(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Object_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    fields(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new reflectionField()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    fieldsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    isStruct() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    mutate_is_struct(value) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt8(this.bb_pos + offset, +value);\n        return true;\n    }\n    minalign() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    mutate_minalign(value) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt32(this.bb_pos + offset, value);\n        return true;\n    }\n    bytesize() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    mutate_bytesize(value) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeInt32(this.bb_pos + offset, value);\n        return true;\n    }\n    attributes(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? (obj || new reflectionKeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    attributesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    documentation(index, optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n    documentationLength() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    declarationFile(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 18);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.Object';\n    }\n    static startObject(builder) {\n        builder.startObject(8);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addFields(builder, fieldsOffset) {\n        builder.addFieldOffset(1, fieldsOffset, 0);\n    }\n    static createFieldsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startFieldsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addIsStruct(builder, isStruct) {\n        builder.addFieldInt8(2, +isStruct, +false);\n    }\n    static addMinalign(builder, minalign) {\n        builder.addFieldInt32(3, minalign, 0);\n    }\n    static addBytesize(builder, bytesize) {\n        builder.addFieldInt32(4, bytesize, 0);\n    }\n    static addAttributes(builder, attributesOffset) {\n        builder.addFieldOffset(5, attributesOffset, 0);\n    }\n    static createAttributesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startAttributesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDocumentation(builder, documentationOffset) {\n        builder.addFieldOffset(6, documentationOffset, 0);\n    }\n    static createDocumentationVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startDocumentationVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDeclarationFile(builder, declarationFileOffset) {\n        builder.addFieldOffset(7, declarationFileOffset, 0);\n    }\n    static endObject(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // name\n        builder.requiredField(offset, 6); // fields\n        return offset;\n    }\n    static createObject(builder, nameOffset, fieldsOffset, isStruct, minalign, bytesize, attributesOffset, documentationOffset, declarationFileOffset) {\n        Object_.startObject(builder);\n        Object_.addName(builder, nameOffset);\n        Object_.addFields(builder, fieldsOffset);\n        Object_.addIsStruct(builder, isStruct);\n        Object_.addMinalign(builder, minalign);\n        Object_.addBytesize(builder, bytesize);\n        Object_.addAttributes(builder, attributesOffset);\n        Object_.addDocumentation(builder, documentationOffset);\n        Object_.addDeclarationFile(builder, declarationFileOffset);\n        return Object_.endObject(builder);\n    }\n    unpack() {\n        return new ObjectT(this.name(), this.bb.createObjList(this.fields.bind(this), this.fieldsLength()), this.isStruct(), this.minalign(), this.bytesize(), this.bb.createObjList(this.attributes.bind(this), this.attributesLength()), this.bb.createScalarList(this.documentation.bind(this), this.documentationLength()), this.declarationFile());\n    }\n    unpackTo(_o) {\n        _o.name = this.name();\n        _o.fields = this.bb.createObjList(this.fields.bind(this), this.fieldsLength());\n        _o.isStruct = this.isStruct();\n        _o.minalign = this.minalign();\n        _o.bytesize = this.bytesize();\n        _o.attributes = this.bb.createObjList(this.attributes.bind(this), this.attributesLength());\n        _o.documentation = this.bb.createScalarList(this.documentation.bind(this), this.documentationLength());\n        _o.declarationFile = this.declarationFile();\n    }\n}\nexport class ObjectT {\n    constructor(name = null, fields = [], isStruct = false, minalign = 0, bytesize = 0, attributes = [], documentation = [], declarationFile = null) {\n        this.name = name;\n        this.fields = fields;\n        this.isStruct = isStruct;\n        this.minalign = minalign;\n        this.bytesize = bytesize;\n        this.attributes = attributes;\n        this.documentation = documentation;\n        this.declarationFile = declarationFile;\n    }\n    pack(builder) {\n        const name = (this.name !== null ? builder.createString(this.name) : 0);\n        const fields = reflectionObject.createFieldsVector(builder, builder.createObjectOffsetList(this.fields));\n        const attributes = reflectionObject.createAttributesVector(builder, builder.createObjectOffsetList(this.attributes));\n        const documentation = reflectionObject.createDocumentationVector(builder, builder.createObjectOffsetList(this.documentation));\n        const declarationFile = (this.declarationFile !== null ? builder.createString(this.declarationFile) : 0);\n        return reflectionObject.createObject(builder, name, fields, this.isStruct, this.minalign, this.bytesize, attributes, documentation, declarationFile);\n    }\n}\nexport class RPCCall {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsRPCCall(bb, obj) {\n        return (obj || new RPCCall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsRPCCall(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new RPCCall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    request(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new reflectionObject()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    response(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new reflectionObject()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    attributes(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new reflectionKeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    attributesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    documentation(index, optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n    documentationLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.RPCCall';\n    }\n    static startRPCCall(builder) {\n        builder.startObject(5);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addRequest(builder, requestOffset) {\n        builder.addFieldOffset(1, requestOffset, 0);\n    }\n    static addResponse(builder, responseOffset) {\n        builder.addFieldOffset(2, responseOffset, 0);\n    }\n    static addAttributes(builder, attributesOffset) {\n        builder.addFieldOffset(3, attributesOffset, 0);\n    }\n    static createAttributesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startAttributesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDocumentation(builder, documentationOffset) {\n        builder.addFieldOffset(4, documentationOffset, 0);\n    }\n    static createDocumentationVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startDocumentationVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endRPCCall(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // name\n        builder.requiredField(offset, 6); // request\n        builder.requiredField(offset, 8); // response\n        return offset;\n    }\n    unpack() {\n        return new RPCCallT(this.name(), (this.request() !== null ? this.request().unpack() : null), (this.response() !== null ? this.response().unpack() : null), this.bb.createObjList(this.attributes.bind(this), this.attributesLength()), this.bb.createScalarList(this.documentation.bind(this), this.documentationLength()));\n    }\n    unpackTo(_o) {\n        _o.name = this.name();\n        _o.request = (this.request() !== null ? this.request().unpack() : null);\n        _o.response = (this.response() !== null ? this.response().unpack() : null);\n        _o.attributes = this.bb.createObjList(this.attributes.bind(this), this.attributesLength());\n        _o.documentation = this.bb.createScalarList(this.documentation.bind(this), this.documentationLength());\n    }\n}\nexport class RPCCallT {\n    constructor(name = null, request = null, response = null, attributes = [], documentation = []) {\n        this.name = name;\n        this.request = request;\n        this.response = response;\n        this.attributes = attributes;\n        this.documentation = documentation;\n    }\n    pack(builder) {\n        const name = (this.name !== null ? builder.createString(this.name) : 0);\n        const request = (this.request !== null ? this.request.pack(builder) : 0);\n        const response = (this.response !== null ? this.response.pack(builder) : 0);\n        const attributes = reflectionRPCCall.createAttributesVector(builder, builder.createObjectOffsetList(this.attributes));\n        const documentation = reflectionRPCCall.createDocumentationVector(builder, builder.createObjectOffsetList(this.documentation));\n        reflectionRPCCall.startRPCCall(builder);\n        reflectionRPCCall.addName(builder, name);\n        reflectionRPCCall.addRequest(builder, request);\n        reflectionRPCCall.addResponse(builder, response);\n        reflectionRPCCall.addAttributes(builder, attributes);\n        reflectionRPCCall.addDocumentation(builder, documentation);\n        return reflectionRPCCall.endRPCCall(builder);\n    }\n}\nexport class Service {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsService(bb, obj) {\n        return (obj || new Service()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsService(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Service()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    calls(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new reflectionRPCCall()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    callsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    attributes(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new reflectionKeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    attributesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    documentation(index, optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n    documentationLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    declarationFile(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.Service';\n    }\n    static startService(builder) {\n        builder.startObject(5);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addCalls(builder, callsOffset) {\n        builder.addFieldOffset(1, callsOffset, 0);\n    }\n    static createCallsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCallsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addAttributes(builder, attributesOffset) {\n        builder.addFieldOffset(2, attributesOffset, 0);\n    }\n    static createAttributesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startAttributesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDocumentation(builder, documentationOffset) {\n        builder.addFieldOffset(3, documentationOffset, 0);\n    }\n    static createDocumentationVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startDocumentationVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addDeclarationFile(builder, declarationFileOffset) {\n        builder.addFieldOffset(4, declarationFileOffset, 0);\n    }\n    static endService(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // name\n        return offset;\n    }\n    static createService(builder, nameOffset, callsOffset, attributesOffset, documentationOffset, declarationFileOffset) {\n        Service.startService(builder);\n        Service.addName(builder, nameOffset);\n        Service.addCalls(builder, callsOffset);\n        Service.addAttributes(builder, attributesOffset);\n        Service.addDocumentation(builder, documentationOffset);\n        Service.addDeclarationFile(builder, declarationFileOffset);\n        return Service.endService(builder);\n    }\n    unpack() {\n        return new ServiceT(this.name(), this.bb.createObjList(this.calls.bind(this), this.callsLength()), this.bb.createObjList(this.attributes.bind(this), this.attributesLength()), this.bb.createScalarList(this.documentation.bind(this), this.documentationLength()), this.declarationFile());\n    }\n    unpackTo(_o) {\n        _o.name = this.name();\n        _o.calls = this.bb.createObjList(this.calls.bind(this), this.callsLength());\n        _o.attributes = this.bb.createObjList(this.attributes.bind(this), this.attributesLength());\n        _o.documentation = this.bb.createScalarList(this.documentation.bind(this), this.documentationLength());\n        _o.declarationFile = this.declarationFile();\n    }\n}\nexport class ServiceT {\n    constructor(name = null, calls = [], attributes = [], documentation = [], declarationFile = null) {\n        this.name = name;\n        this.calls = calls;\n        this.attributes = attributes;\n        this.documentation = documentation;\n        this.declarationFile = declarationFile;\n    }\n    pack(builder) {\n        const name = (this.name !== null ? builder.createString(this.name) : 0);\n        const calls = reflectionService.createCallsVector(builder, builder.createObjectOffsetList(this.calls));\n        const attributes = reflectionService.createAttributesVector(builder, builder.createObjectOffsetList(this.attributes));\n        const documentation = reflectionService.createDocumentationVector(builder, builder.createObjectOffsetList(this.documentation));\n        const declarationFile = (this.declarationFile !== null ? builder.createString(this.declarationFile) : 0);\n        return reflectionService.createService(builder, name, calls, attributes, documentation, declarationFile);\n    }\n}\n/**\n * File specific information.\n * Symbols declared within a file may be recovered by iterating over all\n * symbols and examining the `declaration_file` field.\n */\nexport class SchemaFile {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSchemaFile(bb, obj) {\n        return (obj || new SchemaFile()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSchemaFile(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new SchemaFile()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    filename(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    includedFilenames(index, optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n    includedFilenamesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.SchemaFile';\n    }\n    static startSchemaFile(builder) {\n        builder.startObject(2);\n    }\n    static addFilename(builder, filenameOffset) {\n        builder.addFieldOffset(0, filenameOffset, 0);\n    }\n    static addIncludedFilenames(builder, includedFilenamesOffset) {\n        builder.addFieldOffset(1, includedFilenamesOffset, 0);\n    }\n    static createIncludedFilenamesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startIncludedFilenamesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endSchemaFile(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // filename\n        return offset;\n    }\n    static createSchemaFile(builder, filenameOffset, includedFilenamesOffset) {\n        SchemaFile.startSchemaFile(builder);\n        SchemaFile.addFilename(builder, filenameOffset);\n        SchemaFile.addIncludedFilenames(builder, includedFilenamesOffset);\n        return SchemaFile.endSchemaFile(builder);\n    }\n    unpack() {\n        return new SchemaFileT(this.filename(), this.bb.createScalarList(this.includedFilenames.bind(this), this.includedFilenamesLength()));\n    }\n    unpackTo(_o) {\n        _o.filename = this.filename();\n        _o.includedFilenames = this.bb.createScalarList(this.includedFilenames.bind(this), this.includedFilenamesLength());\n    }\n}\nexport class SchemaFileT {\n    constructor(filename = null, includedFilenames = []) {\n        this.filename = filename;\n        this.includedFilenames = includedFilenames;\n    }\n    pack(builder) {\n        const filename = (this.filename !== null ? builder.createString(this.filename) : 0);\n        const includedFilenames = reflectionSchemaFile.createIncludedFilenamesVector(builder, builder.createObjectOffsetList(this.includedFilenames));\n        return reflectionSchemaFile.createSchemaFile(builder, filename, includedFilenames);\n    }\n}\nexport class Schema {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSchema(bb, obj) {\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSchema(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static bufferHasIdentifier(bb) {\n        return bb.__has_identifier('BFBS');\n    }\n    objects(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? (obj || new reflectionObject()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    objectsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    enums(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new reflectionEnum()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    enumsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    fileIdent(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    fileExt(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    rootTable(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new reflectionObject()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    services(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? (obj || new reflectionService()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    servicesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    advancedFeatures() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');\n    }\n    mutate_advanced_features(value) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        if (offset === 0) {\n            return false;\n        }\n        this.bb.writeUint64(this.bb_pos + offset, value);\n        return true;\n    }\n    /**\n     * All the files used in this compilation. Files are relative to where\n     * flatc was invoked.\n     */\n    fbsFiles(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 18);\n        return offset ? (obj || new reflectionSchemaFile()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    fbsFilesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 18);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static getFullyQualifiedName() {\n        return 'reflection.Schema';\n    }\n    static startSchema(builder) {\n        builder.startObject(8);\n    }\n    static addObjects(builder, objectsOffset) {\n        builder.addFieldOffset(0, objectsOffset, 0);\n    }\n    static createObjectsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startObjectsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addEnums(builder, enumsOffset) {\n        builder.addFieldOffset(1, enumsOffset, 0);\n    }\n    static createEnumsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startEnumsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addFileIdent(builder, fileIdentOffset) {\n        builder.addFieldOffset(2, fileIdentOffset, 0);\n    }\n    static addFileExt(builder, fileExtOffset) {\n        builder.addFieldOffset(3, fileExtOffset, 0);\n    }\n    static addRootTable(builder, rootTableOffset) {\n        builder.addFieldOffset(4, rootTableOffset, 0);\n    }\n    static addServices(builder, servicesOffset) {\n        builder.addFieldOffset(5, servicesOffset, 0);\n    }\n    static createServicesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startServicesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addAdvancedFeatures(builder, advancedFeatures) {\n        builder.addFieldInt64(6, advancedFeatures, BigInt('0'));\n    }\n    static addFbsFiles(builder, fbsFilesOffset) {\n        builder.addFieldOffset(7, fbsFilesOffset, 0);\n    }\n    static createFbsFilesVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startFbsFilesVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endSchema(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // objects\n        builder.requiredField(offset, 6); // enums\n        return offset;\n    }\n    static finishSchemaBuffer(builder, offset) {\n        builder.finish(offset, 'BFBS');\n    }\n    static finishSizePrefixedSchemaBuffer(builder, offset) {\n        builder.finish(offset, 'BFBS', true);\n    }\n    unpack() {\n        return new SchemaT(this.bb.createObjList(this.objects.bind(this), this.objectsLength()), this.bb.createObjList(this.enums.bind(this), this.enumsLength()), this.fileIdent(), this.fileExt(), (this.rootTable() !== null ? this.rootTable().unpack() : null), this.bb.createObjList(this.services.bind(this), this.servicesLength()), this.advancedFeatures(), this.bb.createObjList(this.fbsFiles.bind(this), this.fbsFilesLength()));\n    }\n    unpackTo(_o) {\n        _o.objects = this.bb.createObjList(this.objects.bind(this), this.objectsLength());\n        _o.enums = this.bb.createObjList(this.enums.bind(this), this.enumsLength());\n        _o.fileIdent = this.fileIdent();\n        _o.fileExt = this.fileExt();\n        _o.rootTable = (this.rootTable() !== null ? this.rootTable().unpack() : null);\n        _o.services = this.bb.createObjList(this.services.bind(this), this.servicesLength());\n        _o.advancedFeatures = this.advancedFeatures();\n        _o.fbsFiles = this.bb.createObjList(this.fbsFiles.bind(this), this.fbsFilesLength());\n    }\n}\nexport class SchemaT {\n    constructor(objects = [], enums = [], fileIdent = null, fileExt = null, rootTable = null, services = [], advancedFeatures = BigInt('0'), fbsFiles = []) {\n        this.objects = objects;\n        this.enums = enums;\n        this.fileIdent = fileIdent;\n        this.fileExt = fileExt;\n        this.rootTable = rootTable;\n        this.services = services;\n        this.advancedFeatures = advancedFeatures;\n        this.fbsFiles = fbsFiles;\n    }\n    pack(builder) {\n        const objects = reflectionSchema.createObjectsVector(builder, builder.createObjectOffsetList(this.objects));\n        const enums = reflectionSchema.createEnumsVector(builder, builder.createObjectOffsetList(this.enums));\n        const fileIdent = (this.fileIdent !== null ? builder.createString(this.fileIdent) : 0);\n        const fileExt = (this.fileExt !== null ? builder.createString(this.fileExt) : 0);\n        const rootTable = (this.rootTable !== null ? this.rootTable.pack(builder) : 0);\n        const services = reflectionSchema.createServicesVector(builder, builder.createObjectOffsetList(this.services));\n        const fbsFiles = reflectionSchema.createFbsFilesVector(builder, builder.createObjectOffsetList(this.fbsFiles));\n        reflectionSchema.startSchema(builder);\n        reflectionSchema.addObjects(builder, objects);\n        reflectionSchema.addEnums(builder, enums);\n        reflectionSchema.addFileIdent(builder, fileIdent);\n        reflectionSchema.addFileExt(builder, fileExt);\n        reflectionSchema.addRootTable(builder, rootTable);\n        reflectionSchema.addServices(builder, services);\n        reflectionSchema.addAdvancedFeatures(builder, this.advancedFeatures);\n        reflectionSchema.addFbsFiles(builder, fbsFiles);\n        return reflectionSchema.endSchema(builder);\n    }\n}\n//# sourceMappingURL=reflection_generated.js.map","// This file is essentially a clone of upstream flatbuffers code which\n// uses different (less-restrictive) linters.\n/* eslint no-underscore-dangle: 0 */\n/* eslint no-restricted-syntax: 0 */\n/* eslint @foxglove/strict-equality: 0 */\n/* eslint @foxglove/no-boolean-parameters: 0 */\n/* eslint @typescript-eslint/switch-exhaustiveness-check: 0 */\n/* eslint @typescript-eslint/restrict-plus-operands: 0 */\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport * as reflection from \"./reflection_generated\";\n// Returns the size, in bytes, of the given type. For vectors/strings/etc.\n// returns the size of the offset.\nfunction typeSize(baseType) {\n    switch (baseType) {\n        case reflection.BaseType.None:\n        case reflection.BaseType.UType:\n        case reflection.BaseType.Bool:\n        case reflection.BaseType.Byte:\n        case reflection.BaseType.UByte:\n            return 1;\n        case reflection.BaseType.Short:\n        case reflection.BaseType.UShort:\n            return 2;\n        case reflection.BaseType.Int:\n        case reflection.BaseType.UInt:\n            return 4;\n        case reflection.BaseType.Long:\n        case reflection.BaseType.ULong:\n            return 8;\n        case reflection.BaseType.Float:\n            return 4;\n        case reflection.BaseType.Double:\n            return 8;\n        case reflection.BaseType.String:\n        case reflection.BaseType.Vector:\n        case reflection.BaseType.Obj:\n        case reflection.BaseType.Union:\n        case reflection.BaseType.Array:\n            return 4;\n    }\n    return NaN;\n}\n// Returns whether the given type is a scalar type.\nfunction isScalar(baseType) {\n    switch (baseType) {\n        case reflection.BaseType.UType:\n        case reflection.BaseType.Bool:\n        case reflection.BaseType.Byte:\n        case reflection.BaseType.UByte:\n        case reflection.BaseType.Short:\n        case reflection.BaseType.UShort:\n        case reflection.BaseType.Int:\n        case reflection.BaseType.UInt:\n        case reflection.BaseType.Long:\n        case reflection.BaseType.ULong:\n        case reflection.BaseType.Float:\n        case reflection.BaseType.Double:\n            return true;\n        case reflection.BaseType.None:\n        case reflection.BaseType.String:\n        case reflection.BaseType.Vector:\n        case reflection.BaseType.Obj:\n        case reflection.BaseType.Union:\n        case reflection.BaseType.Array:\n            return false;\n    }\n    return false;\n}\n// Returns whether the given type is integer or not.\nfunction isInteger(baseType) {\n    switch (baseType) {\n        case reflection.BaseType.UType:\n        case reflection.BaseType.Bool:\n        case reflection.BaseType.Byte:\n        case reflection.BaseType.UByte:\n        case reflection.BaseType.Short:\n        case reflection.BaseType.UShort:\n        case reflection.BaseType.Int:\n        case reflection.BaseType.UInt:\n        case reflection.BaseType.Long:\n        case reflection.BaseType.ULong:\n            return true;\n        case reflection.BaseType.Float:\n        case reflection.BaseType.Double:\n        case reflection.BaseType.None:\n        case reflection.BaseType.String:\n        case reflection.BaseType.Vector:\n        case reflection.BaseType.Obj:\n        case reflection.BaseType.Union:\n        case reflection.BaseType.Array:\n            return false;\n    }\n    return false;\n}\n// Stores the data associated with a Table within a given buffer.\nexport class Table {\n    // Wrapper to represent an object (Table or Struct) within a ByteBuffer.\n    // The ByteBuffer is the raw data associated with the object.\n    // typeIndex is an index into the schema object vector for the parser\n    // object that this is associated with.\n    // offset is the absolute location within the buffer where the root of the\n    // object is.\n    // Note that a given Table assumes that it is being used with a particular\n    // Schema object.\n    // External users should generally not be using this constructor directly.\n    constructor(bb, typeIndex, offset) {\n        this.bb = bb;\n        this.typeIndex = typeIndex;\n        this.offset = offset;\n    }\n    // Constructs a Table object for the root of a ByteBuffer--this assumes that\n    // the type of the Table is the root table of the Parser that you are using.\n    static getRootTable(bb) {\n        return new Table(bb, -1, bb.readInt32(bb.position()) + bb.position());\n    }\n    // Constructs a table from a type name instead of from a type index.\n    static getNamedTable(bb, schema, type, offset) {\n        for (let ii = 0; ii < schema.objectsLength(); ++ii) {\n            const schemaObject = schema.objects(ii);\n            if (schemaObject !== null && schemaObject.name() === type) {\n                return new Table(bb, ii, offset === undefined ? bb.readInt32(bb.position()) + bb.position() : offset);\n            }\n        }\n        throw new Error(\"Unable to find type \" + type + \" in schema.\");\n    }\n    // Reads a scalar of a given type at a given offset.\n    readScalar(fieldType, offset) {\n        switch (fieldType) {\n            case reflection.BaseType.UType:\n            case reflection.BaseType.Bool:\n                return this.bb.readUint8(offset);\n            case reflection.BaseType.Byte:\n                return this.bb.readInt8(offset);\n            case reflection.BaseType.UByte:\n                return this.bb.readUint8(offset);\n            case reflection.BaseType.Short:\n                return this.bb.readInt16(offset);\n            case reflection.BaseType.UShort:\n                return this.bb.readUint16(offset);\n            case reflection.BaseType.Int:\n                return this.bb.readInt32(offset);\n            case reflection.BaseType.UInt:\n                return this.bb.readUint32(offset);\n            case reflection.BaseType.Long:\n                return this.bb.readInt64(offset);\n            case reflection.BaseType.ULong:\n                return this.bb.readUint64(offset);\n            case reflection.BaseType.Float:\n                return this.bb.readFloat32(offset);\n            case reflection.BaseType.Double:\n                return this.bb.readFloat64(offset);\n        }\n        throw new Error(`Unsupported message type ${fieldType}`);\n    }\n}\n// The Parser class uses a Schema to provide all the utilities required to\n// parse flatbuffers that have a type that is the same as the root_type defined\n// by the Schema.\n// The classical usage would be to, e.g., be reading a channel with a type of\n// \"foo.Bar\". At startup, you would construct a Parser from the channel's\n// Schema. When a message is received on the channel , you would then use\n// Table.getRootTable() on the received buffer to construct the Table, and\n// then access the members using the various methods of the Parser (or just\n// convert the entire object to a javascript Object/JSON using toObject()).\n// There are three basic ways to access fields in a Table:\n// 1) Call toObject(), which turns the entire table into a javascript object.\n//    This is not meant to be particularly fast, but is useful to, e.g.,\n//    convert something to JSON, or as a debugging tool.\n// 2) Use the read*Lambda() accessors: These return a function that lets you\n//    access the specified field given a table. This is used by the plotter\n//    to repeatedly access the same field on a bunch of tables of the same type,\n//    without having to redo all the reflection-related work on every access.\n// 3) Use the read*() accessors: These just call the lambda returned by\n//    read*Lambda() for you, as a convenience. This is cleaner to use, but for\n//    repeated lookups on tables of the same type, this may be inefficient.\nexport class Parser {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    // Parse a Table to a javascript object. This is can be used, e.g., to convert\n    // a flatbuffer Table to JSON.\n    // If readDefaults is set to true, then scalar fields will be filled out with\n    // their default values if not populated; if readDefaults is false and the\n    // field is not populated, the resulting object will not populate the field.\n    toObject(table, readDefaults = false) {\n        const result = {};\n        const schema = this.getType(table.typeIndex);\n        const numFields = schema.fieldsLength();\n        for (let ii = 0; ii < numFields; ++ii) {\n            const field = schema.fields(ii);\n            if (field === null) {\n                throw new Error(\"Malformed schema: field at index \" + ii + \" not populated.\");\n            }\n            const fieldType = field.type();\n            if (fieldType === null) {\n                throw new Error('Malformed schema: \"type\" field of Field not populated.');\n            }\n            const fieldName = field.name();\n            if (fieldName === null) {\n                throw new Error('Malformed schema: \"name\" field of Field not populated.');\n            }\n            const baseType = fieldType.baseType();\n            let fieldValue = null;\n            if (isScalar(baseType)) {\n                fieldValue = this.readScalar(table, fieldName, readDefaults);\n            }\n            else if (baseType === reflection.BaseType.String) {\n                fieldValue = this.readString(table, fieldName);\n            }\n            else if (baseType === reflection.BaseType.Obj) {\n                const subTable = this.readTable(table, fieldName);\n                if (subTable !== null) {\n                    fieldValue = this.toObject(subTable, readDefaults);\n                }\n            }\n            else if (baseType === reflection.BaseType.Vector) {\n                const elementType = fieldType.element();\n                if (isScalar(elementType)) {\n                    fieldValue = this.readVectorOfScalars(table, fieldName);\n                }\n                else if (elementType === reflection.BaseType.String) {\n                    fieldValue = this.readVectorOfStrings(table, fieldName);\n                }\n                else if (elementType === reflection.BaseType.Obj) {\n                    const tables = this.readVectorOfTables(table, fieldName);\n                    if (tables !== null) {\n                        fieldValue = [];\n                        for (const subTable of tables) {\n                            fieldValue.push(this.toObject(subTable, readDefaults));\n                        }\n                    }\n                }\n                else {\n                    throw new Error(\"Vectors of Unions and Arrays are not supported.\");\n                }\n            }\n            else {\n                throw new Error(\"Unions and Arrays are not supported in field \" + field.name());\n            }\n            if (fieldValue !== null) {\n                result[fieldName] = fieldValue;\n            }\n        }\n        return result;\n    }\n    // Returns the Object definition associated with the given type index.\n    getType(typeIndex) {\n        if (typeIndex === -1) {\n            const rootTable = this.schema.rootTable();\n            if (rootTable === null) {\n                throw new Error(\"Malformed schema: No root table.\");\n            }\n            return rootTable;\n        }\n        if (typeIndex < 0 || typeIndex > this.schema.objectsLength()) {\n            throw new Error(\"Type index out-of-range.\");\n        }\n        const table = this.schema.objects(typeIndex);\n        if (table === null) {\n            throw new Error(\"Malformed schema: No object at index \" + typeIndex + \".\");\n        }\n        return table;\n    }\n    // Retrieves the Field schema for the given field name within a given\n    // type index.\n    getField(fieldName, typeIndex) {\n        const schema = this.getType(typeIndex);\n        const numFields = schema.fieldsLength();\n        for (let ii = 0; ii < numFields; ++ii) {\n            const field = schema.fields(ii);\n            if (field === null) {\n                throw new Error(\"Malformed schema: Missing Field table at index \" + ii + \".\");\n            }\n            const name = field.name();\n            if (fieldName === name) {\n                return field;\n            }\n        }\n        throw new Error(\"Couldn't find field \" + fieldName + \" in object \" + schema.name() + \".\");\n    }\n    // Reads a scalar with the given field name from a Table. If readDefaults\n    // is set to false and the field is unset, we will return null. If\n    // readDefaults is true and the field is unset, we will look-up the default\n    // value for the field and return that.\n    // For 64-bit fields, returns a flatbuffer Long rather than a standard number.\n    readScalar(table, fieldName, readDefaults = false) {\n        return this.readScalarLambda(table.typeIndex, fieldName, readDefaults)(table);\n    }\n    // Like readScalar(), except that this returns an accessor for the specified\n    // field, rather than the value of the field itself.\n    // Note that the *Lambda() methods take a typeIndex instead of a Table, which\n    // can be obtained using table.typeIndex.\n    readScalarLambda(typeIndex, fieldName, readDefaults = false) {\n        const field = this.getField(fieldName, typeIndex);\n        const fieldType = field.type();\n        if (fieldType === null) {\n            throw new Error('Malformed schema: \"type\" field of Field not populated.');\n        }\n        const isStruct = this.getType(typeIndex).isStruct();\n        if (!isScalar(fieldType.baseType())) {\n            throw new Error(\"Field \" + fieldName + \" is not a scalar type.\");\n        }\n        if (isStruct) {\n            const baseType = fieldType.baseType();\n            return (t) => {\n                return t.readScalar(baseType, t.offset + field.offset());\n            };\n        }\n        return (t) => {\n            const offset = t.offset + t.bb.__offset(t.offset, field.offset());\n            if (offset === t.offset) {\n                if (!readDefaults) {\n                    return null;\n                }\n                if (isInteger(fieldType.baseType())) {\n                    return field.defaultInteger();\n                }\n                else {\n                    return field.defaultReal();\n                }\n            }\n            return t.readScalar(fieldType.baseType(), offset);\n        };\n    }\n    // Reads a string with the given field name from the provided Table.\n    // If the field is unset, returns null.\n    readString(table, fieldName) {\n        return this.readStringLambda(table.typeIndex, fieldName)(table);\n    }\n    readStringLambda(typeIndex, fieldName) {\n        const field = this.getField(fieldName, typeIndex);\n        const fieldType = field.type();\n        if (fieldType === null) {\n            throw new Error('Malformed schema: \"type\" field of Field not populated.');\n        }\n        if (fieldType.baseType() !== reflection.BaseType.String) {\n            throw new Error(\"Field \" + fieldName + \" is not a string.\");\n        }\n        return (t) => {\n            const offsetToOffset = t.offset + t.bb.__offset(t.offset, field.offset());\n            if (offsetToOffset === t.offset) {\n                return null;\n            }\n            return t.bb.__string(offsetToOffset);\n        };\n    }\n    // Reads a sub-message from the given Table. The sub-message may either be\n    // a struct or a Table. Returns null if the sub-message is not set.\n    readTable(table, fieldName) {\n        return this.readTableLambda(table.typeIndex, fieldName)(table);\n    }\n    readTableLambda(typeIndex, fieldName) {\n        const field = this.getField(fieldName, typeIndex);\n        const fieldType = field.type();\n        if (fieldType === null) {\n            throw new Error('Malformed schema: \"type\" field of Field not populated.');\n        }\n        const parentIsStruct = this.getType(typeIndex).isStruct();\n        if (fieldType.baseType() !== reflection.BaseType.Obj) {\n            throw new Error(\"Field \" + fieldName + \" is not an object type.\");\n        }\n        if (parentIsStruct) {\n            return (t) => {\n                return new Table(t.bb, fieldType.index(), t.offset + field.offset());\n            };\n        }\n        const elementIsStruct = this.getType(fieldType.index()).isStruct();\n        return (table) => {\n            const offsetToOffset = table.offset + table.bb.__offset(table.offset, field.offset());\n            if (offsetToOffset === table.offset) {\n                return null;\n            }\n            const objectStart = elementIsStruct ? offsetToOffset : table.bb.__indirect(offsetToOffset);\n            return new Table(table.bb, fieldType.index(), objectStart);\n        };\n    }\n    // Reads a vector of scalars (like readScalar, may return a vector of BigInt's\n    // instead). Also, will return null if the vector is not set.\n    readVectorOfScalars(table, fieldName) {\n        return this.readVectorOfScalarsLambda(table.typeIndex, fieldName)(table);\n    }\n    readVectorOfScalarsLambda(typeIndex, fieldName) {\n        const field = this.getField(fieldName, typeIndex);\n        const fieldType = field.type();\n        if (fieldType === null) {\n            throw new Error('Malformed schema: \"type\" field of Field not populated.');\n        }\n        if (fieldType.baseType() !== reflection.BaseType.Vector) {\n            throw new Error(\"Field \" + fieldName + \" is not an vector.\");\n        }\n        const elementType = fieldType.element();\n        if (!isScalar(elementType)) {\n            throw new Error(\"Field \" + fieldName + \" is not an vector of scalars.\");\n        }\n        const isUByteVector = elementType === reflection.BaseType.UByte;\n        return (table) => {\n            const offsetToOffset = table.offset + table.bb.__offset(table.offset, field.offset());\n            if (offsetToOffset === table.offset) {\n                return null;\n            }\n            const numElements = table.bb.__vector_len(offsetToOffset);\n            const baseOffset = table.bb.__vector(offsetToOffset);\n            const scalarSize = typeSize(fieldType.element());\n            let result;\n            // If the vector is a byte vector, we can return a slice into the buffer\n            if (isUByteVector) {\n                result = new Uint8Array(table.bb.bytes().buffer, table.bb.bytes().byteOffset + baseOffset, numElements);\n            }\n            else {\n                result = [];\n                for (let ii = 0; ii < numElements; ++ii) {\n                    result.push(table.readScalar(fieldType.element(), baseOffset + scalarSize * ii));\n                }\n            }\n            return result;\n        };\n    }\n    // Reads a vector of tables. Returns null if vector is not set.\n    readVectorOfTables(table, fieldName) {\n        return this.readVectorOfTablesLambda(table.typeIndex, fieldName)(table);\n    }\n    readVectorOfTablesLambda(typeIndex, fieldName) {\n        const field = this.getField(fieldName, typeIndex);\n        const fieldType = field.type();\n        if (fieldType === null) {\n            throw new Error('Malformed schema: \"type\" field of Field not populated.');\n        }\n        if (fieldType.baseType() !== reflection.BaseType.Vector) {\n            throw new Error(\"Field \" + fieldName + \" is not an vector.\");\n        }\n        if (fieldType.element() !== reflection.BaseType.Obj) {\n            throw new Error(\"Field \" + fieldName + \" is not an vector of objects.\");\n        }\n        const elementSchema = this.getType(fieldType.index());\n        const elementIsStruct = elementSchema.isStruct();\n        const elementSize = elementIsStruct ? elementSchema.bytesize() : typeSize(fieldType.element());\n        return (table) => {\n            const offsetToOffset = table.offset + table.bb.__offset(table.offset, field.offset());\n            if (offsetToOffset === table.offset) {\n                return null;\n            }\n            const numElements = table.bb.__vector_len(offsetToOffset);\n            const result = [];\n            const baseOffset = table.bb.__vector(offsetToOffset);\n            for (let ii = 0; ii < numElements; ++ii) {\n                const elementOffset = baseOffset + elementSize * ii;\n                result.push(new Table(table.bb, fieldType.index(), elementIsStruct ? elementOffset : table.bb.__indirect(elementOffset)));\n            }\n            return result;\n        };\n    }\n    // Reads a vector of strings. Returns null if not set.\n    readVectorOfStrings(table, fieldName) {\n        return this.readVectorOfStringsLambda(table.typeIndex, fieldName)(table);\n    }\n    readVectorOfStringsLambda(typeIndex, fieldName) {\n        const field = this.getField(fieldName, typeIndex);\n        const fieldType = field.type();\n        if (fieldType === null) {\n            throw new Error('Malformed schema: \"type\" field of Field not populated.');\n        }\n        if (fieldType.baseType() !== reflection.BaseType.Vector) {\n            throw new Error(\"Field \" + fieldName + \" is not an vector.\");\n        }\n        if (fieldType.element() !== reflection.BaseType.String) {\n            throw new Error(\"Field \" + fieldName + \" is not an vector of strings.\");\n        }\n        return (table) => {\n            const offsetToOffset = table.offset + table.bb.__offset(table.offset, field.offset());\n            if (offsetToOffset === table.offset) {\n                return null;\n            }\n            const numElements = table.bb.__vector_len(offsetToOffset);\n            const result = [];\n            const baseOffset = table.bb.__vector(offsetToOffset);\n            const offsetSize = typeSize(fieldType.element());\n            for (let ii = 0; ii < numElements; ++ii) {\n                result.push(table.bb.__string(baseOffset + offsetSize * ii));\n            }\n            return result;\n        };\n    }\n}\n//# sourceMappingURL=reflection.js.map","\"use strict\";\nvar $protobuf = require(\"../..\");\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\n\nvar Namespace = $protobuf.Namespace,\n    Root      = $protobuf.Root,\n    Enum      = $protobuf.Enum,\n    Type      = $protobuf.Type,\n    Field     = $protobuf.Field,\n    MapField  = $protobuf.MapField,\n    OneOf     = $protobuf.OneOf,\n    Service   = $protobuf.Service,\n    Method    = $protobuf.Method;\n\n// --- Root ---\n\n/**\n * Properties of a FileDescriptorSet message.\n * @interface IFileDescriptorSet\n * @property {IFileDescriptorProto[]} file Files\n */\n\n/**\n * Properties of a FileDescriptorProto message.\n * @interface IFileDescriptorProto\n * @property {string} [name] File name\n * @property {string} [package] Package\n * @property {*} [dependency] Not supported\n * @property {*} [publicDependency] Not supported\n * @property {*} [weakDependency] Not supported\n * @property {IDescriptorProto[]} [messageType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IServiceDescriptorProto[]} [service] Nested services\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\n * @property {IFileOptions} [options] Options\n * @property {*} [sourceCodeInfo] Not supported\n * @property {string} [syntax=\"proto2\"] Syntax\n */\n\n/**\n * Properties of a FileOptions message.\n * @interface IFileOptions\n * @property {string} [javaPackage]\n * @property {string} [javaOuterClassname]\n * @property {boolean} [javaMultipleFiles]\n * @property {boolean} [javaGenerateEqualsAndHash]\n * @property {boolean} [javaStringCheckUtf8]\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\n * @property {string} [goPackage]\n * @property {boolean} [ccGenericServices]\n * @property {boolean} [javaGenericServices]\n * @property {boolean} [pyGenericServices]\n * @property {boolean} [deprecated]\n * @property {boolean} [ccEnableArenas]\n * @property {string} [objcClassPrefix]\n * @property {string} [csharpNamespace]\n */\n\n/**\n * Values of he FileOptions.OptimizeMode enum.\n * @typedef IFileOptionsOptimizeMode\n * @type {number}\n * @property {number} SPEED=1\n * @property {number} CODE_SIZE=2\n * @property {number} LITE_RUNTIME=3\n */\n\n/**\n * Creates a root from a descriptor set.\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\n * @returns {Root} Root instance\n */\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\n\n    var root = new Root();\n\n    if (descriptor.file) {\n        var fileDescriptor,\n            filePackage;\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\n            filePackage = root;\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\n                filePackage = root.define(fileDescriptor[\"package\"]);\n            if (fileDescriptor.name && fileDescriptor.name.length)\n                root.files.push(filePackage.filename = fileDescriptor.name);\n            if (fileDescriptor.messageType)\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\n            if (fileDescriptor.enumType)\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\n            if (fileDescriptor.extension)\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\n            if (fileDescriptor.service)\n                for (i = 0; i < fileDescriptor.service.length; ++i)\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\n            if (opts) {\n                var ks = Object.keys(opts);\n                for (i = 0; i < ks.length; ++i)\n                    filePackage.setOption(ks[i], opts[ks[i]]);\n            }\n        }\n    }\n\n    return root;\n};\n\n/**\n * Converts a root to a descriptor set.\n * @returns {Message<IFileDescriptorSet>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\n    var set = exports.FileDescriptorSet.create();\n    Root_toDescriptorRecursive(this, set.file, syntax);\n    return set;\n};\n\n// Traverses a namespace and assembles the descriptor set\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\n\n    // Create a new file\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\n    if (syntax)\n        file.syntax = syntax;\n    if (!(ns instanceof Root))\n        file[\"package\"] = ns.fullName.substring(1);\n\n    // Add nested types\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\n        if ((nested = ns._nestedArray[i]) instanceof Type)\n            file.messageType.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Enum)\n            file.enumType.push(nested.toDescriptor());\n        else if (nested instanceof Field)\n            file.extension.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Service)\n            file.service.push(nested.toDescriptor());\n        else if (nested instanceof /* plain */ Namespace)\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\n\n    // Keep package-level options\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\n\n    // And keep the file only if there is at least one nested object\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\n        files.push(file);\n}\n\n// --- Type ---\n\n/**\n * Properties of a DescriptorProto message.\n * @interface IDescriptorProto\n * @property {string} [name] Message type name\n * @property {IFieldDescriptorProto[]} [field] Fields\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\n * @property {IDescriptorProto[]} [nestedType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\n * @property {IMessageOptions} [options] Not supported\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\n * @property {string[]} [reservedName] Reserved names\n */\n\n/**\n * Properties of a MessageOptions message.\n * @interface IMessageOptions\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\n */\n\n/**\n * Properties of an ExtensionRange message.\n * @interface IDescriptorProtoExtensionRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\n/**\n * Properties of a ReservedRange message.\n * @interface IDescriptorProtoReservedRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\nvar unnamedMessageIndex = 0;\n\n/**\n * Creates a type from a descriptor.\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Type} Type instance\n */\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    // Create the message type\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\n        i;\n\n    /* Oneofs */ if (descriptor.oneofDecl)\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\n    /* Fields */ if (descriptor.field)\n        for (i = 0; i < descriptor.field.length; ++i) {\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\n            type.add(field);\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\n        }\n    /* Extension fields */ if (descriptor.extension)\n        for (i = 0; i < descriptor.extension.length; ++i)\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\n    /* Nested types */ if (descriptor.nestedType)\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\n                type.setOption(\"map_entry\", true);\n        }\n    /* Nested enums */ if (descriptor.enumType)\n        for (i = 0; i < descriptor.enumType.length; ++i)\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\n        type.extensions = [];\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\n    }\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\n        type.reserved = [];\n        /* Ranges */ if (descriptor.reservedRange)\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\n        /* Names */ if (descriptor.reservedName)\n            for (i = 0; i < descriptor.reservedName.length; ++i)\n                type.reserved.push(descriptor.reservedName[i]);\n    }\n\n    return type;\n};\n\n/**\n * Converts a type to a descriptor.\n * @returns {Message<IDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nType.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\n        i;\n\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\n        var fieldDescriptor;\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\n                    : undefined;\n            descriptor.nestedType.push(exports.DescriptorProto.create({\n                name: fieldDescriptor.typeName,\n                field: [\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\n                ],\n                options: exports.MessageOptions.create({ mapEntry: true })\n            }));\n        }\n    }\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\n        // plain nested namespaces become packages instead in Root#toDescriptor\n    }\n    /* Extension ranges */ if (this.extensions)\n        for (i = 0; i < this.extensions.length; ++i)\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\n    /* Reserved... */ if (this.reserved)\n        for (i = 0; i < this.reserved.length; ++i)\n            /* Names */ if (typeof this.reserved[i] === \"string\")\n                descriptor.reservedName.push(this.reserved[i]);\n            /* Ranges */ else\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\n\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\n\n    return descriptor;\n};\n\n// --- Field ---\n\n/**\n * Properties of a FieldDescriptorProto message.\n * @interface IFieldDescriptorProto\n * @property {string} [name] Field name\n * @property {number} [number] Field id\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\n * @property {IFieldDescriptorProtoType} [type] Field basic type\n * @property {string} [typeName] Field type name\n * @property {string} [extendee] Extended type name\n * @property {string} [defaultValue] Literal default value\n * @property {number} [oneofIndex] Oneof index if part of a oneof\n * @property {*} [jsonName] Not supported\n * @property {IFieldOptions} [options] Field options\n */\n\n/**\n * Values of the FieldDescriptorProto.Label enum.\n * @typedef IFieldDescriptorProtoLabel\n * @type {number}\n * @property {number} LABEL_OPTIONAL=1\n * @property {number} LABEL_REQUIRED=2\n * @property {number} LABEL_REPEATED=3\n */\n\n/**\n * Values of the FieldDescriptorProto.Type enum.\n * @typedef IFieldDescriptorProtoType\n * @type {number}\n * @property {number} TYPE_DOUBLE=1\n * @property {number} TYPE_FLOAT=2\n * @property {number} TYPE_INT64=3\n * @property {number} TYPE_UINT64=4\n * @property {number} TYPE_INT32=5\n * @property {number} TYPE_FIXED64=6\n * @property {number} TYPE_FIXED32=7\n * @property {number} TYPE_BOOL=8\n * @property {number} TYPE_STRING=9\n * @property {number} TYPE_GROUP=10\n * @property {number} TYPE_MESSAGE=11\n * @property {number} TYPE_BYTES=12\n * @property {number} TYPE_UINT32=13\n * @property {number} TYPE_ENUM=14\n * @property {number} TYPE_SFIXED32=15\n * @property {number} TYPE_SFIXED64=16\n * @property {number} TYPE_SINT32=17\n * @property {number} TYPE_SINT64=18\n */\n\n/**\n * Properties of a FieldOptions message.\n * @interface IFieldOptions\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\n */\n\n/**\n * Values of the FieldOptions.JSType enum.\n * @typedef IFieldOptionsJSType\n * @type {number}\n * @property {number} JS_NORMAL=0\n * @property {number} JS_STRING=1\n * @property {number} JS_NUMBER=2\n */\n\n// copied here from parse.js\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\n\n/**\n * Creates a field from a descriptor.\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Field} Field instance\n */\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    if (typeof descriptor.number !== \"number\")\n        throw Error(\"missing field id\");\n\n    // Rewire field type\n    var fieldType;\n    if (descriptor.typeName && descriptor.typeName.length)\n        fieldType = descriptor.typeName;\n    else\n        fieldType = fromDescriptorType(descriptor.type);\n\n    // Rewire field rule\n    var fieldRule;\n    switch (descriptor.label) {\n        // 0 is reserved for errors\n        case 1: fieldRule = undefined; break;\n        case 2: fieldRule = \"required\"; break;\n        case 3: fieldRule = \"repeated\"; break;\n        default: throw Error(\"illegal label: \" + descriptor.label);\n    }\n\n\tvar extendee = descriptor.extendee;\n\tif (descriptor.extendee !== undefined) {\n\t\textendee = extendee.length ? extendee : undefined;\n\t}\n    var field = new Field(\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\n        descriptor.number,\n        fieldType,\n        fieldRule,\n        extendee\n    );\n\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\n\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\n        var defaultValue = descriptor.defaultValue;\n        switch (defaultValue) {\n            case \"true\": case \"TRUE\":\n                defaultValue = true;\n                break;\n            case \"false\": case \"FALSE\":\n                defaultValue = false;\n                break;\n            default:\n                var match = numberRe.exec(defaultValue);\n                if (match)\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\n                break;\n        }\n        field.setOption(\"default\", defaultValue);\n    }\n\n    if (packableDescriptorType(descriptor.type)) {\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\n            if (descriptor.options && !descriptor.options.packed)\n                field.setOption(\"packed\", false);\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\n            field.setOption(\"packed\", false);\n    }\n\n    return field;\n};\n\n/**\n * Converts a field to a descriptor.\n * @returns {Message<IFieldDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nField.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\n\n    if (this.map) {\n\n        descriptor.type = 11; // message\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\n        descriptor.label = 3; // repeated\n\n    } else {\n\n        // Rewire field type\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\n            case 10: // group\n            case 11: // type\n            case 14: // enum\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\n                break;\n        }\n\n        // Rewire field rule\n        switch (this.rule) {\n            case \"repeated\": descriptor.label = 3; break;\n            case \"required\": descriptor.label = 2; break;\n            default: descriptor.label = 1; break;\n        }\n\n    }\n\n    // Handle extension field\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\n\n    // Handle part of oneof\n    if (this.partOf)\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\n            throw Error(\"missing oneof\");\n\n    if (this.options) {\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\n        if (this.options[\"default\"] != null)\n            descriptor.defaultValue = String(this.options[\"default\"]);\n    }\n\n    if (syntax === \"proto3\") { // defaults to packed=true\n        if (!this.packed)\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\n    } else if (this.packed) // defaults to packed=false\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\n\n    return descriptor;\n};\n\n// --- Enum ---\n\n/**\n * Properties of an EnumDescriptorProto message.\n * @interface IEnumDescriptorProto\n * @property {string} [name] Enum name\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\n * @property {IEnumOptions} [options] Enum options\n */\n\n/**\n * Properties of an EnumValueDescriptorProto message.\n * @interface IEnumValueDescriptorProto\n * @property {string} [name] Name\n * @property {number} [number] Value\n * @property {*} [options] Not supported\n */\n\n/**\n * Properties of an EnumOptions message.\n * @interface IEnumOptions\n * @property {boolean} [allowAlias] Whether aliases are allowed\n * @property {boolean} [deprecated]\n */\n\nvar unnamedEnumIndex = 0;\n\n/**\n * Creates an enum from a descriptor.\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Enum} Enum instance\n */\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\n\n    // Construct values object\n    var values = {};\n    if (descriptor.value)\n        for (var i = 0; i < descriptor.value.length; ++i) {\n            var name  = descriptor.value[i].name,\n                value = descriptor.value[i].number || 0;\n            values[name && name.length ? name : \"NAME\" + value] = value;\n        }\n\n    return new Enum(\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\n        values,\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\n    );\n};\n\n/**\n * Converts an enum to a descriptor.\n * @returns {Message<IEnumDescriptorProto>} Descriptor\n */\nEnum.prototype.toDescriptor = function toDescriptor() {\n\n    // Values\n    var values = [];\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\n\n    return exports.EnumDescriptorProto.create({\n        name: this.name,\n        value: values,\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\n    });\n};\n\n// --- OneOf ---\n\n/**\n * Properties of a OneofDescriptorProto message.\n * @interface IOneofDescriptorProto\n * @property {string} [name] Oneof name\n * @property {*} [options] Not supported\n */\n\nvar unnamedOneofIndex = 0;\n\n/**\n * Creates a oneof from a descriptor.\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {OneOf} OneOf instance\n */\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\n\n    return new OneOf(\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\n    );\n};\n\n/**\n * Converts a oneof to a descriptor.\n * @returns {Message<IOneofDescriptorProto>} Descriptor\n */\nOneOf.prototype.toDescriptor = function toDescriptor() {\n    return exports.OneofDescriptorProto.create({\n        name: this.name\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\n    });\n};\n\n// --- Service ---\n\n/**\n * Properties of a ServiceDescriptorProto message.\n * @interface IServiceDescriptorProto\n * @property {string} [name] Service name\n * @property {IMethodDescriptorProto[]} [method] Methods\n * @property {IServiceOptions} [options] Options\n */\n\n/**\n * Properties of a ServiceOptions message.\n * @interface IServiceOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedServiceIndex = 0;\n\n/**\n * Creates a service from a descriptor.\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Service} Service instance\n */\nService.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\n\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\n    if (descriptor.method)\n        for (var i = 0; i < descriptor.method.length; ++i)\n            service.add(Method.fromDescriptor(descriptor.method[i]));\n\n    return service;\n};\n\n/**\n * Converts a service to a descriptor.\n * @returns {Message<IServiceDescriptorProto>} Descriptor\n */\nService.prototype.toDescriptor = function toDescriptor() {\n\n    // Methods\n    var methods = [];\n    for (var i = 0; i < this.methodsArray.length; ++i)\n        methods.push(this._methodsArray[i].toDescriptor());\n\n    return exports.ServiceDescriptorProto.create({\n        name: this.name,\n        method: methods,\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\n    });\n};\n\n// --- Method ---\n\n/**\n * Properties of a MethodDescriptorProto message.\n * @interface IMethodDescriptorProto\n * @property {string} [name] Method name\n * @property {string} [inputType] Request type name\n * @property {string} [outputType] Response type name\n * @property {IMethodOptions} [options] Not supported\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\n */\n\n/**\n * Properties of a MethodOptions message.\n * @interface IMethodOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedMethodIndex = 0;\n\n/**\n * Creates a method from a descriptor.\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Method} Reflected method instance\n */\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\n\n    return new Method(\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\n        \"rpc\",\n        descriptor.inputType,\n        descriptor.outputType,\n        Boolean(descriptor.clientStreaming),\n        Boolean(descriptor.serverStreaming),\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\n    );\n};\n\n/**\n * Converts a method to a descriptor.\n * @returns {Message<IMethodDescriptorProto>} Descriptor\n */\nMethod.prototype.toDescriptor = function toDescriptor() {\n    return exports.MethodDescriptorProto.create({\n        name: this.name,\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\n        clientStreaming: this.requestStream,\n        serverStreaming: this.responseStream,\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\n    });\n};\n\n// --- utility ---\n\n// Converts a descriptor type to a protobuf.js basic type\nfunction fromDescriptorType(type) {\n    switch (type) {\n        // 0 is reserved for errors\n        case 1: return \"double\";\n        case 2: return \"float\";\n        case 3: return \"int64\";\n        case 4: return \"uint64\";\n        case 5: return \"int32\";\n        case 6: return \"fixed64\";\n        case 7: return \"fixed32\";\n        case 8: return \"bool\";\n        case 9: return \"string\";\n        case 12: return \"bytes\";\n        case 13: return \"uint32\";\n        case 15: return \"sfixed32\";\n        case 16: return \"sfixed64\";\n        case 17: return \"sint32\";\n        case 18: return \"sint64\";\n    }\n    throw Error(\"illegal type: \" + type);\n}\n\n// Tests if a descriptor type is packable\nfunction packableDescriptorType(type) {\n    switch (type) {\n        case 1: // double\n        case 2: // float\n        case 3: // int64\n        case 4: // uint64\n        case 5: // int32\n        case 6: // fixed64\n        case 7: // fixed32\n        case 8: // bool\n        case 13: // uint32\n        case 14: // enum (!)\n        case 15: // sfixed32\n        case 16: // sfixed64\n        case 17: // sint32\n        case 18: // sint64\n            return true;\n    }\n    return false;\n}\n\n// Converts a protobuf.js basic type to a descriptor type\nfunction toDescriptorType(type, resolvedType) {\n    switch (type) {\n        // 0 is reserved for errors\n        case \"double\": return 1;\n        case \"float\": return 2;\n        case \"int64\": return 3;\n        case \"uint64\": return 4;\n        case \"int32\": return 5;\n        case \"fixed64\": return 6;\n        case \"fixed32\": return 7;\n        case \"bool\": return 8;\n        case \"string\": return 9;\n        case \"bytes\": return 12;\n        case \"uint32\": return 13;\n        case \"sfixed32\": return 15;\n        case \"sfixed64\": return 16;\n        case \"sint32\": return 17;\n        case \"sint64\": return 18;\n    }\n    if (resolvedType instanceof Enum)\n        return 14;\n    if (resolvedType instanceof Type)\n        return resolvedType.group ? 10 : 11;\n    throw Error(\"illegal type: \" + type);\n}\n\n// Converts descriptor options to an options object\nfunction fromDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\n                val = options[key];\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\n                    val = field.resolvedType.valuesById[val];\n                out.push(underScore(key), val);\n            }\n    return out.length ? $protobuf.util.toObject(out) : undefined;\n}\n\n// Converts an options object to descriptor options\nfunction toDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\n        val = options[key = ks[i]];\n        if (key === \"default\")\n            continue;\n        var field = type.fields[key];\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\n            continue;\n        out.push(key, val);\n    }\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\n}\n\n// Calculates the shortest relative path from `from` to `to`.\nfunction shortname(from, to) {\n    var fromPath = from.fullName.split(\".\"),\n        toPath = to.fullName.split(\".\"),\n        i = 0,\n        j = 0,\n        k = toPath.length - 1;\n    if (!(from instanceof Root) && to instanceof Namespace)\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\n            var other = to.lookup(fromPath[i++], true);\n            if (other !== null && other !== to)\n                break;\n            ++j;\n        }\n    else\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\n    return toPath.slice(j).join(\".\");\n}\n\n// copied here from cli/targets/proto.js\nfunction underScore(str) {\n    return str.substring(0,1)\n         + str.substring(1)\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\n}\n\n// --- exports ---\n\n/**\n * Reflected file descriptor set.\n * @name FileDescriptorSet\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file descriptor proto.\n * @name FileDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected descriptor proto.\n * @name DescriptorProto\n * @type {Type}\n * @property {Type} ExtensionRange\n * @property {Type} ReservedRange\n * @const\n * @tstype $protobuf.Type & {\n *     ExtensionRange: $protobuf.Type,\n *     ReservedRange: $protobuf.Type\n * }\n */\n\n/**\n * Reflected field descriptor proto.\n * @name FieldDescriptorProto\n * @type {Type}\n * @property {Enum} Label\n * @property {Enum} Type\n * @const\n * @tstype $protobuf.Type & {\n *     Label: $protobuf.Enum,\n *     Type: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof descriptor proto.\n * @name OneofDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum descriptor proto.\n * @name EnumDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service descriptor proto.\n * @name ServiceDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value descriptor proto.\n * @name EnumValueDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method descriptor proto.\n * @name MethodDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file options.\n * @name FileOptions\n * @type {Type}\n * @property {Enum} OptimizeMode\n * @const\n * @tstype $protobuf.Type & {\n *     OptimizeMode: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected message options.\n * @name MessageOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected field options.\n * @name FieldOptions\n * @type {Type}\n * @property {Enum} CType\n * @property {Enum} JSType\n * @const\n * @tstype $protobuf.Type & {\n *     CType: $protobuf.Enum,\n *     JSType: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof options.\n * @name OneofOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum options.\n * @name EnumOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value options.\n * @name EnumValueOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service options.\n * @name ServiceOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method options.\n * @name MethodOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected uninterpretet option.\n * @name UninterpretedOption\n * @type {Type}\n * @property {Type} NamePart\n * @const\n * @tstype $protobuf.Type & {\n *     NamePart: $protobuf.Type\n * }\n */\n\n/**\n * Reflected source code info.\n * @name SourceCodeInfo\n * @type {Type}\n * @property {Type} Location\n * @const\n * @tstype $protobuf.Type & {\n *     Location: $protobuf.Type\n * }\n */\n\n/**\n * Reflected generated code info.\n * @name GeneratedCodeInfo\n * @type {Type}\n * @property {Type} Annotation\n * @const\n * @tstype $protobuf.Type & {\n *     Annotation: $protobuf.Type\n * }\n */\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n"],"names":["module","asPromise","fn","ctx","params","offset","index","pending","resolve","reject","err","base64","exports","string","p","n","b64","s64","i","buffer","start","end","parts","chunk","j","t","b","invalidEncoding","c","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","$0","$1","value","functionNameOverride","EventEmitter","evt","listeners","args","fetch","inquire","fs","filename","options","callback","contents","xhr","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","e","path","isAbsolute","normalize","absolute","prefix","originPath","includePath","alreadyNormalized","pool","alloc","slice","size","SIZE","MAX","slab","utf8","len","c1","c2","int32","float32","float64","isLittleEndian","Encoding","bytes_","byte_size","position","result","bb_pos","vtable_offset","vtable","opt_encoding","length","utf8bytes","o","ident","listAccessor","listLength","ret","Builder","opt_initial_size","initial_size","forceDefaults","additional_bytes","align_size","old_buf_size","voffset","defaultValue","obj","bb","new_buf_size","nbb","numfields","vtableloc","trimmed_size","standard_fields","existing_vtable","vt1","outer_loop","vt2","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","table","field","table_start","vtable_start","elem_size","num_elems","alignment","bytes","list","startFunc","BaseType","AdvancedFeatures","Type","flatbuffers","builder","baseType","element","fixedLength","baseSize","elementSize","TypeT","_o","KeyValue","optionalEncoding","keyOffset","valueOffset","KeyValueT","key","EnumVal","nameOffset","unionTypeOffset","documentationOffset","data","numElems","EnumValT","name","unionType","documentation","Enum","valuesOffset","isUnion","underlyingTypeOffset","attributesOffset","declarationFileOffset","EnumT","values","underlyingType","attributes","declarationFile","Field","typeOffset","id","defaultInteger","defaultReal","deprecated","required","optional","padding","FieldT","type","Object_","fieldsOffset","isStruct","minalign","bytesize","ObjectT","fields","RPCCall","requestOffset","responseOffset","RPCCallT","request","response","Service","callsOffset","ServiceT","calls","SchemaFile","filenameOffset","includedFilenamesOffset","SchemaFileT","includedFilenames","Schema","objectsOffset","enumsOffset","fileIdentOffset","fileExtOffset","rootTableOffset","servicesOffset","advancedFeatures","fbsFilesOffset","SchemaT","objects","enums","fileIdent","fileExt","rootTable","services","fbsFiles","typeSize","isScalar","isInteger","Table","typeIndex","schema","ii","schemaObject","fieldType","Parser","readDefaults","numFields","fieldName","fieldValue","subTable","elementType","tables","offsetToOffset","parentIsStruct","elementIsStruct","objectStart","isUByteVector","numElements","baseOffset","scalarSize","elementSchema","elementOffset","offsetSize","$protobuf","Namespace","Root","MapField","OneOf","Method","descriptor","root","fileDescriptor","filePackage","opts","fromDescriptorOptions","ks","syntax","set","Root_toDescriptorRecursive","ns","files","file","nested","toDescriptorOptions","unnamedMessageIndex","fieldDescriptor","keyType","toDescriptorType","valueType","valueTypeName","shortname","numberRe","fromDescriptorType","fieldRule","extendee","match","packableDescriptorType","unnamedEnumIndex","unnamedOneofIndex","unnamedServiceIndex","service","methods","unnamedMethodIndex","resolvedType","out","underScore","from","to","fromPath","toPath","k","other","str","common","commonRe","json","timeType","converter","util","genValuePartial_fromObject","gen","fieldIndex","prop","defaultAlreadyEmitted","keys","isUnsigned","mtype","genValuePartial_toObject","repeatedFields","mapFields","normalFields","arrayDefault","hasKs2","decoder","types","missing","ref","rfield","encoder","genTypePartial","wireType","ReflectionObject","comment","comments","valuesOptions","enm","toJSONOptions","keepComments","ruleRe","rule","extend","ifNotSet","fieldId","prototype","Type_","protobuf","load","loadSync","configure","fieldKeyType","fieldValueType","Message","properties","message","writer","reader","object","requestType","responseType","requestStream","responseStream","parsedOptions","arrayToJSON","array","reserved","clearCache","namespace","nestedJson","names","prev","ptr","part","filterTypes","parentAlreadyChecked","found","Service_","Enum_","parent","propName","opt","newValue","newOpt","className","fullName","Root_","fieldNames","addFieldsToParent","oneof","self","oneofName","parse","tokenize","base10Re","base10NegRe","base16Re","base16NegRe","base8Re","base8NegRe","nameRe","typeRefRe","fqTypeRefRe","preferTrailingComment","tn","next","push","peek","skip","cmnt","head","pkg","imports","weakImports","isProto3","applyCase","illegal","token","insideTryCatch","readString","readValue","acceptTypeRef","parseNumber","readRanges","target","acceptStrings","parseId","acceptNegative","parsePackage","parseImport","whichImports","parseSyntax","parseCommon","parseOption","parseType","parseEnum","parseService","parseExtension","ifBlock","fnIf","fnElse","trailingLine","parseMapField","parseField","parseOneOf","parseGroup","parseInlineOptions","parseEnumValue","dummy","isCustom","option","optionValue","parseOptionValue","setParsedOption","objectResult","lastValue","setOption","prevValue","simpleValue","parseMethod","commentText","method","reference","Reader","BufferReader","LongBits","indexOutOfRange","writeLength","create_array","create","readLongVarint","bits","readFixed32_end","readFixed64","BufferReader_","SYNC","sync","finish","cb","getBundledFileName","idx","altname","process","parsed","resolved","queued","weak","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpc","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","endedByRPC","inherited","rpcService","methodName","delimRe","stringDoubleRe","stringSingleRe","setCommentRe","setCommentAltRe","setCommentSplitRe","whitespaceRe","unescapeRe","unescapeMap","unescape","alternateCommentMode","line","lastCommentLine","stack","stringDelim","subject","re","charAt","setComment","isLeading","lookback","commentOffset","lines","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","isComment","cursor","repeat","curr","isDoc","isLeadingComment","delim","expected","actual","equals","Writer","verifier","wrappers","ctor","ctorProperties","oneofs","wrapper","originalThis","typeName","s","bake","roots","safePropBackslashRe","safePropQuoteRe","camelCaseRe","a","decorateEnumIndex","dst","setProp","zero","zeroHash","unsigned","charCodeAt","hash","mask","part0","part1","part2","Buffer","sizeOrArray","merge","src","newError","CustomError","fieldMap","encoding","invalid","genVerifyValue","genVerifyKey","seenFirstField","oneofProp","type_url","googleApi","messageName","BufferWriter","Op","noop","State","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","writeBytes","tail","BufferWriter_","writeStringBuffer"],"sourceRoot":""}